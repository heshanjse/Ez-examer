

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Thu May 29 15:57:03 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	idataBANK2,global,class=CODE,delta=1
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           	psect	idataCOMRAM
    68  002FE4                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for startExam@F5376
    72  002FE4  41                 	db	65
    73  002FE5  72                 	db	114
    74  002FE6  65                 	db	101
    75  002FE7  20                 	db	32
    76  002FE8  79                 	db	121
    77  002FE9  6F                 	db	111
    78  002FEA  75                 	db	117
    79  002FEB  20                 	db	32
    80  002FEC  73                 	db	115
    81  002FED  75                 	db	117
    82  002FEE  72                 	db	114
    83  002FEF  65                 	db	101
    84  002FF0  3F                 	db	63
    85  002FF1  00                 	db	0
    86                           
    87                           	psect	idataBANK0
    88  002F18                     __pidataBANK0:
    89                           	opt stack 0
    90                           
    91                           ;initializer for setExamTime@F5368
    92  002F18  48                 	db	72
    93  002F19  6F                 	db	111
    94  002F1A  75                 	db	117
    95  002F1B  72                 	db	114
    96  002F1C  73                 	db	115
    97  002F1D  20                 	db	32
    98  002F1E  20                 	db	32
    99  002F1F  20                 	db	32
   100  002F20  20                 	db	32
   101  002F21  20                 	db	32
   102  002F22  3A                 	db	58
   103  002F23  20                 	db	32
   104  002F24  00                 	db	0
   105                           
   106                           ;initializer for setExamTime@F5370
   107  002F25  4D                 	db	77
   108  002F26  69                 	db	105
   109  002F27  6E                 	db	110
   110  002F28  75                 	db	117
   111  002F29  74                 	db	116
   112  002F2A  65                 	db	101
   113  002F2B  73                 	db	115
   114  002F2C  20                 	db	32
   115  002F2D  20                 	db	32
   116  002F2E  20                 	db	32
   117  002F2F  3A                 	db	58
   118  002F30  20                 	db	32
   119  002F31  00                 	db	0
   120                           
   121                           ;initializer for _MCQCnt
   122  002F32  3C                 	db	60
   123                           
   124                           ;initializer for _hourCnt
   125  002F33  01                 	db	1
   126                           
   127                           ;initializer for _minCnt
   128  002F34  1E                 	db	30
   129                           
   130                           	psect	idataBANK1
   131  002C5A                     __pidataBANK1:
   132                           	opt stack 0
   133                           
   134                           ;initializer for examSetup@F5364
   135  002C5A  20                 	db	32
   136  002C5B  33                 	db	51
   137  002C5C  2D                 	db	45
   138  002C5D  46                 	db	70
   139  002C5E  69                 	db	105
   140  002C5F  6E                 	db	110
   141  002C60  61                 	db	97
   142  002C61  6C                 	db	108
   143  002C62  79                 	db	121
   144  002C63  7A                 	db	122
   145  002C64  65                 	db	101
   146  002C65  20                 	db	32
   147  002C66  73                 	db	115
   148  002C67  65                 	db	101
   149  002C68  74                 	db	116
   150  002C69  75                 	db	117
   151  002C6A  70                 	db	112
   152  002C6B  00                 	db	0
   153                           
   154                           ;initializer for examSetup@F5358
   155  002C6C  53                 	db	83
   156  002C6D  65                 	db	101
   157  002C6E  6C                 	db	108
   158  002C6F  65                 	db	101
   159  002C70  63                 	db	99
   160  002C71  74                 	db	116
   161  002C72  20                 	db	32
   162  002C73  61                 	db	97
   163  002C74  6E                 	db	110
   164  002C75  20                 	db	32
   165  002C76  6F                 	db	111
   166  002C77  70                 	db	112
   167  002C78  74                 	db	116
   168  002C79  69                 	db	105
   169  002C7A  6F                 	db	111
   170  002C7B  6E                 	db	110
   171  002C7C  00                 	db	0
   172                           
   173                           ;initializer for examSetup@F5362
   174  002C7D  20                 	db	32
   175  002C7E  32                 	db	50
   176  002C7F  2D                 	db	45
   177  002C80  53                 	db	83
   178  002C81  65                 	db	101
   179  002C82  74                 	db	116
   180  002C83  20                 	db	32
   181  002C84  71                 	db	113
   182  002C85  75                 	db	117
   183  002C86  65                 	db	101
   184  002C87  73                 	db	115
   185  002C88  74                 	db	116
   186  002C89  69                 	db	105
   187  002C8A  6F                 	db	111
   188  002C8B  6E                 	db	110
   189  002C8C  73                 	db	115
   190  002C8D  00                 	db	0
   191                           
   192                           ;initializer for subMenu@F5385
   193  002C8E  53                 	db	83
   194  002C8F  65                 	db	101
   195  002C90  6C                 	db	108
   196  002C91  65                 	db	101
   197  002C92  63                 	db	99
   198  002C93  74                 	db	116
   199  002C94  20                 	db	32
   200  002C95  61                 	db	97
   201  002C96  6E                 	db	110
   202  002C97  20                 	db	32
   203  002C98  6F                 	db	111
   204  002C99  70                 	db	112
   205  002C9A  74                 	db	116
   206  002C9B  69                 	db	105
   207  002C9C  6F                 	db	111
   208  002C9D  6E                 	db	110
   209  002C9E  00                 	db	0
   210                           
   211                           ;initializer for subMenu@F5389
   212  002C9F  32                 	db	50
   213  002CA0  2D                 	db	45
   214  002CA1  76                 	db	118
   215  002CA2  69                 	db	105
   216  002CA3  65                 	db	101
   217  002CA4  77                 	db	119
   218  002CA5  20                 	db	32
   219  002CA6  61                 	db	97
   220  002CA7  6C                 	db	108
   221  002CA8  6C                 	db	108
   222  002CA9  20                 	db	32
   223  002CAA  66                 	db	102
   224  002CAB  6C                 	db	108
   225  002CAC  61                 	db	97
   226  002CAD  67                 	db	103
   227  002CAE  73                 	db	115
   228  002CAF  00                 	db	0
   229                           
   230                           ;initializer for setExamMCQ@F5374
   231  002CB0  4D                 	db	77
   232  002CB1  43                 	db	67
   233  002CB2  51                 	db	81
   234  002CB3  20                 	db	32
   235  002CB4  71                 	db	113
   236  002CB5  75                 	db	117
   237  002CB6  65                 	db	101
   238  002CB7  73                 	db	115
   239  002CB8  74                 	db	116
   240  002CB9  69                 	db	105
   241  002CBA  6F                 	db	111
   242  002CBB  6E                 	db	110
   243  002CBC  73                 	db	115
   244  002CBD  3A                 	db	58
   245  002CBE  20                 	db	32
   246  002CBF  00                 	db	0
   247                           
   248                           ;initializer for runPaper@F5382
   249  002CC0  59                 	db	89
   250  002CC1  6F                 	db	111
   251  002CC2  75                 	db	117
   252  002CC3  72                 	db	114
   253  002CC4  20                 	db	32
   254  002CC5  41                 	db	65
   255  002CC6  6E                 	db	110
   256  002CC7  73                 	db	115
   257  002CC8  77                 	db	119
   258  002CC9  65                 	db	101
   259  002CCA  72                 	db	114
   260  002CCB  3A                 	db	58
   261  002CCC  20                 	db	32
   262  002CCD  20                 	db	32
   263  002CCE  00                 	db	0
   264                           
   265                           	psect	idataBANK2
   266  0024D2                     __pidataBANK2:
   267                           	opt stack 0
   268                           
   269                           ;initializer for examSetup@F5352
   270  0024D2  2A                 	db	42
   271  0024D3  2A                 	db	42
   272  0024D4  2A                 	db	42
   273  0024D5  2A                 	db	42
   274  0024D6  2A                 	db	42
   275  0024D7  2A                 	db	42
   276  0024D8  2A                 	db	42
   277  0024D9  2A                 	db	42
   278  0024DA  2A                 	db	42
   279  0024DB  2A                 	db	42
   280  0024DC  2A                 	db	42
   281  0024DD  2A                 	db	42
   282  0024DE  2A                 	db	42
   283  0024DF  2A                 	db	42
   284  0024E0  2A                 	db	42
   285  0024E1  2A                 	db	42
   286  0024E2  2A                 	db	42
   287  0024E3  2A                 	db	42
   288  0024E4  2A                 	db	42
   289  0024E5  2A                 	db	42
   290  0024E6  00                 	db	0
   291                           
   292                           ;initializer for examSetup@F5354
   293  0024E7  2A                 	db	42
   294  0024E8  20                 	db	32
   295  0024E9  20                 	db	32
   296  0024EA  20                 	db	32
   297  0024EB  20                 	db	32
   298  0024EC  20                 	db	32
   299  0024ED  57                 	db	87
   300  0024EE  65                 	db	101
   301  0024EF  6C                 	db	108
   302  0024F0  63                 	db	99
   303  0024F1  6F                 	db	111
   304  0024F2  6D                 	db	109
   305  0024F3  65                 	db	101
   306  0024F4  20                 	db	32
   307  0024F5  20                 	db	32
   308  0024F6  20                 	db	32
   309  0024F7  20                 	db	32
   310  0024F8  20                 	db	32
   311  0024F9  20                 	db	32
   312  0024FA  2A                 	db	42
   313  0024FB  00                 	db	0
   314                           
   315                           ;initializer for examSetup@F5356
   316  0024FC  2A                 	db	42
   317  0024FD  20                 	db	32
   318  0024FE  20                 	db	32
   319  0024FF  50                 	db	80
   320  002500  72                 	db	114
   321  002501  65                 	db	101
   322  002502  73                 	db	115
   323  002503  73                 	db	115
   324  002504  20                 	db	32
   325  002505  6D                 	db	109
   326  002506  65                 	db	101
   327  002507  6E                 	db	110
   328  002508  75                 	db	117
   329  002509  20                 	db	32
   330  00250A  6B                 	db	107
   331  00250B  65                 	db	101
   332  00250C  79                 	db	121
   333  00250D  20                 	db	32
   334  00250E  20                 	db	32
   335  00250F  2A                 	db	42
   336  002510  00                 	db	0
   337                           
   338                           ;initializer for powerOnScreen@F5416
   339  002511  2A                 	db	42
   340  002512  2A                 	db	42
   341  002513  2A                 	db	42
   342  002514  2A                 	db	42
   343  002515  2A                 	db	42
   344  002516  2A                 	db	42
   345  002517  2A                 	db	42
   346  002518  2A                 	db	42
   347  002519  2A                 	db	42
   348  00251A  2A                 	db	42
   349  00251B  2A                 	db	42
   350  00251C  2A                 	db	42
   351  00251D  2A                 	db	42
   352  00251E  2A                 	db	42
   353  00251F  2A                 	db	42
   354  002520  2A                 	db	42
   355  002521  2A                 	db	42
   356  002522  2A                 	db	42
   357  002523  2A                 	db	42
   358  002524  2A                 	db	42
   359  002525  00                 	db	0
   360                           
   361                           ;initializer for powerOnScreen@F5418
   362  002526  2A                 	db	42
   363  002527  20                 	db	32
   364  002528  20                 	db	32
   365  002529  20                 	db	32
   366  00252A  20                 	db	32
   367  00252B  20                 	db	32
   368  00252C  45                 	db	69
   369  00252D  7A                 	db	122
   370  00252E  2D                 	db	45
   371  00252F  65                 	db	101
   372  002530  78                 	db	120
   373  002531  61                 	db	97
   374  002532  6D                 	db	109
   375  002533  65                 	db	101
   376  002534  72                 	db	114
   377  002535  20                 	db	32
   378  002536  20                 	db	32
   379  002537  20                 	db	32
   380  002538  20                 	db	32
   381  002539  2A                 	db	42
   382  00253A  00                 	db	0
   383                           
   384                           ;initializer for powerOnScreen@F5420
   385  00253B  2A                 	db	42
   386  00253C  20                 	db	32
   387  00253D  20                 	db	32
   388  00253E  20                 	db	32
   389  00253F  20                 	db	32
   390  002540  4D                 	db	77
   391  002541  43                 	db	67
   392  002542  51                 	db	81
   393  002543  20                 	db	32
   394  002544  20                 	db	32
   395  002545  53                 	db	83
   396  002546  79                 	db	121
   397  002547  73                 	db	115
   398  002548  74                 	db	116
   399  002549  65                 	db	101
   400  00254A  6D                 	db	109
   401  00254B  20                 	db	32
   402  00254C  20                 	db	32
   403  00254D  20                 	db	32
   404  00254E  2A                 	db	42
   405  00254F  00                 	db	0
   406                           
   407                           ;initializer for examSetup@F5360
   408  002550  20                 	db	32
   409  002551  31                 	db	49
   410  002552  2D                 	db	45
   411  002553  53                 	db	83
   412  002554  65                 	db	101
   413  002555  74                 	db	116
   414  002556  20                 	db	32
   415  002557  74                 	db	116
   416  002558  69                 	db	105
   417  002559  6D                 	db	109
   418  00255A  65                 	db	101
   419  00255B  20                 	db	32
   420  00255C  70                 	db	112
   421  00255D  65                 	db	101
   422  00255E  72                 	db	114
   423  00255F  69                 	db	105
   424  002560  6F                 	db	111
   425  002561  64                 	db	100
   426  002562  00                 	db	0
   427                           
   428                           ;initializer for setExamTime@F5366
   429  002563  53                 	db	83
   430  002564  65                 	db	101
   431  002565  74                 	db	116
   432  002566  20                 	db	32
   433  002567  74                 	db	116
   434  002568  68                 	db	104
   435  002569  65                 	db	101
   436  00256A  20                 	db	32
   437  00256B  65                 	db	101
   438  00256C  78                 	db	120
   439  00256D  61                 	db	97
   440  00256E  6D                 	db	109
   441  00256F  20                 	db	32
   442  002570  74                 	db	116
   443  002571  69                 	db	105
   444  002572  6D                 	db	109
   445  002573  65                 	db	101
   446  002574  3A                 	db	58
   447  002575  00                 	db	0
   448                           
   449                           ;initializer for subMenu@F5387
   450  002576  31                 	db	49
   451  002577  2D                 	db	45
   452  002578  76                 	db	118
   453  002579  69                 	db	105
   454  00257A  65                 	db	101
   455  00257B  77                 	db	119
   456  00257C  20                 	db	32
   457  00257D  61                 	db	97
   458  00257E  6C                 	db	108
   459  00257F  6C                 	db	108
   460  002580  20                 	db	32
   461  002581  61                 	db	97
   462  002582  6E                 	db	110
   463  002583  73                 	db	115
   464  002584  77                 	db	119
   465  002585  65                 	db	101
   466  002586  72                 	db	114
   467  002587  73                 	db	115
   468  002588  00                 	db	0
   469                           
   470                           ;initializer for runPaper@F5380
   471  002589  51                 	db	81
   472  00258A  75                 	db	117
   473  00258B  65                 	db	101
   474  00258C  73                 	db	115
   475  00258D  74                 	db	116
   476  00258E  69                 	db	105
   477  00258F  6F                 	db	111
   478  002590  6E                 	db	110
   479  002591  20                 	db	32
   480  002592  6E                 	db	110
   481  002593  75                 	db	117
   482  002594  6D                 	db	109
   483  002595  62                 	db	98
   484  002596  65                 	db	101
   485  002597  72                 	db	114
   486  002598  3A                 	db	58
   487  002599  20                 	db	32
   488  00259A  00                 	db	0
   489                           
   490                           ;initializer for setExamMCQ@F5372
   491  00259B  53                 	db	83
   492  00259C  65                 	db	101
   493  00259D  74                 	db	116
   494  00259E  20                 	db	32
   495  00259F  74                 	db	116
   496  0025A0  68                 	db	104
   497  0025A1  65                 	db	101
   498  0025A2  20                 	db	32
   499  0025A3  6E                 	db	110
   500  0025A4  75                 	db	117
   501  0025A5  6D                 	db	109
   502  0025A6  62                 	db	98
   503  0025A7  65                 	db	101
   504  0025A8  72                 	db	114
   505  0025A9  20                 	db	32
   506  0025AA  6F                 	db	111
   507  0025AB  66                 	db	102
   508  0025AC  00                 	db	0
   509                           
   510                           ;initializer for subMenu@F5391
   511  0025AD  33                 	db	51
   512  0025AE  2D                 	db	45
   513  0025AF  53                 	db	83
   514  0025B0  61                 	db	97
   515  0025B1  76                 	db	118
   516  0025B2  65                 	db	101
   517  0025B3  20                 	db	32
   518  0025B4  61                 	db	97
   519  0025B5  6E                 	db	110
   520  0025B6  64                 	db	100
   521  0025B7  20                 	db	32
   522  0025B8  53                 	db	83
   523  0025B9  75                 	db	117
   524  0025BA  62                 	db	98
   525  0025BB  6D                 	db	109
   526  0025BC  69                 	db	105
   527  0025BD  74                 	db	116
   528  0025BE  00                 	db	0
   529  0000                     _EEADR	set	4009
   530  0000                     _EECON1bits	set	4006
   531  0000                     _EECON2	set	4007
   532  0000                     _EEDATA	set	4008
   533  0000                     _INTCONbits	set	4082
   534  0000                     _PIE1bits	set	3997
   535  0000                     _PIR1bits	set	3998
   536  0000                     _PORTB	set	3969
   537  0000                     _PORTDbits	set	3971
   538  0000                     _PR2	set	4043
   539  0000                     _T2CON	set	4042
   540  0000                     _TRISB	set	3987
   541  0000                     _TRISDbits	set	3989
   542                           
   543                           	psect	smallconst
   544  000800                     __psmallconst:
   545                           	opt stack 0
   546  000800  00                 	db	0
   547  000801                     __stringdata:
   548                           	opt stack 0
   549  000801                     STR_11:
   550  000801  48                 	db	72	;'H'
   551  000802  61                 	db	97	;'a'
   552  000803  6E                 	db	110	;'n'
   553  000804  64                 	db	100	;'d'
   554  000805  20                 	db	32
   555  000806  6F                 	db	111	;'o'
   556  000807  76                 	db	118	;'v'
   557  000808  65                 	db	101	;'e'
   558  000809  72                 	db	114	;'r'
   559  00080A  20                 	db	32
   560  00080B  74                 	db	116	;'t'
   561  00080C  68                 	db	104	;'h'
   562  00080D  65                 	db	101	;'e'
   563  00080E  20                 	db	32
   564  00080F  64                 	db	100	;'d'
   565  000810  65                 	db	101	;'e'
   566  000811  76                 	db	118	;'v'
   567  000812  69                 	db	105	;'i'
   568  000813  63                 	db	99	;'c'
   569  000814  65                 	db	101	;'e'
   570  000815  00                 	db	0
   571  000816                     STR_4:
   572  000816  59                 	db	89	;'Y'
   573  000817  6F                 	db	111	;'o'
   574  000818  75                 	db	117	;'u'
   575  000819  20                 	db	32
   576  00081A  68                 	db	104	;'h'
   577  00081B  61                 	db	97	;'a'
   578  00081C  76                 	db	118	;'v'
   579  00081D  65                 	db	101	;'e'
   580  00081E  20                 	db	32
   581  00081F  66                 	db	102	;'f'
   582  000820  69                 	db	105	;'i'
   583  000821  6E                 	db	110	;'n'
   584  000822  69                 	db	105	;'i'
   585  000823  73                 	db	115	;'s'
   586  000824  68                 	db	104	;'h'
   587  000825  65                 	db	101	;'e'
   588  000826  64                 	db	100	;'d'
   589  000827  00                 	db	0
   590  000828                     STR_1:
   591  000828  50                 	db	80	;'P'
   592  000829  72                 	db	114	;'r'
   593  00082A  65                 	db	101	;'e'
   594  00082B  73                 	db	115	;'s'
   595  00082C  73                 	db	115	;'s'
   596  00082D  20                 	db	32
   597  00082E  73                 	db	115	;'s'
   598  00082F  65                 	db	101	;'e'
   599  000830  6C                 	db	108	;'l'
   600  000831  65                 	db	101	;'e'
   601  000832  63                 	db	99	;'c'
   602  000833  74                 	db	116	;'t'
   603  000834  20                 	db	32
   604  000835  74                 	db	116	;'t'
   605  000836  6F                 	db	111	;'o'
   606  000837  00                 	db	0
   607  000838                     STR_2:
   608  000838  53                 	db	83	;'S'
   609  000839  74                 	db	116	;'t'
   610  00083A  61                 	db	97	;'a'
   611  00083B  72                 	db	114	;'r'
   612  00083C  74                 	db	116	;'t'
   613  00083D  20                 	db	32
   614  00083E  74                 	db	116	;'t'
   615  00083F  68                 	db	104	;'h'
   616  000840  65                 	db	101	;'e'
   617  000841  20                 	db	32
   618  000842  65                 	db	101	;'e'
   619  000843  78                 	db	120	;'x'
   620  000844  61                 	db	97	;'a'
   621  000845  6D                 	db	109	;'m'
   622  000846  00                 	db	0
   623  000847                     STR_5:
   624  000847  53                 	db	83	;'S'
   625  000848  75                 	db	117	;'u'
   626  000849  62                 	db	98	;'b'
   627  00084A  6D                 	db	109	;'m'
   628  00084B  69                 	db	105	;'i'
   629  00084C  74                 	db	116	;'t'
   630  00084D  20                 	db	32
   631  00084E  61                 	db	97	;'a'
   632  00084F  6E                 	db	110	;'n'
   633  000850  73                 	db	115	;'s'
   634  000851  77                 	db	119	;'w'
   635  000852  65                 	db	101	;'e'
   636  000853  72                 	db	114	;'r'
   637  000854  73                 	db	115	;'s'
   638  000855  00                 	db	0
   639  000856                     STR_7:
   640  000856  43                 	db	67	;'C'
   641  000857  6F                 	db	111	;'o'
   642  000858  6E                 	db	110	;'n'
   643  000859  6E                 	db	110	;'n'
   644  00085A  65                 	db	101	;'e'
   645  00085B  63                 	db	99	;'c'
   646  00085C  74                 	db	116	;'t'
   647  00085D  69                 	db	105	;'i'
   648  00085E  6E                 	db	110	;'n'
   649  00085F  67                 	db	103	;'g'
   650  000860  2E                 	db	46
   651  000861  2E                 	db	46
   652  000862  00                 	db	0
   653  000863                     STR_12:
   654  000863  54                 	db	84	;'T'
   655  000864  68                 	db	104	;'h'
   656  000865  61                 	db	97	;'a'
   657  000866  6E                 	db	110	;'n'
   658  000867  6B                 	db	107	;'k'
   659  000868  20                 	db	32
   660  000869  79                 	db	121	;'y'
   661  00086A  6F                 	db	111	;'o'
   662  00086B  75                 	db	117	;'u'
   663  00086C  21                 	db	33
   664  00086D  00                 	db	0
   665  00086E                     STR_10:
   666  00086E  54                 	db	84	;'T'
   667  00086F  69                 	db	105	;'i'
   668  000870  6D                 	db	109	;'m'
   669  000871  65                 	db	101	;'e'
   670  000872  20                 	db	32
   671  000873  75                 	db	117	;'u'
   672  000874  70                 	db	112	;'p'
   673  000875  21                 	db	33
   674  000876  00                 	db	0
   675  000877                     STR_3:
   676  000877  53                 	db	83	;'S'
   677  000878  55                 	db	85	;'U'
   678  000879  42                 	db	66	;'B'
   679  00087A  20                 	db	32
   680  00087B  4D                 	db	77	;'M'
   681  00087C  45                 	db	69	;'E'
   682  00087D  4E                 	db	78	;'N'
   683  00087E  55                 	db	85	;'U'
   684  00087F  00                 	db	0
   685  000880                     STR_9:
   686  000880  79                 	db	121	;'y'
   687  000881  65                 	db	101	;'e'
   688  000882  73                 	db	115	;'s'
   689  000883  00                 	db	0
   690  000884                     STR_6:
   691  000884  6F                 	db	111	;'o'
   692  000885  6B                 	db	107	;'k'
   693  000886  00                 	db	0
   694  000887                     STR_8:
   695  000887  6E                 	db	110	;'n'
   696  000888  6F                 	db	111	;'o'
   697  000889  00                 	db	0
   698  00088A                     __end_of__stringdata:
   699                           	opt stack 0
   700                           
   701                           ; #config settings
   702  00088A  00                 	db	0	; dummy byte at the end
   703  0000                     
   704                           	psect	cinit
   705  0027C4                     __pcinit:
   706                           	opt stack 0
   707  0027C4                     start_initialization:
   708                           	opt stack 0
   709  0027C4                     __initialization:
   710                           	opt stack 0
   711                           
   712                           ; Clear objects allocated to BANK1 (1 bytes)
   713  0027C4  0101               	movlb	1
   714  0027C6  6B85               	clrf	__pbssBANK1& (0+255),b
   715                           
   716                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   717  0027C8  6A42               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   718                           
   719                           ; Clear objects allocated to COMRAM (8 bytes)
   720  0027CA  EE00  F03A         	lfsr	0,__pbssCOMRAM
   721  0027CE  0E08               	movlw	8
   722  0027D0                     clear_0:
   723  0027D0  6AEE               	clrf	postinc0,c
   724  0027D2  06E8               	decf	wreg,f,c
   725  0027D4  E1FD               	bnz	clear_0
   726                           
   727                           ; Initialize objects allocated to BANK2 (237 bytes)
   728                           ; load TBLPTR registers with __pidataBANK2
   729  0027D6  0ED2               	movlw	low __pidataBANK2
   730  0027D8  6EF6               	movwf	tblptrl,c
   731  0027DA  0E24               	movlw	high __pidataBANK2
   732  0027DC  6EF7               	movwf	tblptrh,c
   733  0027DE  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   734  0027E0  6EF8               	movwf	tblptru,c
   735  0027E2  EE02  F000         	lfsr	0,__pdataBANK2
   736  0027E6  EE10 F0ED          	lfsr	1,237
   737  0027EA                     copy_data0:
   738  0027EA  0009               	tblrd		*+
   739  0027EC  CFF5 FFEE          	movff	tablat,postinc0
   740  0027F0  50E5               	movf	postdec1,w,c
   741  0027F2  50E1               	movf	fsr1l,w,c
   742  0027F4  E1FA               	bnz	copy_data0
   743                           
   744                           ; Initialize objects allocated to BANK1 (117 bytes)
   745                           ; load TBLPTR registers with __pidataBANK1
   746  0027F6  0E5A               	movlw	low __pidataBANK1
   747  0027F8  6EF6               	movwf	tblptrl,c
   748  0027FA  0E2C               	movlw	high __pidataBANK1
   749  0027FC  6EF7               	movwf	tblptrh,c
   750  0027FE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   751  002800  6EF8               	movwf	tblptru,c
   752  002802  EE01  F000         	lfsr	0,__pdataBANK1
   753  002806  EE10 F075          	lfsr	1,117
   754  00280A                     copy_data1:
   755  00280A  0009               	tblrd		*+
   756  00280C  CFF5 FFEE          	movff	tablat,postinc0
   757  002810  50E5               	movf	postdec1,w,c
   758  002812  50E1               	movf	fsr1l,w,c
   759  002814  E1FA               	bnz	copy_data1
   760                           
   761                           ; Initialize objects allocated to BANK0 (29 bytes)
   762                           ; load TBLPTR registers with __pidataBANK0
   763  002816  0E18               	movlw	low __pidataBANK0
   764  002818  6EF6               	movwf	tblptrl,c
   765  00281A  0E2F               	movlw	high __pidataBANK0
   766  00281C  6EF7               	movwf	tblptrh,c
   767  00281E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   768  002820  6EF8               	movwf	tblptru,c
   769  002822  EE00  F0E3         	lfsr	0,__pdataBANK0
   770  002826  EE10 F01D          	lfsr	1,29
   771  00282A                     copy_data2:
   772  00282A  0009               	tblrd		*+
   773  00282C  CFF5 FFEE          	movff	tablat,postinc0
   774  002830  50E5               	movf	postdec1,w,c
   775  002832  50E1               	movf	fsr1l,w,c
   776  002834  E1FA               	bnz	copy_data2
   777                           
   778                           ; Initialize objects allocated to COMRAM (14 bytes)
   779                           ; load TBLPTR registers with __pidataCOMRAM
   780  002836  0EE4               	movlw	low __pidataCOMRAM
   781  002838  6EF6               	movwf	tblptrl,c
   782  00283A  0E2F               	movlw	high __pidataCOMRAM
   783  00283C  6EF7               	movwf	tblptrh,c
   784  00283E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   785  002840  6EF8               	movwf	tblptru,c
   786  002842  EE00  F02C         	lfsr	0,__pdataCOMRAM
   787  002846  EE10 F00E          	lfsr	1,14
   788  00284A                     copy_data3:
   789  00284A  0009               	tblrd		*+
   790  00284C  CFF5 FFEE          	movff	tablat,postinc0
   791  002850  50E5               	movf	postdec1,w,c
   792  002852  50E1               	movf	fsr1l,w,c
   793  002854  E1FA               	bnz	copy_data3
   794  002856                     end_of_initialization:
   795                           	opt stack 0
   796  002856                     __end_of__initialization:
   797                           	opt stack 0
   798  002856  0E00               	movlw	low (__Lmediumconst shr (0+16))
   799  002858  6EF8               	movwf	tblptru,c
   800  00285A  0100               	movlb	0
   801  00285C  EFF9  F017         	goto	_main	;jump to C main() function
   802                           tblptru	equ	0xFF8
   803                           tblptrh	equ	0xFF7
   804                           tblptrl	equ	0xFF6
   805                           tablat	equ	0xFF5
   806                           postinc0	equ	0xFEE
   807                           wreg	equ	0xFE8
   808                           postdec1	equ	0xFE5
   809                           fsr1l	equ	0xFE1
   810                           
   811                           	psect	bitbssCOMRAM
   812  000210                     __pbitbssCOMRAM:
   813                           	opt stack 0
   814  000210                     get_yes_no@user_option:
   815                           	opt stack 0
   816  000210                     	ds	1
   817                           tblptru	equ	0xFF8
   818                           tblptrh	equ	0xFF7
   819                           tblptrl	equ	0xFF6
   820                           tablat	equ	0xFF5
   821                           postinc0	equ	0xFEE
   822                           wreg	equ	0xFE8
   823                           postdec1	equ	0xFE5
   824                           fsr1l	equ	0xFE1
   825                           
   826                           	psect	bssCOMRAM
   827  00003A                     __pbssCOMRAM:
   828                           	opt stack 0
   829  00003A                     _mili_seconds:
   830                           	opt stack 0
   831  00003A                     	ds	2
   832  00003C                     _GLOBLE_TMOD:
   833                           	opt stack 0
   834  00003C                     	ds	1
   835  00003D                     _MODE:
   836                           	opt stack 0
   837  00003D                     	ds	1
   838  00003E                     _hours:
   839                           	opt stack 0
   840  00003E                     	ds	1
   841  00003F                     _minutes:
   842                           	opt stack 0
   843  00003F                     	ds	1
   844  000040                     _seconds:
   845                           	opt stack 0
   846  000040                     	ds	1
   847  000041                     _timeFrame_cnt:
   848                           	opt stack 0
   849  000041                     	ds	1
   850                           tblptru	equ	0xFF8
   851                           tblptrh	equ	0xFF7
   852                           tblptrl	equ	0xFF6
   853                           tablat	equ	0xFF5
   854                           postinc0	equ	0xFEE
   855                           wreg	equ	0xFE8
   856                           postdec1	equ	0xFE5
   857                           fsr1l	equ	0xFE1
   858                           
   859                           	psect	dataCOMRAM
   860  00002C                     __pdataCOMRAM:
   861                           	opt stack 0
   862  00002C                     startExam@F5376:
   863                           	opt stack 0
   864  00002C                     	ds	14
   865                           tblptru	equ	0xFF8
   866                           tblptrh	equ	0xFF7
   867                           tblptrl	equ	0xFF6
   868                           tablat	equ	0xFF5
   869                           postinc0	equ	0xFEE
   870                           wreg	equ	0xFE8
   871                           postdec1	equ	0xFE5
   872                           fsr1l	equ	0xFE1
   873                           
   874                           	psect	dataBANK0
   875  0000E3                     __pdataBANK0:
   876                           	opt stack 0
   877  0000E3                     setExamTime@F5368:
   878                           	opt stack 0
   879  0000E3                     	ds	13
   880  0000F0                     setExamTime@F5370:
   881                           	opt stack 0
   882  0000F0                     	ds	13
   883  0000FD                     _MCQCnt:
   884                           	opt stack 0
   885  0000FD                     	ds	1
   886  0000FE                     _hourCnt:
   887                           	opt stack 0
   888  0000FE                     	ds	1
   889  0000FF                     _minCnt:
   890                           	opt stack 0
   891  0000FF                     	ds	1
   892                           tblptru	equ	0xFF8
   893                           tblptrh	equ	0xFF7
   894                           tblptrl	equ	0xFF6
   895                           tablat	equ	0xFF5
   896                           postinc0	equ	0xFEE
   897                           wreg	equ	0xFE8
   898                           postdec1	equ	0xFE5
   899                           fsr1l	equ	0xFE1
   900                           
   901                           	psect	bssBANK1
   902  000185                     __pbssBANK1:
   903                           	opt stack 0
   904  000185                     _KEY_BUFFER:
   905                           	opt stack 0
   906  000185                     	ds	1
   907                           tblptru	equ	0xFF8
   908                           tblptrh	equ	0xFF7
   909                           tblptrl	equ	0xFF6
   910                           tablat	equ	0xFF5
   911                           postinc0	equ	0xFEE
   912                           wreg	equ	0xFE8
   913                           postdec1	equ	0xFE5
   914                           fsr1l	equ	0xFE1
   915                           
   916                           	psect	dataBANK1
   917  000100                     __pdataBANK1:
   918                           	opt stack 0
   919  000100                     examSetup@F5364:
   920                           	opt stack 0
   921  000100                     	ds	18
   922  000112                     examSetup@F5358:
   923                           	opt stack 0
   924  000112                     	ds	17
   925  000123                     examSetup@F5362:
   926                           	opt stack 0
   927  000123                     	ds	17
   928  000134                     subMenu@F5385:
   929                           	opt stack 0
   930  000134                     	ds	17
   931  000145                     subMenu@F5389:
   932                           	opt stack 0
   933  000145                     	ds	17
   934  000156                     setExamMCQ@F5374:
   935                           	opt stack 0
   936  000156                     	ds	16
   937  000166                     runPaper@F5382:
   938                           	opt stack 0
   939  000166                     	ds	15
   940                           tblptru	equ	0xFF8
   941                           tblptrh	equ	0xFF7
   942                           tblptrl	equ	0xFF6
   943                           tablat	equ	0xFF5
   944                           postinc0	equ	0xFEE
   945                           wreg	equ	0xFE8
   946                           postdec1	equ	0xFE5
   947                           fsr1l	equ	0xFE1
   948                           
   949                           	psect	dataBANK2
   950  000200                     __pdataBANK2:
   951                           	opt stack 0
   952  000200                     examSetup@F5352:
   953                           	opt stack 0
   954  000200                     	ds	21
   955  000215                     examSetup@F5354:
   956                           	opt stack 0
   957  000215                     	ds	21
   958  00022A                     examSetup@F5356:
   959                           	opt stack 0
   960  00022A                     	ds	21
   961  00023F                     powerOnScreen@F5416:
   962                           	opt stack 0
   963  00023F                     	ds	21
   964  000254                     powerOnScreen@F5418:
   965                           	opt stack 0
   966  000254                     	ds	21
   967  000269                     powerOnScreen@F5420:
   968                           	opt stack 0
   969  000269                     	ds	21
   970  00027E                     examSetup@F5360:
   971                           	opt stack 0
   972  00027E                     	ds	19
   973  000291                     setExamTime@F5366:
   974                           	opt stack 0
   975  000291                     	ds	19
   976  0002A4                     subMenu@F5387:
   977                           	opt stack 0
   978  0002A4                     	ds	19
   979  0002B7                     runPaper@F5380:
   980                           	opt stack 0
   981  0002B7                     	ds	18
   982  0002C9                     setExamMCQ@F5372:
   983                           	opt stack 0
   984  0002C9                     	ds	18
   985  0002DB                     subMenu@F5391:
   986                           	opt stack 0
   987  0002DB                     	ds	18
   988                           tblptru	equ	0xFF8
   989                           tblptrh	equ	0xFF7
   990                           tblptrl	equ	0xFF6
   991                           tablat	equ	0xFF5
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           postdec1	equ	0xFE5
   995                           fsr1l	equ	0xFE1
   996                           
   997                           	psect	cstackBANK3
   998  000300                     __pcstackBANK3:
   999                           	opt stack 0
  1000  000300                     examSetup@txt1:
  1001                           	opt stack 0
  1002                           
  1003                           ; 21 bytes @ 0x0
  1004  000300                     	ds	21
  1005  000315                     examSetup@txt2:
  1006                           	opt stack 0
  1007                           
  1008                           ; 21 bytes @ 0x15
  1009  000315                     	ds	21
  1010  00032A                     examSetup@txt5:
  1011                           	opt stack 0
  1012                           
  1013                           ; 19 bytes @ 0x2A
  1014  00032A                     	ds	19
  1015  00033D                     examSetup@txt7:
  1016                           	opt stack 0
  1017                           
  1018                           ; 18 bytes @ 0x3D
  1019  00033D                     	ds	18
  1020  00034F                     examSetup@txt4:
  1021                           	opt stack 0
  1022                           
  1023                           ; 17 bytes @ 0x4F
  1024  00034F                     	ds	17
  1025  000360                     examSetup@txt6:
  1026                           	opt stack 0
  1027                           
  1028                           ; 17 bytes @ 0x60
  1029  000360                     	ds	17
  1030  000371                     examSetup@txt0:
  1031                           	opt stack 0
  1032                           
  1033                           ; 21 bytes @ 0x71
  1034  000371                     	ds	21
  1035  000386                     examSetup@menuNumber:
  1036                           	opt stack 0
  1037                           
  1038                           ; 1 bytes @ 0x86
  1039  000386                     	ds	1
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           postinc0	equ	0xFEE
  1045                           wreg	equ	0xFE8
  1046                           postdec1	equ	0xFE5
  1047                           fsr1l	equ	0xFE1
  1048                           
  1049                           	psect	cstackBANK1
  1050  000175                     __pcstackBANK1:
  1051                           	opt stack 0
  1052  000175                     startExam@txt1:
  1053                           	opt stack 0
  1054                           
  1055                           ; 14 bytes @ 0x0
  1056  000175                     	ds	14
  1057  000183                     ??_examSetup:
  1058                           
  1059                           ; 0 bytes @ 0xE
  1060  000183                     	ds	2
  1061                           tblptru	equ	0xFF8
  1062                           tblptrh	equ	0xFF7
  1063                           tblptrl	equ	0xFF6
  1064                           tablat	equ	0xFF5
  1065                           postinc0	equ	0xFEE
  1066                           wreg	equ	0xFE8
  1067                           postdec1	equ	0xFE5
  1068                           fsr1l	equ	0xFE1
  1069                           
  1070                           	psect	cstackBANK0
  1071  000060                     __pcstackBANK0:
  1072                           	opt stack 0
  1073  000060                     ??_setExamTime:
  1074  000060                     ??_get_yes_no:
  1075  000060                     view_answers@i:
  1076                           	opt stack 0
  1077  000060                     setExamMCQ@txt1_1:
  1078                           	opt stack 0
  1079                           
  1080                           ; 18 bytes @ 0x0
  1081  000060                     	ds	2
  1082  000062                     view_answers@j:
  1083                           	opt stack 0
  1084  000062                     setExamTime@txt1:
  1085                           	opt stack 0
  1086                           
  1087                           ; 19 bytes @ 0x2
  1088  000062                     	ds	2
  1089  000064                     ??_view_answers:
  1090                           
  1091                           ; 0 bytes @ 0x4
  1092  000064                     	ds	3
  1093  000067                     view_answers@p:
  1094                           	opt stack 0
  1095                           
  1096                           ; 2 bytes @ 0x7
  1097  000067                     	ds	2
  1098  000069                     ??_subMenu:
  1099                           
  1100                           ; 0 bytes @ 0x9
  1101  000069                     	ds	3
  1102  00006C                     subMenu@txt1:
  1103                           	opt stack 0
  1104                           
  1105                           ; 19 bytes @ 0xC
  1106  00006C                     	ds	6
  1107  000072                     setExamMCQ@txt1_2:
  1108                           	opt stack 0
  1109                           
  1110                           ; 16 bytes @ 0x12
  1111  000072                     	ds	3
  1112  000075                     setExamTime@txt1_2:
  1113                           	opt stack 0
  1114                           
  1115                           ; 13 bytes @ 0x15
  1116  000075                     	ds	10
  1117  00007F                     subMenu@txt3:
  1118                           	opt stack 0
  1119                           
  1120                           ; 18 bytes @ 0x1F
  1121  00007F                     	ds	3
  1122  000082                     setExamTime@txt1_3:
  1123                           	opt stack 0
  1124                           
  1125                           ; 13 bytes @ 0x22
  1126  000082                     	ds	15
  1127  000091                     subMenu@txt0:
  1128                           	opt stack 0
  1129                           
  1130                           ; 17 bytes @ 0x31
  1131  000091                     	ds	17
  1132  0000A2                     subMenu@txt2:
  1133                           	opt stack 0
  1134                           
  1135                           ; 17 bytes @ 0x42
  1136  0000A2                     	ds	17
  1137  0000B3                     subMenu@lc:
  1138                           	opt stack 0
  1139                           
  1140                           ; 2 bytes @ 0x53
  1141  0000B3                     	ds	2
  1142  0000B5                     subMenu@i:
  1143                           	opt stack 0
  1144                           
  1145                           ; 2 bytes @ 0x55
  1146  0000B5                     	ds	2
  1147  0000B7                     subMenu@rc:
  1148                           	opt stack 0
  1149                           
  1150                           ; 2 bytes @ 0x57
  1151  0000B7                     	ds	2
  1152  0000B9                     subMenu@menuNumber:
  1153                           	opt stack 0
  1154                           
  1155                           ; 1 bytes @ 0x59
  1156  0000B9                     	ds	1
  1157  0000BA                     ??_runPaper:
  1158                           
  1159                           ; 0 bytes @ 0x5A
  1160  0000BA                     	ds	4
  1161  0000BE                     runPaper@txt1:
  1162                           	opt stack 0
  1163                           
  1164                           ; 18 bytes @ 0x5E
  1165  0000BE                     	ds	18
  1166  0000D0                     runPaper@txt2:
  1167                           	opt stack 0
  1168                           
  1169                           ; 15 bytes @ 0x70
  1170  0000D0                     	ds	15
  1171  0000DF                     runPaper@qCount_tmp:
  1172                           	opt stack 0
  1173                           
  1174                           ; 1 bytes @ 0x7F
  1175  0000DF                     	ds	1
  1176  0000E0                     runPaper@ansBuffer:
  1177                           	opt stack 0
  1178                           
  1179                           ; 2 bytes @ 0x80
  1180  0000E0                     	ds	2
  1181  0000E2                     ??_startExam:
  1182                           
  1183                           ; 0 bytes @ 0x82
  1184  0000E2                     	ds	1
  1185                           tblptru	equ	0xFF8
  1186                           tblptrh	equ	0xFF7
  1187                           tblptrl	equ	0xFF6
  1188                           tablat	equ	0xFF5
  1189                           postinc0	equ	0xFEE
  1190                           wreg	equ	0xFE8
  1191                           postdec1	equ	0xFE5
  1192                           fsr1l	equ	0xFE1
  1193                           
  1194                           	psect	cstackCOMRAM
  1195  000001                     __pcstackCOMRAM:
  1196                           	opt stack 0
  1197  000001                     ??i2_Delay_1000ms:
  1198  000001                     ?i2___awdiv:
  1199                           	opt stack 0
  1200  000001                     ?i2___awmod:
  1201                           	opt stack 0
  1202  000001                     i2Delay_5ms@r0:
  1203                           	opt stack 0
  1204  000001                     i2___awdiv@dividend:
  1205                           	opt stack 0
  1206  000001                     i2___awmod@dividend:
  1207                           	opt stack 0
  1208                           
  1209                           ; 2 bytes @ 0x0
  1210  000001                     	ds	1
  1211  000002                     i2Delay_1000ms@r0:
  1212                           	opt stack 0
  1213                           
  1214                           ; 2 bytes @ 0x1
  1215  000002                     	ds	1
  1216  000003                     ??i2_LCD_WriteCommand:
  1217  000003                     ??i2_LCD_WriteChar:
  1218  000003                     i2___awdiv@divisor:
  1219                           	opt stack 0
  1220  000003                     i2___awmod@divisor:
  1221                           	opt stack 0
  1222                           
  1223                           ; 2 bytes @ 0x2
  1224  000003                     	ds	1
  1225  000004                     i2Delay_1000ms@r1:
  1226                           	opt stack 0
  1227                           
  1228                           ; 1 bytes @ 0x3
  1229  000004                     	ds	1
  1230  000005                     ??i2___awdiv:
  1231  000005                     ??i2___awmod:
  1232  000005                     i2LCD_WriteCommand@cmd:
  1233                           	opt stack 0
  1234  000005                     i2LCD_WriteChar@data:
  1235                           	opt stack 0
  1236                           
  1237                           ; 1 bytes @ 0x4
  1238  000005                     	ds	1
  1239  000006                     i2LCD_WriteStringAt@column:
  1240                           	opt stack 0
  1241  000006                     i2___awdiv@counter:
  1242                           	opt stack 0
  1243  000006                     i2___awmod@counter:
  1244                           	opt stack 0
  1245                           
  1246                           ; 1 bytes @ 0x5
  1247  000006                     	ds	1
  1248  000007                     i2___awdiv@sign:
  1249                           	opt stack 0
  1250  000007                     i2___awmod@sign:
  1251                           	opt stack 0
  1252  000007                     i2LCD_WriteStringAt@string:
  1253                           	opt stack 0
  1254                           
  1255                           ; 2 bytes @ 0x6
  1256  000007                     	ds	1
  1257  000008                     i2___awdiv@quotient:
  1258                           	opt stack 0
  1259                           
  1260                           ; 2 bytes @ 0x7
  1261  000008                     	ds	1
  1262  000009                     i2LCD_WriteStringAt@row:
  1263                           	opt stack 0
  1264                           
  1265                           ; 1 bytes @ 0x8
  1266  000009                     	ds	1
  1267  00000A                     i2LCD_WriteCharAt@column:
  1268                           	opt stack 0
  1269  00000A                     i2LCD_WriteStringAt@data:
  1270                           	opt stack 0
  1271                           
  1272                           ; 1 bytes @ 0x9
  1273  00000A                     	ds	1
  1274  00000B                     i2LCD_WriteCharAt@chr:
  1275                           	opt stack 0
  1276                           
  1277                           ; 1 bytes @ 0xA
  1278  00000B                     	ds	1
  1279  00000C                     i2LCD_WriteCharAt@row:
  1280                           	opt stack 0
  1281                           
  1282                           ; 1 bytes @ 0xB
  1283  00000C                     	ds	1
  1284  00000D                     i2LCD_WriteCharAt@location:
  1285                           	opt stack 0
  1286                           
  1287                           ; 1 bytes @ 0xC
  1288  00000D                     	ds	1
  1289  00000E                     ??_INTERRUPT_SERVICE_ROUTING:
  1290                           
  1291                           ; 0 bytes @ 0xD
  1292  00000E                     	ds	16
  1293  00001E                     ??_Delay_1ms:
  1294  00001E                     ??_Delay_1000ms:
  1295  00001E                     ?___awdiv:
  1296                           	opt stack 0
  1297  00001E                     ?___awmod:
  1298                           	opt stack 0
  1299  00001E                     interruptConfig@state:
  1300                           	opt stack 0
  1301  00001E                     Delay_5ms@r0:
  1302                           	opt stack 0
  1303  00001E                     Delay_10ms@r0:
  1304                           	opt stack 0
  1305  00001E                     Delay_100ms@r0:
  1306                           	opt stack 0
  1307  00001E                     Read_b_eep@badd:
  1308                           	opt stack 0
  1309  00001E                     Write_b_eep@badd:
  1310                           	opt stack 0
  1311  00001E                     ___awdiv@dividend:
  1312                           	opt stack 0
  1313  00001E                     ___awmod@dividend:
  1314                           	opt stack 0
  1315                           
  1316                           ; 2 bytes @ 0x1D
  1317  00001E                     	ds	1
  1318  00001F                     Delay_1ms@r0:
  1319                           	opt stack 0
  1320  00001F                     Delay_1000ms@r0:
  1321                           	opt stack 0
  1322                           
  1323                           ; 2 bytes @ 0x1E
  1324  00001F                     	ds	1
  1325  000020                     ??_LCD_WriteCommand:
  1326  000020                     ??_LCD_WriteChar:
  1327  000020                     Write_b_eep@bdat:
  1328                           	opt stack 0
  1329  000020                     Delay_100ms@r1:
  1330                           	opt stack 0
  1331  000020                     loadAnswer@ans:
  1332                           	opt stack 0
  1333  000020                     ___awdiv@divisor:
  1334                           	opt stack 0
  1335  000020                     ___awmod@divisor:
  1336                           	opt stack 0
  1337                           
  1338                           ; 2 bytes @ 0x1F
  1339  000020                     	ds	1
  1340  000021                     ??_Write_b_eep:
  1341  000021                     Delay_1000ms@r1:
  1342                           	opt stack 0
  1343                           
  1344                           ; 1 bytes @ 0x20
  1345  000021                     	ds	1
  1346  000022                     ??_readKey:
  1347  000022                     ??___awdiv:
  1348  000022                     ??___awmod:
  1349  000022                     LCD_WriteCommand@cmd:
  1350                           	opt stack 0
  1351  000022                     LCD_WriteChar@data:
  1352                           	opt stack 0
  1353  000022                     Write_b_eep@GIE_BIT_VAL:
  1354                           	opt stack 0
  1355  000022                     getBeep@cnt:
  1356                           	opt stack 0
  1357  000022                     loadAnswer@flag:
  1358                           	opt stack 0
  1359                           
  1360                           ; 2 bytes @ 0x21
  1361  000022                     	ds	1
  1362  000023                     ??_initializeDevice:
  1363  000023                     LCD_WriteStringAt@column:
  1364                           	opt stack 0
  1365  000023                     readKey@key:
  1366                           	opt stack 0
  1367  000023                     ___awdiv@counter:
  1368                           	opt stack 0
  1369  000023                     ___awmod@counter:
  1370                           	opt stack 0
  1371  000023                     saveAnswer@ans:
  1372                           	opt stack 0
  1373                           
  1374                           ; 2 bytes @ 0x22
  1375  000023                     	ds	1
  1376  000024                     ??_loadAnswer:
  1377  000024                     initializeDevice@addrs_cnt:
  1378                           	opt stack 0
  1379  000024                     readKey@row_cntr:
  1380                           	opt stack 0
  1381  000024                     ___awdiv@sign:
  1382                           	opt stack 0
  1383  000024                     ___awmod@sign:
  1384                           	opt stack 0
  1385  000024                     LCD_WriteStringAt@string:
  1386                           	opt stack 0
  1387                           
  1388                           ; 2 bytes @ 0x23
  1389  000024                     	ds	1
  1390  000025                     saveAnswer@flag:
  1391                           	opt stack 0
  1392  000025                     ___awdiv@quotient:
  1393                           	opt stack 0
  1394                           
  1395                           ; 2 bytes @ 0x24
  1396  000025                     	ds	1
  1397  000026                     LCD_WriteStringAt@row:
  1398                           	opt stack 0
  1399  000026                     loadAnswer@qNumber:
  1400                           	opt stack 0
  1401                           
  1402                           ; 1 bytes @ 0x25
  1403  000026                     	ds	1
  1404  000027                     ??_saveAnswer:
  1405  000027                     LCD_WriteCharAt@column:
  1406                           	opt stack 0
  1407  000027                     LCD_WriteStringAt@data:
  1408                           	opt stack 0
  1409                           
  1410                           ; 1 bytes @ 0x26
  1411  000027                     	ds	1
  1412  000028                     LCD_WriteCharAt@chr:
  1413                           	opt stack 0
  1414                           
  1415                           ; 1 bytes @ 0x27
  1416  000028                     	ds	1
  1417  000029                     LCD_WriteCharAt@row:
  1418                           	opt stack 0
  1419  000029                     saveAnswer@qNumber:
  1420                           	opt stack 0
  1421                           
  1422                           ; 1 bytes @ 0x28
  1423  000029                     	ds	1
  1424  00002A                     LCD_WriteCharAt@location:
  1425                           	opt stack 0
  1426                           
  1427                           ; 1 bytes @ 0x29
  1428  00002A                     	ds	1
  1429  00002B                     ??_setExamMCQ:
  1430  00002B                     get_yes_no@lcd_location:
  1431                           	opt stack 0
  1432                           
  1433                           ; 1 bytes @ 0x2A
  1434  00002B                     	ds	1
  1435  00002C                     tblptru	equ	0xFF8
  1436                           tblptrh	equ	0xFF7
  1437                           tblptrl	equ	0xFF6
  1438                           tablat	equ	0xFF5
  1439                           postinc0	equ	0xFEE
  1440                           wreg	equ	0xFE8
  1441                           postdec1	equ	0xFE5
  1442                           fsr1l	equ	0xFE1
  1443                           
  1444                           ; 0 bytes @ 0x2B
  1445 ;;
  1446 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1447 ;;
  1448 ;; *************** function _main *****************
  1449 ;; Defined at:
  1450 ;;		line 143 in file "main.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;		None
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;		None               void
  1457 ;; Registers used:
  1458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1464 ;;      Params:         0       0       0       0       0       0       0       0       0
  1465 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1467 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1468 ;;Total ram usage:        0 bytes
  1469 ;; Hardware stack levels required when called:   12
  1470 ;; This function calls:
  1471 ;;		_examSetup
  1472 ;;		_initializeDevice
  1473 ;; This function is called by:
  1474 ;;		Startup code after reset
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text0
  1479  002FF2                     __ptext0:
  1480                           	opt stack 0
  1481  002FF2                     _main:
  1482                           	opt stack 19
  1483                           
  1484                           ;main.c: 144: initializeDevice();
  1485                           
  1486                           ;incstack = 0
  1487  002FF2  ECED  F015         	call	_initializeDevice	;wreg free
  1488                           
  1489                           ;main.c: 145: examSetup();
  1490  002FF6  EC87  F00C         	call	_examSetup	;wreg free
  1491  002FFA  EF0C  F000         	goto	start
  1492  002FFE                     __end_of_main:
  1493                           	opt stack 0
  1494                           tblptru	equ	0xFF8
  1495                           tblptrh	equ	0xFF7
  1496                           tblptrl	equ	0xFF6
  1497                           tablat	equ	0xFF5
  1498                           postinc0	equ	0xFEE
  1499                           wreg	equ	0xFE8
  1500                           postdec1	equ	0xFE5
  1501                           fsr1l	equ	0xFE1
  1502                           
  1503 ;; *************** function _initializeDevice *****************
  1504 ;; Defined at:
  1505 ;;		line 665 in file "main.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  addrs_cnt       1   35[COMRAM] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;		None               void
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, status,0, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1519 ;;      Params:         0       0       0       0       0       0       0       0       0
  1520 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1521 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1522 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1523 ;;Total ram usage:        2 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    7
  1526 ;; This function calls:
  1527 ;;		_Busy_eep
  1528 ;;		_Delay_10ms
  1529 ;;		_LCD_WriteCommand
  1530 ;;		_Write_b_eep
  1531 ;;		_initialize_LCD
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text1
  1538  002BDA                     __ptext1:
  1539                           	opt stack 0
  1540  002BDA                     _initializeDevice:
  1541                           	opt stack 23
  1542                           
  1543                           ;main.c: 682: TRISB = 0XF0;
  1544                           
  1545                           ;incstack = 0
  1546  002BDA  0EF0               	movlw	240
  1547  002BDC  6E93               	movwf	3987,c	;volatile
  1548                           
  1549                           ;main.c: 683: PORTB = 0X0F;
  1550  002BDE  0E0F               	movlw	15
  1551  002BE0  6E81               	movwf	3969,c	;volatile
  1552                           
  1553                           ;main.c: 689: initialize_LCD();
  1554  002BE2  ECAC  F015         	call	_initialize_LCD	;wreg free
  1555                           
  1556                           ;main.c: 690: Delay_10ms();
  1557  002BE6  EC9B  F017         	call	_Delay_10ms	;wreg free
  1558                           
  1559                           ;main.c: 691: Delay_10ms();
  1560  002BEA  EC9B  F017         	call	_Delay_10ms	;wreg free
  1561                           
  1562                           ;main.c: 692: Delay_10ms();
  1563  002BEE  EC9B  F017         	call	_Delay_10ms	;wreg free
  1564                           
  1565                           ;main.c: 693: LCD_WriteCommand(0x0C);
  1566  002BF2  0E0C               	movlw	12
  1567  002BF4  ECFF  F00E         	call	_LCD_WriteCommand
  1568                           
  1569                           ;main.c: 700: PR2 = 156;
  1570  002BF8  0E9C               	movlw	156
  1571  002BFA  6ECB               	movwf	4043,c	;volatile
  1572                           
  1573                           ;main.c: 701: T2CON = 0b01001111;
  1574  002BFC  0E4F               	movlw	79
  1575  002BFE  6ECA               	movwf	4042,c	;volatile
  1576                           
  1577                           ;main.c: 704: PIE1bits.TMR2IE = 1;
  1578  002C00  829D               	bsf	3997,1,c	;volatile
  1579                           
  1580                           ;main.c: 705: PIR1bits.TMR2IF = 0;
  1581  002C02  929E               	bcf	3998,1,c	;volatile
  1582                           
  1583                           ;main.c: 706: INTCONbits.PEIE = 1;
  1584  002C04  8CF2               	bsf	intcon,6,c	;volatile
  1585                           
  1586                           ;main.c: 707: INTCONbits.GIE = 0;
  1587  002C06  9EF2               	bcf	intcon,7,c	;volatile
  1588                           
  1589                           ;main.c: 709: mili_seconds = 0;
  1590  002C08  0E00               	movlw	0
  1591  002C0A  6E3B               	movwf	_mili_seconds+1,c
  1592  002C0C  0E00               	movlw	0
  1593  002C0E  6E3A               	movwf	_mili_seconds,c
  1594                           
  1595                           ;main.c: 710: hours = 0;
  1596  002C10  6E23               	movwf	??_initializeDevice& (0+255),c
  1597  002C12  0E00               	movlw	0
  1598  002C14  6E3E               	movwf	_hours,c
  1599  002C16  5023               	movf	??_initializeDevice& (0+255),w,c
  1600                           
  1601                           ;main.c: 711: minutes = 0;
  1602  002C18  6E23               	movwf	??_initializeDevice& (0+255),c
  1603  002C1A  0E00               	movlw	0
  1604  002C1C  6E3F               	movwf	_minutes,c
  1605  002C1E  5023               	movf	??_initializeDevice& (0+255),w,c
  1606                           
  1607                           ;main.c: 712: seconds = 0;
  1608  002C20  6E23               	movwf	??_initializeDevice& (0+255),c
  1609  002C22  0E00               	movlw	0
  1610  002C24  6E40               	movwf	_seconds,c
  1611  002C26  5023               	movf	??_initializeDevice& (0+255),w,c
  1612                           
  1613                           ;main.c: 714: timeFrame_cnt = 0;
  1614  002C28  6E23               	movwf	??_initializeDevice& (0+255),c
  1615  002C2A  0E00               	movlw	0
  1616  002C2C  6E41               	movwf	_timeFrame_cnt,c
  1617  002C2E  5023               	movf	??_initializeDevice& (0+255),w,c
  1618                           
  1619                           ;main.c: 719: char addrs_cnt;
  1620                           ;main.c: 720: for (addrs_cnt = 0x0A; addrs_cnt <= 254; addrs_cnt++) {
  1621  002C30  6E23               	movwf	??_initializeDevice& (0+255),c
  1622  002C32  0E0A               	movlw	10
  1623  002C34  6E24               	movwf	initializeDevice@addrs_cnt,c
  1624  002C36  5023               	movf	??_initializeDevice& (0+255),w,c
  1625  002C38  2824               	incf	initializeDevice@addrs_cnt,w,c
  1626  002C3A  B4D8               	btfsc	status,2,c
  1627  002C3C  D00D               	goto	l435
  1628                           
  1629                           ;main.c: 721: (Busy_eep(), Write_b_eep(addrs_cnt,0));
  1630  002C3E  ECFF  F017         	call	_Busy_eep	;wreg free
  1631  002C42  C024  F01E         	movff	initializeDevice@addrs_cnt,Write_b_eep@badd
  1632  002C46  6A1F               	clrf	Write_b_eep@badd+1,c
  1633  002C48  6E23               	movwf	??_initializeDevice& (0+255),c
  1634  002C4A  0E00               	movlw	0
  1635  002C4C  6E20               	movwf	Write_b_eep@bdat,c
  1636  002C4E  5023               	movf	??_initializeDevice& (0+255),w,c
  1637  002C50  EC04  F017         	call	_Write_b_eep	;wreg free
  1638  002C54  2A24               	incf	initializeDevice@addrs_cnt,f,c
  1639  002C56  D7F0               	goto	L1
  1640  002C58                     l435:
  1641  002C58  0012               	return	
  1642  002C5A                     __end_of_initializeDevice:
  1643                           	opt stack 0
  1644                           tblptru	equ	0xFF8
  1645                           tblptrh	equ	0xFF7
  1646                           tblptrl	equ	0xFF6
  1647                           tablat	equ	0xFF5
  1648                           intcon	equ	0xFF2
  1649                           postinc0	equ	0xFEE
  1650                           wreg	equ	0xFE8
  1651                           postdec1	equ	0xFE5
  1652                           fsr1l	equ	0xFE1
  1653                           status	equ	0xFD8
  1654                           
  1655 ;; *************** function _initialize_LCD *****************
  1656 ;; Defined at:
  1657 ;;		line 10 in file "LCD_Library.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;		None               void
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1671 ;;      Params:         0       0       0       0       0       0       0       0       0
  1672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1674 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1675 ;;Total ram usage:        0 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    6
  1678 ;; This function calls:
  1679 ;;		_Delay_1ms
  1680 ;;		_Delay_5ms
  1681 ;;		_Delay_5us
  1682 ;;		_LCD_WriteCommand
  1683 ;; This function is called by:
  1684 ;;		_initializeDevice
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text2
  1689  002B58                     __ptext2:
  1690                           	opt stack 0
  1691  002B58                     _initialize_LCD:
  1692                           	opt stack 23
  1693                           
  1694                           ;LCD_Library.c: 12: TRISDbits.TRISD4 = 0; TRISDbits.TRISD5 = 0; TRISDbits.TRISD6 = 0; TR
      +                          ISDbits.TRISD7 = 0;
  1695                           
  1696                           ;incstack = 0
  1697  002B58  9895               	bcf	3989,4,c	;volatile
  1698  002B5A  9A95               	bcf	3989,5,c	;volatile
  1699  002B5C  9C95               	bcf	3989,6,c	;volatile
  1700  002B5E  9E95               	bcf	3989,7,c	;volatile
  1701                           
  1702                           ;LCD_Library.c: 13: PORTDbits.RD4 = 0; PORTDbits.RD5 = 0; PORTDbits.RD6 = 0; PORTDbits.R
      +                          D7 = 0;
  1703  002B60  9883               	bcf	3971,4,c	;volatile
  1704  002B62  9A83               	bcf	3971,5,c	;volatile
  1705  002B64  9C83               	bcf	3971,6,c	;volatile
  1706  002B66  9E83               	bcf	3971,7,c	;volatile
  1707                           
  1708                           ;LCD_Library.c: 16: TRISDbits.TRISD2 = 0; TRISDbits.TRISD3 = 0;
  1709  002B68  9495               	bcf	3989,2,c	;volatile
  1710  002B6A  9695               	bcf	3989,3,c	;volatile
  1711                           
  1712                           ;LCD_Library.c: 22: PORTDbits.RD2 = 0; PORTDbits.RD3 = 0;
  1713  002B6C  9483               	bcf	3971,2,c	;volatile
  1714  002B6E  9683               	bcf	3971,3,c	;volatile
  1715                           
  1716                           ;LCD_Library.c: 28: Delay_5ms();
  1717  002B70  ECB7  F017         	call	_Delay_5ms	;wreg free
  1718                           
  1719                           ;LCD_Library.c: 31: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.R
      +                          D4 = 1;
  1720  002B74  9E83               	bcf	3971,7,c	;volatile
  1721  002B76  9C83               	bcf	3971,6,c	;volatile
  1722  002B78  8A83               	bsf	3971,5,c	;volatile
  1723  002B7A  8883               	bsf	3971,4,c	;volatile
  1724                           
  1725                           ;LCD_Library.c: 32: PORTDbits.RD3 = 1; __nop();__nop();__nop();__nop(); PORTDbits.RD3 = 
      +                          0;
  1726  002B7C  8683               	bsf	3971,3,c	;volatile
  1727  002B7E  F000               	nop	
  1728  002B80  F000               	nop	
  1729  002B82  F000               	nop	
  1730  002B84  F000               	nop	
  1731  002B86  9683               	bcf	3971,3,c	;volatile
  1732                           
  1733                           ;LCD_Library.c: 33: Delay_5ms();
  1734  002B88  ECB7  F017         	call	_Delay_5ms	;wreg free
  1735                           
  1736                           ;LCD_Library.c: 34: PORTDbits.RD3 = 1; __nop();__nop();__nop();__nop(); PORTDbits.RD3 = 
      +                          0;
  1737  002B8C  8683               	bsf	3971,3,c	;volatile
  1738  002B8E  F000               	nop	
  1739  002B90  F000               	nop	
  1740  002B92  F000               	nop	
  1741  002B94  F000               	nop	
  1742  002B96  9683               	bcf	3971,3,c	;volatile
  1743                           
  1744                           ;LCD_Library.c: 35: Delay_1ms();
  1745  002B98  EC7C  F017         	call	_Delay_1ms	;wreg free
  1746                           
  1747                           ;LCD_Library.c: 36: PORTDbits.RD3 = 1; __nop();__nop();__nop();__nop(); PORTDbits.RD3 = 
      +                          0;
  1748  002B9C  8683               	bsf	3971,3,c	;volatile
  1749  002B9E  F000               	nop	
  1750  002BA0  F000               	nop	
  1751  002BA2  F000               	nop	
  1752  002BA4  F000               	nop	
  1753  002BA6  9683               	bcf	3971,3,c	;volatile
  1754                           
  1755                           ;LCD_Library.c: 37: Delay_1ms();
  1756  002BA8  EC7C  F017         	call	_Delay_1ms	;wreg free
  1757                           
  1758                           ;LCD_Library.c: 40: PORTDbits.RD4 = 0;
  1759  002BAC  9883               	bcf	3971,4,c	;volatile
  1760                           
  1761                           ;LCD_Library.c: 41: PORTDbits.RD3 = 1; Delay_5us(); PORTDbits.RD3 = 0;
  1762  002BAE  8683               	bsf	3971,3,c	;volatile
  1763  002BB0  ECA9  F017         	call	_Delay_5us	;wreg free
  1764  002BB4  9683               	bcf	3971,3,c	;volatile
  1765                           
  1766                           ;LCD_Library.c: 42: Delay_5ms();
  1767  002BB6  ECB7  F017         	call	_Delay_5ms	;wreg free
  1768                           
  1769                           ;LCD_Library.c: 48: LCD_WriteCommand(0x28);
  1770  002BBA  0E28               	movlw	40
  1771  002BBC  ECFF  F00E         	call	_LCD_WriteCommand
  1772                           
  1773                           ;LCD_Library.c: 49: LCD_WriteCommand(0x0C);
  1774  002BC0  0E0C               	movlw	12
  1775  002BC2  ECFF  F00E         	call	_LCD_WriteCommand
  1776                           
  1777                           ;LCD_Library.c: 50: LCD_WriteCommand(0x01);
  1778  002BC6  0E01               	movlw	1
  1779  002BC8  ECFF  F00E         	call	_LCD_WriteCommand
  1780                           
  1781                           ;LCD_Library.c: 51: LCD_WriteCommand(0x0E);
  1782  002BCC  0E0E               	movlw	14
  1783  002BCE  ECFF  F00E         	call	_LCD_WriteCommand
  1784                           
  1785                           ;LCD_Library.c: 52: LCD_WriteCommand(0x0C);
  1786  002BD2  0E0C               	movlw	12
  1787  002BD4  ECFF  F00E         	call	_LCD_WriteCommand
  1788  002BD8  0012               	return	
  1789  002BDA                     __end_of_initialize_LCD:
  1790                           	opt stack 0
  1791                           tblptru	equ	0xFF8
  1792                           tblptrh	equ	0xFF7
  1793                           tblptrl	equ	0xFF6
  1794                           tablat	equ	0xFF5
  1795                           intcon	equ	0xFF2
  1796                           postinc0	equ	0xFEE
  1797                           wreg	equ	0xFE8
  1798                           postdec1	equ	0xFE5
  1799                           fsr1l	equ	0xFE1
  1800                           status	equ	0xFD8
  1801                           
  1802 ;; *************** function _Delay_1ms *****************
  1803 ;; Defined at:
  1804 ;;		line 6 in file "MyDelays.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  r0              1   30[COMRAM] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;		None               void
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1818 ;;      Params:         0       0       0       0       0       0       0       0       0
  1819 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1820 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1821 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1822 ;;Total ram usage:        2 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    4
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_initialize_LCD
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text3
  1833  002EF8                     __ptext3:
  1834                           	opt stack 0
  1835  002EF8                     _Delay_1ms:
  1836                           	opt stack 24
  1837                           
  1838                           ;MyDelays.c: 20: register char r0;
  1839                           ;MyDelays.c: 21: r0= 0;
  1840                           
  1841                           ;incstack = 0
  1842  002EF8  6E1E               	movwf	??_Delay_1ms& (0+255),c
  1843  002EFA  0E00               	movlw	0
  1844  002EFC  6E1F               	movwf	Delay_1ms@r0,c
  1845  002EFE  501E               	movf	??_Delay_1ms& (0+255),w,c
  1846                           
  1847                           ;MyDelays.c: 22: while(r0 < 247)
  1848  002F00  D001               	goto	l2274
  1849  002F02                     l2272:
  1850                           
  1851                           ;MyDelays.c: 23: r0++;
  1852  002F02  2A1F               	incf	Delay_1ms@r0,f,c
  1853  002F04                     l2274:
  1854  002F04  0EF6               	movlw	246
  1855  002F06  641F               	cpfsgt	Delay_1ms@r0,c
  1856  002F08  D7FC               	goto	l2272
  1857                           
  1858                           ;MyDelays.c: 24: __nop();__nop();__nop();__nop();__nop();__nop();
  1859  002F0A  F000               	nop	
  1860  002F0C  F000               	nop	
  1861  002F0E  F000               	nop	
  1862  002F10  F000               	nop	
  1863  002F12  F000               	nop	
  1864  002F14  F000               	nop	
  1865  002F16  0012               	return	
  1866  002F18                     __end_of_Delay_1ms:
  1867                           	opt stack 0
  1868                           tblptru	equ	0xFF8
  1869                           tblptrh	equ	0xFF7
  1870                           tblptrl	equ	0xFF6
  1871                           tablat	equ	0xFF5
  1872                           intcon	equ	0xFF2
  1873                           postinc0	equ	0xFEE
  1874                           wreg	equ	0xFE8
  1875                           postdec1	equ	0xFE5
  1876                           fsr1l	equ	0xFE1
  1877                           status	equ	0xFD8
  1878                           
  1879 ;; *************** function _Delay_10ms *****************
  1880 ;; Defined at:
  1881 ;;		line 58 in file "MyDelays.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  r0              2   29[COMRAM] unsigned short 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;		None               void
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1895 ;;      Params:         0       0       0       0       0       0       0       0       0
  1896 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1898 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1899 ;;Total ram usage:        2 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    4
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_initializeDevice
  1906 ;;		_powerOnScreen
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text4
  1911  002F36                     __ptext4:
  1912                           	opt stack 0
  1913  002F36                     _Delay_10ms:
  1914                           	opt stack 25
  1915                           
  1916                           ;MyDelays.c: 72: register unsigned short r0;
  1917                           ;MyDelays.c: 73: r0 = 0;
  1918                           
  1919                           ;incstack = 0
  1920  002F36  0E00               	movlw	0
  1921  002F38  6E1F               	movwf	Delay_10ms@r0+1,c
  1922  002F3A  0E00               	movlw	0
  1923  002F3C  6E1E               	movwf	Delay_10ms@r0,c
  1924                           
  1925                           ;MyDelays.c: 74: while(r0 < 1670)
  1926  002F3E  D002               	goto	l4038
  1927  002F40                     l4036:
  1928                           
  1929                           ;MyDelays.c: 75: r0++;
  1930  002F40  4A1E               	infsnz	Delay_10ms@r0,f,c
  1931  002F42  2A1F               	incf	Delay_10ms@r0+1,f,c
  1932  002F44                     l4038:
  1933  002F44  0E86               	movlw	134
  1934  002F46  5C1E               	subwf	Delay_10ms@r0,w,c
  1935  002F48  0E06               	movlw	6
  1936  002F4A  581F               	subwfb	Delay_10ms@r0+1,w,c
  1937  002F4C  B0D8               	btfsc	status,0,c
  1938  002F4E  0012               	return	
  1939  002F50  D7F7               	goto	l4036
  1940  002F52                     __end_of_Delay_10ms:
  1941                           	opt stack 0
  1942                           tblptru	equ	0xFF8
  1943                           tblptrh	equ	0xFF7
  1944                           tblptrl	equ	0xFF6
  1945                           tablat	equ	0xFF5
  1946                           intcon	equ	0xFF2
  1947                           postinc0	equ	0xFEE
  1948                           wreg	equ	0xFE8
  1949                           postdec1	equ	0xFE5
  1950                           fsr1l	equ	0xFE1
  1951                           status	equ	0xFD8
  1952                           
  1953 ;; *************** function _examSetup *****************
  1954 ;; Defined at:
  1955 ;;		line 157 in file "main.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  txt0           21  113[BANK3 ] unsigned char [21]
  1960 ;;  txt2           21   21[BANK3 ] unsigned char [21]
  1961 ;;  txt1           21    0[BANK3 ] unsigned char [21]
  1962 ;;  txt5           19   42[BANK3 ] unsigned char [19]
  1963 ;;  txt7           18   61[BANK3 ] unsigned char [18]
  1964 ;;  txt6           17   96[BANK3 ] unsigned char [17]
  1965 ;;  txt4           17   79[BANK3 ] unsigned char [17]
  1966 ;;  menuNumber      1  134[BANK3 ] unsigned char 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;		None               void
  1969 ;; Registers used:
  1970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1976 ;;      Params:         0       0       0       0       0       0       0       0       0
  1977 ;;      Locals:         0       0       0       0     135       0       0       0       0
  1978 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1979 ;;      Totals:         0       0       2       0     135       0       0       0       0
  1980 ;;Total ram usage:      137 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:   11
  1983 ;; This function calls:
  1984 ;;		_LCD_WriteCharAt
  1985 ;;		_LCD_WriteCommand
  1986 ;;		_LCD_WriteStringAt
  1987 ;;		_interruptConfig
  1988 ;;		_readKey
  1989 ;;		_setExamMCQ
  1990 ;;		_setExamTime
  1991 ;;		_startExam
  1992 ;; This function is called by:
  1993 ;;		_main
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text5
  1998  00190E                     __ptext5:
  1999                           	opt stack 0
  2000  00190E                     _examSetup:
  2001                           	opt stack 19
  2002                           
  2003                           ;main.c: 158: interruptConfig(0);
  2004                           
  2005                           ;incstack = 0
  2006  00190E  0E00               	movlw	0
  2007  001910  ECEA  F017         	call	_interruptConfig
  2008                           
  2009                           ;main.c: 159: char menuNumber = 1;
  2010  001914  0101               	movlb	1	; () banked
  2011  001916  6F83               	movwf	??_examSetup& (0+255),b
  2012  001918  0E01               	movlw	1
  2013  00191A  0103               	movlb	3	; () banked
  2014  00191C  0103               	movlb	3	; () banked
  2015  00191E  6F86               	movwf	examSetup@menuNumber& (0+255),b
  2016  001920  0101               	movlb	1	; () banked
  2017  001922  5183               	movf	??_examSetup& (0+255),w,b
  2018                           
  2019                           ; BSR set to: 1
  2020                           ;main.c: 160: char txt0[] = "********************";
  2021  001924  EE22  F000         	lfsr	2,examSetup@F5352
  2022  001928  EE13  F071         	lfsr	1,examSetup@txt0
  2023  00192C  0E15               	movlw	21
  2024  00192E                     u5361:
  2025  00192E  CFDE FFE6          	movff	postinc2,postinc1
  2026  001932  2EE8               	decfsz	wreg,f,c
  2027  001934  D7FC               	goto	u5361
  2028                           
  2029                           ; BSR set to: 1
  2030                           ;main.c: 161: char txt1[] = "*     Welcome      *";
  2031  001936  EE22  F015         	lfsr	2,examSetup@F5354
  2032  00193A  EE13  F000         	lfsr	1,examSetup@txt1
  2033  00193E  0E15               	movlw	21
  2034  001940                     u5371:
  2035  001940  CFDE FFE6          	movff	postinc2,postinc1
  2036  001944  2EE8               	decfsz	wreg,f,c
  2037  001946  D7FC               	goto	u5371
  2038                           
  2039                           ; BSR set to: 1
  2040                           ;main.c: 162: char txt2[] = "*  Press menu key  *";
  2041  001948  EE22  F02A         	lfsr	2,examSetup@F5356
  2042  00194C  EE13  F015         	lfsr	1,examSetup@txt2
  2043  001950  0E15               	movlw	21
  2044  001952                     u5381:
  2045  001952  CFDE FFE6          	movff	postinc2,postinc1
  2046  001956  2EE8               	decfsz	wreg,f,c
  2047  001958  D7FC               	goto	u5381
  2048                           
  2049                           ; BSR set to: 1
  2050                           ;main.c: 164: char txt4[] = "Select an option";
  2051  00195A  EE21  F012         	lfsr	2,examSetup@F5358
  2052  00195E  EE13  F04F         	lfsr	1,examSetup@txt4
  2053  001962  0E11               	movlw	17
  2054  001964                     u5391:
  2055  001964  CFDE FFE6          	movff	postinc2,postinc1
  2056  001968  2EE8               	decfsz	wreg,f,c
  2057  00196A  D7FC               	goto	u5391
  2058                           
  2059                           ; BSR set to: 1
  2060                           ;main.c: 165: char txt5[] = " 1-Set time period";
  2061  00196C  EE22  F07E         	lfsr	2,examSetup@F5360
  2062  001970  EE13  F02A         	lfsr	1,examSetup@txt5
  2063  001974  0E13               	movlw	19
  2064  001976                     u5401:
  2065  001976  CFDE FFE6          	movff	postinc2,postinc1
  2066  00197A  2EE8               	decfsz	wreg,f,c
  2067  00197C  D7FC               	goto	u5401
  2068                           
  2069                           ; BSR set to: 1
  2070                           ;main.c: 166: char txt6[] = " 2-Set questions";
  2071  00197E  EE21  F023         	lfsr	2,examSetup@F5362
  2072  001982  EE13  F060         	lfsr	1,examSetup@txt6
  2073  001986  0E11               	movlw	17
  2074  001988                     u5411:
  2075  001988  CFDE FFE6          	movff	postinc2,postinc1
  2076  00198C  2EE8               	decfsz	wreg,f,c
  2077  00198E  D7FC               	goto	u5411
  2078                           
  2079                           ; BSR set to: 1
  2080                           ;main.c: 167: char txt7[] = " 3-Finalyze setup";
  2081  001990  EE21  F000         	lfsr	2,examSetup@F5364
  2082  001994  EE13  F03D         	lfsr	1,examSetup@txt7
  2083  001998  0E12               	movlw	18
  2084  00199A                     u5421:
  2085  00199A  CFDE FFE6          	movff	postinc2,postinc1
  2086  00199E  2EE8               	decfsz	wreg,f,c
  2087  0019A0  D7FC               	goto	u5421
  2088                           
  2089                           ; BSR set to: 1
  2090                           ;main.c: 172: LCD_WriteCommand(0x01);
  2091  0019A2  0E01               	movlw	1
  2092  0019A4  ECFF  F00E         	call	_LCD_WriteCommand
  2093                           
  2094                           ;main.c: 173: LCD_WriteStringAt(1, 1, txt0);
  2095  0019A8  0101               	movlb	1	; () banked
  2096  0019AA  6F83               	movwf	??_examSetup& (0+255),b
  2097  0019AC  0E01               	movlw	1
  2098  0019AE  6E23               	movwf	LCD_WriteStringAt@column,c
  2099  0019B0  0101               	movlb	1	; () banked
  2100  0019B2  5183               	movf	??_examSetup& (0+255),w,b
  2101  0019B4  0103               	movlb	3	; () banked
  2102  0019B6  0E03               	movlw	high examSetup@txt0
  2103  0019B8  6E25               	movwf	LCD_WriteStringAt@string+1,c
  2104  0019BA  0103               	movlb	3	; () banked
  2105  0019BC  0E71               	movlw	low examSetup@txt0
  2106  0019BE  6E24               	movwf	LCD_WriteStringAt@string,c
  2107  0019C0  0E01               	movlw	1
  2108  0019C2  EC1A  F015         	call	_LCD_WriteStringAt
  2109                           
  2110                           ;main.c: 174: LCD_WriteStringAt(2, 1, txt1);
  2111  0019C6  0101               	movlb	1	; () banked
  2112  0019C8  6F83               	movwf	??_examSetup& (0+255),b
  2113  0019CA  0E01               	movlw	1
  2114  0019CC  6E23               	movwf	LCD_WriteStringAt@column,c
  2115  0019CE  0101               	movlb	1	; () banked
  2116  0019D0  5183               	movf	??_examSetup& (0+255),w,b
  2117  0019D2  0103               	movlb	3	; () banked
  2118  0019D4  0E03               	movlw	high examSetup@txt1
  2119  0019D6  6E25               	movwf	LCD_WriteStringAt@string+1,c
  2120  0019D8  0103               	movlb	3	; () banked
  2121  0019DA  0E00               	movlw	low examSetup@txt1
  2122  0019DC  6E24               	movwf	LCD_WriteStringAt@string,c
  2123  0019DE  0E02               	movlw	2
  2124  0019E0  EC1A  F015         	call	_LCD_WriteStringAt
  2125                           
  2126                           ;main.c: 175: LCD_WriteStringAt(3, 1, txt2);
  2127  0019E4  0101               	movlb	1	; () banked
  2128  0019E6  6F83               	movwf	??_examSetup& (0+255),b
  2129  0019E8  0E01               	movlw	1
  2130  0019EA  6E23               	movwf	LCD_WriteStringAt@column,c
  2131  0019EC  0101               	movlb	1	; () banked
  2132  0019EE  5183               	movf	??_examSetup& (0+255),w,b
  2133  0019F0  0103               	movlb	3	; () banked
  2134  0019F2  0E03               	movlw	high examSetup@txt2
  2135  0019F4  6E25               	movwf	LCD_WriteStringAt@string+1,c
  2136  0019F6  0103               	movlb	3	; () banked
  2137  0019F8  0E15               	movlw	low examSetup@txt2
  2138  0019FA  6E24               	movwf	LCD_WriteStringAt@string,c
  2139  0019FC  0E03               	movlw	3
  2140  0019FE  EC1A  F015         	call	_LCD_WriteStringAt
  2141                           
  2142                           ;main.c: 176: LCD_WriteStringAt(4, 1, txt0);
  2143  001A02  0101               	movlb	1	; () banked
  2144  001A04  6F83               	movwf	??_examSetup& (0+255),b
  2145  001A06  0E01               	movlw	1
  2146  001A08  6E23               	movwf	LCD_WriteStringAt@column,c
  2147  001A0A  0101               	movlb	1	; () banked
  2148  001A0C  5183               	movf	??_examSetup& (0+255),w,b
  2149  001A0E  0103               	movlb	3	; () banked
  2150  001A10  0E03               	movlw	high examSetup@txt0
  2151  001A12  6E25               	movwf	LCD_WriteStringAt@string+1,c
  2152  001A14  0103               	movlb	3	; () banked
  2153  001A16  0E71               	movlw	low examSetup@txt0
  2154  001A18  6E24               	movwf	LCD_WriteStringAt@string,c
  2155  001A1A  0E04               	movlw	4
  2156  001A1C  EC1A  F015         	call	_LCD_WriteStringAt
  2157  001A20                     l5906:
  2158                           
  2159                           ;main.c: 180: if (readKey() == 0x14) {
  2160  001A20  EC30  F014         	call	_readKey	;wreg free
  2161  001A24  0A14               	xorlw	20
  2162  001A26  A4D8               	btfss	status,2,c
  2163  001A28  D7FB               	goto	l5906
  2164  001A2A                     l5908:
  2165                           
  2166                           ;main.c: 183: LCD_WriteCommand(0x01);
  2167  001A2A  0E01               	movlw	1
  2168  001A2C  ECFF  F00E         	call	_LCD_WriteCommand
  2169                           
  2170                           ;main.c: 184: LCD_WriteStringAt(1, 1, txt4);
  2171  001A30  0101               	movlb	1	; () banked
  2172  001A32  6F83               	movwf	??_examSetup& (0+255),b
  2173  001A34  0E01               	movlw	1
  2174  001A36  6E23               	movwf	LCD_WriteStringAt@column,c
  2175  001A38  0101               	movlb	1	; () banked
  2176  001A3A  5183               	movf	??_examSetup& (0+255),w,b
  2177  001A3C  0103               	movlb	3	; () banked
  2178  001A3E  0E03               	movlw	high examSetup@txt4
  2179  001A40  6E25               	movwf	LCD_WriteStringAt@string+1,c
  2180  001A42  0103               	movlb	3	; () banked
  2181  001A44  0E4F               	movlw	low examSetup@txt4
  2182  001A46  6E24               	movwf	LCD_WriteStringAt@string,c
  2183  001A48  0E01               	movlw	1
  2184  001A4A  EC1A  F015         	call	_LCD_WriteStringAt
  2185                           
  2186                           ;main.c: 185: LCD_WriteStringAt(2, 3, txt5);
  2187  001A4E  0101               	movlb	1	; () banked
  2188  001A50  6F83               	movwf	??_examSetup& (0+255),b
  2189  001A52  0E03               	movlw	3
  2190  001A54  6E23               	movwf	LCD_WriteStringAt@column,c
  2191  001A56  0101               	movlb	1	; () banked
  2192  001A58  5183               	movf	??_examSetup& (0+255),w,b
  2193  001A5A  0103               	movlb	3	; () banked
  2194  001A5C  0E03               	movlw	high examSetup@txt5
  2195  001A5E  6E25               	movwf	LCD_WriteStringAt@string+1,c
  2196  001A60  0103               	movlb	3	; () banked
  2197  001A62  0E2A               	movlw	low examSetup@txt5
  2198  001A64  6E24               	movwf	LCD_WriteStringAt@string,c
  2199  001A66  0E02               	movlw	2
  2200  001A68  EC1A  F015         	call	_LCD_WriteStringAt
  2201                           
  2202                           ;main.c: 186: LCD_WriteStringAt(3, 3, txt6);
  2203  001A6C  0101               	movlb	1	; () banked
  2204  001A6E  6F83               	movwf	??_examSetup& (0+255),b
  2205  001A70  0E03               	movlw	3
  2206  001A72  6E23               	movwf	LCD_WriteStringAt@column,c
  2207  001A74  0101               	movlb	1	; () banked
  2208  001A76  5183               	movf	??_examSetup& (0+255),w,b
  2209  001A78  0103               	movlb	3	; () banked
  2210  001A7A  0E03               	movlw	high examSetup@txt6
  2211  001A7C  6E25               	movwf	LCD_WriteStringAt@string+1,c
  2212  001A7E  0103               	movlb	3	; () banked
  2213  001A80  0E60               	movlw	low examSetup@txt6
  2214  001A82  6E24               	movwf	LCD_WriteStringAt@string,c
  2215  001A84  0E03               	movlw	3
  2216  001A86  EC1A  F015         	call	_LCD_WriteStringAt
  2217                           
  2218                           ;main.c: 187: LCD_WriteStringAt(4, 3, txt7);
  2219  001A8A  0101               	movlb	1	; () banked
  2220  001A8C  6F83               	movwf	??_examSetup& (0+255),b
  2221  001A8E  0E03               	movlw	3
  2222  001A90  6E23               	movwf	LCD_WriteStringAt@column,c
  2223  001A92  0101               	movlb	1	; () banked
  2224  001A94  5183               	movf	??_examSetup& (0+255),w,b
  2225  001A96  0103               	movlb	3	; () banked
  2226  001A98  0E03               	movlw	high examSetup@txt7
  2227  001A9A  6E25               	movwf	LCD_WriteStringAt@string+1,c
  2228  001A9C  0103               	movlb	3	; () banked
  2229  001A9E  0E3D               	movlw	low examSetup@txt7
  2230  001AA0  6E24               	movwf	LCD_WriteStringAt@string,c
  2231  001AA2  0E04               	movlw	4
  2232  001AA4  EC1A  F015         	call	_LCD_WriteStringAt
  2233                           
  2234                           ;main.c: 188: LCD_WriteCharAt(menuNumber + 1, 1, 0b01111110);
  2235  001AA8  0101               	movlb	1	; () banked
  2236  001AAA  6F83               	movwf	??_examSetup& (0+255),b
  2237  001AAC  0E01               	movlw	1
  2238  001AAE  6E27               	movwf	LCD_WriteCharAt@column,c
  2239  001AB0  0101               	movlb	1	; () banked
  2240  001AB2  5183               	movf	??_examSetup& (0+255),w,b
  2241  001AB4  0101               	movlb	1	; () banked
  2242  001AB6  6F84               	movwf	(??_examSetup+1)& (0+255),b
  2243  001AB8  0E7E               	movlw	126
  2244  001ABA  6E28               	movwf	LCD_WriteCharAt@chr,c
  2245  001ABC  0101               	movlb	1	; () banked
  2246  001ABE  5184               	movf	(??_examSetup+1)& (0+255),w,b
  2247  001AC0  0103               	movlb	3	; () banked
  2248  001AC2  0103               	movlb	3	; () banked
  2249  001AC4  2986               	incf	examSetup@menuNumber& (0+255),w,b
  2250  001AC6  ECBC  F016         	call	_LCD_WriteCharAt
  2251                           
  2252                           ;main.c: 189: KEY_BUFFER = readKey();
  2253  001ACA  EC30  F014         	call	_readKey	;wreg free
  2254  001ACE  0101               	movlb	1	; () banked
  2255  001AD0  0101               	movlb	1	; () banked
  2256  001AD2  6F85               	movwf	_KEY_BUFFER& (0+255),b
  2257                           
  2258                           ; BSR set to: 1
  2259                           ;main.c: 190: if (KEY_BUFFER == 0x22) {
  2260  001AD4  0101               	movlb	1	; () banked
  2261  001AD6  0101               	movlb	1	; () banked
  2262  001AD8  5185               	movf	_KEY_BUFFER& (0+255),w,b
  2263  001ADA  0A22               	xorlw	34
  2264  001ADC  A4D8               	btfss	status,2,c
  2265  001ADE  D01E               	goto	l5928
  2266                           
  2267                           ; BSR set to: 1
  2268                           ;main.c: 191: LCD_WriteCharAt(menuNumber, 1, ' ');
  2269  001AE0  0101               	movlb	1	; () banked
  2270  001AE2  6F83               	movwf	??_examSetup& (0+255),b
  2271  001AE4  0E01               	movlw	1
  2272  001AE6  6E27               	movwf	LCD_WriteCharAt@column,c
  2273  001AE8  0101               	movlb	1	; () banked
  2274  001AEA  5183               	movf	??_examSetup& (0+255),w,b
  2275  001AEC  0101               	movlb	1	; () banked
  2276  001AEE  6F84               	movwf	(??_examSetup+1)& (0+255),b
  2277  001AF0  0E20               	movlw	32
  2278  001AF2  6E28               	movwf	LCD_WriteCharAt@chr,c
  2279  001AF4  0101               	movlb	1	; () banked
  2280  001AF6  5184               	movf	(??_examSetup+1)& (0+255),w,b
  2281  001AF8  0103               	movlb	3	; () banked
  2282  001AFA  0103               	movlb	3	; () banked
  2283  001AFC  5186               	movf	examSetup@menuNumber& (0+255),w,b
  2284  001AFE  ECBC  F016         	call	_LCD_WriteCharAt
  2285                           
  2286                           ;main.c: 192: if (menuNumber == 1) {
  2287  001B02  0103               	movlb	3	; () banked
  2288  001B04  0103               	movlb	3	; () banked
  2289  001B06  0586               	decf	examSetup@menuNumber& (0+255),w,b
  2290  001B08  A4D8               	btfss	status,2,c
  2291  001B0A  D004               	goto	l5926
  2292                           
  2293                           ; BSR set to: 3
  2294                           ;main.c: 193: menuNumber = 3;
  2295  001B0C  0101               	movlb	1	; () banked
  2296  001B0E  6F83               	movwf	??_examSetup& (0+255),b
  2297  001B10  0E03               	movlw	3
  2298  001B12  D024               	goto	L2
  2299  001B14                     l5926:
  2300                           
  2301                           ;main.c: 195: menuNumber--;
  2302  001B14  0103               	movlb	3	; () banked
  2303  001B16  0103               	movlb	3	; () banked
  2304  001B18  0786               	decf	examSetup@menuNumber& (0+255),f,b
  2305  001B1A  D787               	goto	l5908
  2306  001B1C                     l5928:
  2307  001B1C  0101               	movlb	1	; () banked
  2308  001B1E  0101               	movlb	1	; () banked
  2309  001B20  5185               	movf	_KEY_BUFFER& (0+255),w,b
  2310  001B22  0A28               	xorlw	40
  2311  001B24  A4D8               	btfss	status,2,c
  2312  001B26  D024               	goto	l5938
  2313                           
  2314                           ; BSR set to: 1
  2315                           ;main.c: 197: LCD_WriteCharAt(menuNumber, 1, ' ');
  2316  001B28  0101               	movlb	1	; () banked
  2317  001B2A  6F83               	movwf	??_examSetup& (0+255),b
  2318  001B2C  0E01               	movlw	1
  2319  001B2E  6E27               	movwf	LCD_WriteCharAt@column,c
  2320  001B30  0101               	movlb	1	; () banked
  2321  001B32  5183               	movf	??_examSetup& (0+255),w,b
  2322  001B34  0101               	movlb	1	; () banked
  2323  001B36  6F84               	movwf	(??_examSetup+1)& (0+255),b
  2324  001B38  0E20               	movlw	32
  2325  001B3A  6E28               	movwf	LCD_WriteCharAt@chr,c
  2326  001B3C  0101               	movlb	1	; () banked
  2327  001B3E  5184               	movf	(??_examSetup+1)& (0+255),w,b
  2328  001B40  0103               	movlb	3	; () banked
  2329  001B42  0103               	movlb	3	; () banked
  2330  001B44  5186               	movf	examSetup@menuNumber& (0+255),w,b
  2331  001B46  ECBC  F016         	call	_LCD_WriteCharAt
  2332                           
  2333                           ;main.c: 198: if (menuNumber == 3) {
  2334  001B4A  0103               	movlb	3	; () banked
  2335  001B4C  0103               	movlb	3	; () banked
  2336  001B4E  5186               	movf	examSetup@menuNumber& (0+255),w,b
  2337  001B50  0A03               	xorlw	3
  2338  001B52  A4D8               	btfss	status,2,c
  2339  001B54  D009               	goto	l5936
  2340                           
  2341                           ; BSR set to: 3
  2342                           ;main.c: 199: menuNumber = 1;
  2343  001B56  0101               	movlb	1	; () banked
  2344  001B58  6F83               	movwf	??_examSetup& (0+255),b
  2345  001B5A  0E01               	movlw	1
  2346  001B5C                     L2:
  2347  001B5C  0103               	movlb	3	; () banked
  2348  001B5E  0103               	movlb	3	; () banked
  2349  001B60  6F86               	movwf	examSetup@menuNumber& (0+255),b
  2350  001B62  0101               	movlb	1	; () banked
  2351  001B64  5183               	movf	??_examSetup& (0+255),w,b
  2352                           
  2353                           ;main.c: 200: } else
  2354  001B66  D761               	goto	l5908
  2355  001B68                     l5936:
  2356                           
  2357                           ;main.c: 201: menuNumber++;
  2358  001B68  0103               	movlb	3	; () banked
  2359  001B6A  0103               	movlb	3	; () banked
  2360  001B6C  2B86               	incf	examSetup@menuNumber& (0+255),f,b
  2361  001B6E  D75D               	goto	l5908
  2362  001B70                     l5938:
  2363  001B70  0101               	movlb	1	; () banked
  2364  001B72  0101               	movlb	1	; () banked
  2365  001B74  5185               	movf	_KEY_BUFFER& (0+255),w,b
  2366  001B76  0A12               	xorlw	18
  2367  001B78  A4D8               	btfss	status,2,c
  2368  001B7A  D757               	goto	l5908
  2369                           
  2370                           ; BSR set to: 1
  2371                           ;main.c: 203: if (menuNumber == 1) {
  2372  001B7C  0103               	movlb	3	; () banked
  2373  001B7E  0103               	movlb	3	; () banked
  2374  001B80  0586               	decf	examSetup@menuNumber& (0+255),w,b
  2375  001B82  A4D8               	btfss	status,2,c
  2376  001B84  D003               	goto	l5944
  2377                           
  2378                           ; BSR set to: 3
  2379                           ;main.c: 204: setExamTime();
  2380  001B86  EC26  F00B         	call	_setExamTime	;wreg free
  2381                           
  2382                           ;main.c: 205: } else if (menuNumber == 2) {
  2383  001B8A  D74F               	goto	l5908
  2384  001B8C                     l5944:
  2385  001B8C  0103               	movlb	3	; () banked
  2386  001B8E  0103               	movlb	3	; () banked
  2387  001B90  5186               	movf	examSetup@menuNumber& (0+255),w,b
  2388  001B92  0A02               	xorlw	2
  2389  001B94  A4D8               	btfss	status,2,c
  2390  001B96  D003               	goto	l5948
  2391                           
  2392                           ; BSR set to: 3
  2393                           ;main.c: 206: setExamMCQ();
  2394  001B98  EC5F  F011         	call	_setExamMCQ	;wreg free
  2395                           
  2396                           ;main.c: 207: } else if (menuNumber == 3) {
  2397  001B9C  D746               	goto	l5908
  2398  001B9E                     l5948:
  2399  001B9E  0103               	movlb	3	; () banked
  2400  001BA0  0103               	movlb	3	; () banked
  2401  001BA2  5186               	movf	examSetup@menuNumber& (0+255),w,b
  2402  001BA4  0A03               	xorlw	3
  2403  001BA6  A4D8               	btfss	status,2,c
  2404  001BA8  D740               	goto	l5908
  2405                           
  2406                           ; BSR set to: 3
  2407                           ;main.c: 208: startExam();
  2408  001BAA  EC90  F013         	call	_startExam	;wreg free
  2409  001BAE  D73D               	goto	l5908
  2410  001BB0                     __end_of_examSetup:
  2411                           	opt stack 0
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           intcon	equ	0xFF2
  2417                           postinc0	equ	0xFEE
  2418                           wreg	equ	0xFE8
  2419                           postinc1	equ	0xFE6
  2420                           postdec1	equ	0xFE5
  2421                           fsr1l	equ	0xFE1
  2422                           postinc2	equ	0xFDE
  2423                           status	equ	0xFD8
  2424                           
  2425 ;; *************** function _startExam *****************
  2426 ;; Defined at:
  2427 ;;		line 319 in file "main.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  txt1           14    0[BANK1 ] unsigned char [14]
  2432 ;; Return value:  Size  Location     Type
  2433 ;;		None               void
  2434 ;; Registers used:
  2435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2441 ;;      Params:         0       0       0       0       0       0       0       0       0
  2442 ;;      Locals:         0       0      14       0       0       0       0       0       0
  2443 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2444 ;;      Totals:         0       1      14       0       0       0       0       0       0
  2445 ;;Total ram usage:       15 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:   10
  2448 ;; This function calls:
  2449 ;;		_LCD_WriteCommand
  2450 ;;		_LCD_WriteStringAt
  2451 ;;		_getBeep
  2452 ;;		_get_yes_no
  2453 ;;		_readKey
  2454 ;;		_runPaper
  2455 ;; This function is called by:
  2456 ;;		_examSetup
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text6
  2461  002720                     __ptext6:
  2462                           	opt stack 0
  2463  002720                     _startExam:
  2464                           	opt stack 19
  2465                           
  2466                           ;main.c: 320: char txt1[] = "Are you sure?";
  2467                           
  2468                           ;incstack = 0
  2469  002720  EE20  F02C         	lfsr	2,startExam@F5376
  2470  002724  EE11  F075         	lfsr	1,startExam@txt1
  2471  002728  0E0E               	movlw	14
  2472  00272A                     u5251:
  2473  00272A  CFDE FFE6          	movff	postinc2,postinc1
  2474  00272E  2EE8               	decfsz	wreg,f,c
  2475  002730  D7FC               	goto	u5251
  2476                           
  2477                           ;main.c: 322: LCD_WriteCommand(0x01);
  2478  002732  0E01               	movlw	1
  2479  002734  ECFF  F00E         	call	_LCD_WriteCommand
  2480                           
  2481                           ;main.c: 323: LCD_WriteStringAt(1, 1, txt1);
  2482  002738  0100               	movlb	0	; () banked
  2483  00273A  6FE2               	movwf	??_startExam& (0+255),b
  2484  00273C  0E01               	movlw	1
  2485  00273E  6E23               	movwf	LCD_WriteStringAt@column,c
  2486  002740  0100               	movlb	0	; () banked
  2487  002742  51E2               	movf	??_startExam& (0+255),w,b
  2488  002744  0101               	movlb	1	; () banked
  2489  002746  0E01               	movlw	high startExam@txt1
  2490  002748  6E25               	movwf	LCD_WriteStringAt@string+1,c
  2491  00274A  0101               	movlb	1	; () banked
  2492  00274C  0E75               	movlw	low startExam@txt1
  2493  00274E  6E24               	movwf	LCD_WriteStringAt@string,c
  2494  002750  0E01               	movlw	1
  2495  002752  EC1A  F015         	call	_LCD_WriteStringAt
  2496                           
  2497                           ;main.c: 325: if (get_yes_no(2)) {
  2498  002756  0E02               	movlw	2
  2499  002758  ECED  F011         	call	_get_yes_no
  2500  00275C  0900               	iorlw	0
  2501  00275E  B4D8               	btfsc	status,2,c
  2502  002760  D030               	goto	l285
  2503  002762                     l5686:
  2504                           
  2505                           ;main.c: 327: LCD_WriteCommand(0x01);
  2506  002762  0E01               	movlw	1
  2507  002764  ECFF  F00E         	call	_LCD_WriteCommand
  2508                           
  2509                           ;main.c: 328: LCD_WriteStringAt(2, 3, "Press select to");
  2510  002768  0100               	movlb	0	; () banked
  2511  00276A  6FE2               	movwf	??_startExam& (0+255),b
  2512  00276C  0E03               	movlw	3
  2513  00276E  6E23               	movwf	LCD_WriteStringAt@column,c
  2514  002770  0100               	movlb	0	; () banked
  2515  002772  51E2               	movf	??_startExam& (0+255),w,b
  2516  002774  0E08               	movlw	high STR_1
  2517  002776  6E25               	movwf	LCD_WriteStringAt@string+1,c
  2518  002778  0E28               	movlw	low STR_1
  2519  00277A  6E24               	movwf	LCD_WriteStringAt@string,c
  2520  00277C  0E02               	movlw	2
  2521  00277E  EC1A  F015         	call	_LCD_WriteStringAt
  2522                           
  2523                           ;main.c: 329: LCD_WriteStringAt(3, 3, "Start the exam");
  2524  002782  0100               	movlb	0	; () banked
  2525  002784  6FE2               	movwf	??_startExam& (0+255),b
  2526  002786  0E03               	movlw	3
  2527  002788  6E23               	movwf	LCD_WriteStringAt@column,c
  2528  00278A  0100               	movlb	0	; () banked
  2529  00278C  51E2               	movf	??_startExam& (0+255),w,b
  2530  00278E  0E08               	movlw	high STR_2
  2531  002790  6E25               	movwf	LCD_WriteStringAt@string+1,c
  2532  002792  0E38               	movlw	low STR_2
  2533  002794  6E24               	movwf	LCD_WriteStringAt@string,c
  2534  002796  0E03               	movlw	3
  2535  002798  EC1A  F015         	call	_LCD_WriteStringAt
  2536                           
  2537                           ;main.c: 330: KEY_BUFFER = readKey();
  2538  00279C  EC30  F014         	call	_readKey	;wreg free
  2539  0027A0  0101               	movlb	1	; () banked
  2540  0027A2  0101               	movlb	1	; () banked
  2541  0027A4  6F85               	movwf	_KEY_BUFFER& (0+255),b
  2542                           
  2543                           ; BSR set to: 1
  2544                           ;main.c: 331: if (KEY_BUFFER == 0x12) {
  2545  0027A6  0101               	movlb	1	; () banked
  2546  0027A8  0101               	movlb	1	; () banked
  2547  0027AA  5185               	movf	_KEY_BUFFER& (0+255),w,b
  2548  0027AC  0A12               	xorlw	18
  2549  0027AE  A4D8               	btfss	status,2,c
  2550  0027B0  D7D8               	goto	l5686
  2551                           
  2552                           ; BSR set to: 1
  2553                           ;main.c: 332: getBeep(5);
  2554  0027B2  0E00               	movlw	0
  2555  0027B4  6E23               	movwf	getBeep@cnt+1,c
  2556  0027B6  0E05               	movlw	5
  2557  0027B8  6E22               	movwf	getBeep@cnt,c
  2558  0027BA  EC6B  F017         	call	_getBeep	;wreg free
  2559                           
  2560                           ;main.c: 334: }
  2561                           ;main.c: 335: }
  2562                           ;main.c: 336: runPaper();
  2563                           
  2564                           ;main.c: 333: break;
  2565  0027BE  EC15  F009         	call	_runPaper	;wreg free
  2566  0027C2                     l285:
  2567  0027C2  0012               	return	
  2568  0027C4                     __end_of_startExam:
  2569                           	opt stack 0
  2570                           tblptru	equ	0xFF8
  2571                           tblptrh	equ	0xFF7
  2572                           tblptrl	equ	0xFF6
  2573                           tablat	equ	0xFF5
  2574                           intcon	equ	0xFF2
  2575                           postinc0	equ	0xFEE
  2576                           wreg	equ	0xFE8
  2577                           postinc1	equ	0xFE6
  2578                           postdec1	equ	0xFE5
  2579                           fsr1l	equ	0xFE1
  2580                           postinc2	equ	0xFDE
  2581                           status	equ	0xFD8
  2582                           
  2583 ;; *************** function _runPaper *****************
  2584 ;; Defined at:
  2585 ;;		line 343 in file "main.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  txt1           18   94[BANK0 ] unsigned char [18]
  2590 ;;  txt2           15  112[BANK0 ] unsigned char [15]
  2591 ;;  ansBuffer       2  128[BANK0 ] struct EE_Answer
  2592 ;;  qCount_tmp      1  127[BANK0 ] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;		None               void
  2595 ;; Registers used:
  2596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0
  2603 ;;      Locals:         0      36       0       0       0       0       0       0       0
  2604 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2605 ;;      Totals:         0      40       0       0       0       0       0       0       0
  2606 ;;Total ram usage:       40 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    9
  2609 ;; This function calls:
  2610 ;;		_Delay_1000ms
  2611 ;;		_Delay_100ms
  2612 ;;		_LCD_WriteCharAt
  2613 ;;		_LCD_WriteCommand
  2614 ;;		_LCD_WriteStringAt
  2615 ;;		___awdiv
  2616 ;;		___awmod
  2617 ;;		_get_yes_no
  2618 ;;		_interruptConfig
  2619 ;;		_loadAnswer
  2620 ;;		_readKey
  2621 ;;		_saveAnswer
  2622 ;;		_subMenu
  2623 ;; This function is called by:
  2624 ;;		_startExam
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text7
  2629  00122A                     __ptext7:
  2630                           	opt stack 0
  2631  00122A                     _runPaper:
  2632                           	opt stack 19
  2633                           
  2634                           ;main.c: 344: interruptConfig(1);
  2635                           
  2636                           ;incstack = 0
  2637  00122A  0E01               	movlw	1
  2638  00122C  ECEA  F017         	call	_interruptConfig
  2639                           
  2640                           ;main.c: 345: GLOBLE_TMOD = PAPER_MOD_SIMPLE;
  2641  001230  0100               	movlb	0	; () banked
  2642  001232  6FBA               	movwf	??_runPaper& (0+255),b
  2643  001234  0E01               	movlw	1
  2644  001236  6E3C               	movwf	_GLOBLE_TMOD,c
  2645  001238  0100               	movlb	0	; () banked
  2646  00123A  51BA               	movf	??_runPaper& (0+255),w,b
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;main.c: 347: char qCount_tmp;
  2650                           ;main.c: 348: struct EE_Answer ansBuffer;
  2651                           ;main.c: 349: char txt1[] = "Question number: ";
  2652  00123C  EE22  F0B7         	lfsr	2,runPaper@F5380
  2653  001240  EE10  F0BE         	lfsr	1,runPaper@txt1
  2654  001244  0E12               	movlw	18
  2655  001246                     u4891:
  2656  001246  CFDE FFE6          	movff	postinc2,postinc1
  2657  00124A  2EE8               	decfsz	wreg,f,c
  2658  00124C  D7FC               	goto	u4891
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;main.c: 350: char txt2[] = "Your Answer:  ";
  2662  00124E  EE21  F066         	lfsr	2,runPaper@F5382
  2663  001252  EE10  F0D0         	lfsr	1,runPaper@txt2
  2664  001256  0E0F               	movlw	15
  2665  001258                     u4901:
  2666  001258  CFDE FFE6          	movff	postinc2,postinc1
  2667  00125C  2EE8               	decfsz	wreg,f,c
  2668  00125E  D7FC               	goto	u4901
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;main.c: 354: LCD_WriteCommand(0x01);
  2672  001260  0E01               	movlw	1
  2673  001262  ECFF  F00E         	call	_LCD_WriteCommand
  2674                           
  2675                           ;main.c: 355: LCD_WriteCommand(0x0C);
  2676  001266  0E0C               	movlw	12
  2677  001268  ECFF  F00E         	call	_LCD_WriteCommand
  2678  00126C                     l5392:
  2679                           
  2680                           ;main.c: 360: for (qCount_tmp = 1; qCount_tmp <= MCQCnt;) {
  2681  00126C  0100               	movlb	0	; () banked
  2682  00126E  6FBA               	movwf	??_runPaper& (0+255),b
  2683  001270  0E01               	movlw	1
  2684  001272  0100               	movlb	0	; () banked
  2685  001274  0100               	movlb	0	; () banked
  2686  001276  6FDF               	movwf	runPaper@qCount_tmp& (0+255),b
  2687  001278  D1A6               	goto	L6
  2688  00127A                     l5394:
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;main.c: 361: interruptConfig(0);
  2692  00127A  0E00               	movlw	0
  2693  00127C  ECEA  F017         	call	_interruptConfig
  2694                           
  2695                           ;main.c: 362: LCD_WriteStringAt(2, 1, txt1);
  2696  001280  0100               	movlb	0	; () banked
  2697  001282  6FBA               	movwf	??_runPaper& (0+255),b
  2698  001284  0E01               	movlw	1
  2699  001286  6E23               	movwf	LCD_WriteStringAt@column,c
  2700  001288  0100               	movlb	0	; () banked
  2701  00128A  51BA               	movf	??_runPaper& (0+255),w,b
  2702  00128C  0100               	movlb	0	; () banked
  2703  00128E  0E00               	movlw	high runPaper@txt1
  2704  001290  6E25               	movwf	LCD_WriteStringAt@string+1,c
  2705  001292  0100               	movlb	0	; () banked
  2706  001294  0EBE               	movlw	low runPaper@txt1
  2707  001296  6E24               	movwf	LCD_WriteStringAt@string,c
  2708  001298  0E02               	movlw	2
  2709  00129A  EC1A  F015         	call	_LCD_WriteStringAt
  2710                           
  2711                           ;main.c: 363: LCD_WriteCharAt(2, 18, 0x30 + qCount_tmp / 10);
  2712  00129E  0100               	movlb	0	; () banked
  2713  0012A0  6FBA               	movwf	??_runPaper& (0+255),b
  2714  0012A2  0E12               	movlw	18
  2715  0012A4  6E27               	movwf	LCD_WriteCharAt@column,c
  2716  0012A6  0100               	movlb	0	; () banked
  2717  0012A8  51BA               	movf	??_runPaper& (0+255),w,b
  2718  0012AA  0100               	movlb	0	; () banked
  2719  0012AC  C0DF  F01E         	movff	runPaper@qCount_tmp,___awdiv@dividend
  2720  0012B0  6A1F               	clrf	___awdiv@dividend+1,c
  2721  0012B2  0E00               	movlw	0
  2722  0012B4  6E21               	movwf	___awdiv@divisor+1,c
  2723  0012B6  0E0A               	movlw	10
  2724  0012B8  6E20               	movwf	___awdiv@divisor,c
  2725  0012BA  ECE0  F012         	call	___awdiv	;wreg free
  2726  0012BE  501E               	movf	?___awdiv,w,c
  2727  0012C0  0F30               	addlw	48
  2728  0012C2  6E28               	movwf	LCD_WriteCharAt@chr,c
  2729  0012C4  0E02               	movlw	2
  2730  0012C6  ECBC  F016         	call	_LCD_WriteCharAt
  2731                           
  2732                           ;main.c: 364: LCD_WriteCharAt(2, 19, 0x30 + qCount_tmp % 10);
  2733  0012CA  0100               	movlb	0	; () banked
  2734  0012CC  6FBA               	movwf	??_runPaper& (0+255),b
  2735  0012CE  0E13               	movlw	19
  2736  0012D0  6E27               	movwf	LCD_WriteCharAt@column,c
  2737  0012D2  0100               	movlb	0	; () banked
  2738  0012D4  51BA               	movf	??_runPaper& (0+255),w,b
  2739  0012D6  0100               	movlb	0	; () banked
  2740  0012D8  C0DF  F01E         	movff	runPaper@qCount_tmp,___awmod@dividend
  2741  0012DC  6A1F               	clrf	___awmod@dividend+1,c
  2742  0012DE  0E00               	movlw	0
  2743  0012E0  6E21               	movwf	___awmod@divisor+1,c
  2744  0012E2  0E0A               	movlw	10
  2745  0012E4  6E20               	movwf	___awmod@divisor,c
  2746  0012E6  EC7E  F014         	call	___awmod	;wreg free
  2747  0012EA  501E               	movf	?___awmod,w,c
  2748  0012EC  0F30               	addlw	48
  2749  0012EE  6E28               	movwf	LCD_WriteCharAt@chr,c
  2750  0012F0  0E02               	movlw	2
  2751  0012F2  ECBC  F016         	call	_LCD_WriteCharAt
  2752                           
  2753                           ;main.c: 365: LCD_WriteStringAt(3, 1, txt2);
  2754  0012F6  0100               	movlb	0	; () banked
  2755  0012F8  6FBA               	movwf	??_runPaper& (0+255),b
  2756  0012FA  0E01               	movlw	1
  2757  0012FC  6E23               	movwf	LCD_WriteStringAt@column,c
  2758  0012FE  0100               	movlb	0	; () banked
  2759  001300  51BA               	movf	??_runPaper& (0+255),w,b
  2760  001302  0100               	movlb	0	; () banked
  2761  001304  0E00               	movlw	high runPaper@txt2
  2762  001306  6E25               	movwf	LCD_WriteStringAt@string+1,c
  2763  001308  0100               	movlb	0	; () banked
  2764  00130A  0ED0               	movlw	low runPaper@txt2
  2765  00130C  6E24               	movwf	LCD_WriteStringAt@string,c
  2766  00130E  0E03               	movlw	3
  2767  001310  EC1A  F015         	call	_LCD_WriteStringAt
  2768                           
  2769                           ;main.c: 368: if (ansBuffer.ans != 0) {
  2770  001314  0100               	movlb	0	; () banked
  2771  001316  0100               	movlb	0	; () banked
  2772  001318  51E0               	movf	runPaper@ansBuffer& (0+255),w,b
  2773  00131A  B4D8               	btfsc	status,2,c
  2774  00131C  D00C               	goto	l5408
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;main.c: 369: LCD_WriteCharAt(3, 14, ansBuffer.ans);
  2778  00131E  0100               	movlb	0	; () banked
  2779  001320  6FBA               	movwf	??_runPaper& (0+255),b
  2780  001322  0E0E               	movlw	14
  2781  001324  6E27               	movwf	LCD_WriteCharAt@column,c
  2782  001326  0100               	movlb	0	; () banked
  2783  001328  51BA               	movf	??_runPaper& (0+255),w,b
  2784  00132A  C0E0  F028         	movff	runPaper@ansBuffer,LCD_WriteCharAt@chr
  2785  00132E  0E03               	movlw	3
  2786  001330  ECBC  F016         	call	_LCD_WriteCharAt
  2787                           
  2788                           ;main.c: 370: } else
  2789  001334  D00F               	goto	l5410
  2790  001336                     l5408:
  2791                           
  2792                           ;main.c: 371: LCD_WriteCharAt(3, 14, '_');
  2793  001336  0100               	movlb	0	; () banked
  2794  001338  6FBA               	movwf	??_runPaper& (0+255),b
  2795  00133A  0E0E               	movlw	14
  2796  00133C  6E27               	movwf	LCD_WriteCharAt@column,c
  2797  00133E  0100               	movlb	0	; () banked
  2798  001340  51BA               	movf	??_runPaper& (0+255),w,b
  2799  001342  0100               	movlb	0	; () banked
  2800  001344  6FBB               	movwf	(??_runPaper+1)& (0+255),b
  2801  001346  0E5F               	movlw	95
  2802  001348  6E28               	movwf	LCD_WriteCharAt@chr,c
  2803  00134A  0100               	movlb	0	; () banked
  2804  00134C  51BB               	movf	(??_runPaper+1)& (0+255),w,b
  2805  00134E  0E03               	movlw	3
  2806  001350  ECBC  F016         	call	_LCD_WriteCharAt
  2807  001354                     l5410:
  2808                           
  2809                           ;main.c: 374: if (ansBuffer.flag == 1) {
  2810  001354  0100               	movlb	0	; () banked
  2811  001356  0100               	movlb	0	; () banked
  2812  001358  05E1               	decf	(runPaper@ansBuffer+1)& (0+255),w,b
  2813  00135A  A4D8               	btfss	status,2,c
  2814  00135C  D010               	goto	l5414
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;main.c: 375: LCD_WriteCharAt(3, 20, 0b01111111);
  2818  00135E  0100               	movlb	0	; () banked
  2819  001360  6FBA               	movwf	??_runPaper& (0+255),b
  2820  001362  0E14               	movlw	20
  2821  001364  6E27               	movwf	LCD_WriteCharAt@column,c
  2822  001366  0100               	movlb	0	; () banked
  2823  001368  51BA               	movf	??_runPaper& (0+255),w,b
  2824  00136A  0100               	movlb	0	; () banked
  2825  00136C  6FBB               	movwf	(??_runPaper+1)& (0+255),b
  2826  00136E  0E7F               	movlw	127
  2827  001370  6E28               	movwf	LCD_WriteCharAt@chr,c
  2828  001372  0100               	movlb	0	; () banked
  2829  001374  51BB               	movf	(??_runPaper+1)& (0+255),w,b
  2830  001376  0E03               	movlw	3
  2831  001378  ECBC  F016         	call	_LCD_WriteCharAt
  2832                           
  2833                           ;main.c: 376: } else {
  2834  00137C  D00F               	goto	l5416
  2835  00137E                     l5414:
  2836                           
  2837                           ;main.c: 377: LCD_WriteCharAt(3, 20, ' ');
  2838  00137E  0100               	movlb	0	; () banked
  2839  001380  6FBA               	movwf	??_runPaper& (0+255),b
  2840  001382  0E14               	movlw	20
  2841  001384  6E27               	movwf	LCD_WriteCharAt@column,c
  2842  001386  0100               	movlb	0	; () banked
  2843  001388  51BA               	movf	??_runPaper& (0+255),w,b
  2844  00138A  0100               	movlb	0	; () banked
  2845  00138C  6FBB               	movwf	(??_runPaper+1)& (0+255),b
  2846  00138E  0E20               	movlw	32
  2847  001390  6E28               	movwf	LCD_WriteCharAt@chr,c
  2848  001392  0100               	movlb	0	; () banked
  2849  001394  51BB               	movf	(??_runPaper+1)& (0+255),w,b
  2850  001396  0E03               	movlw	3
  2851  001398  ECBC  F016         	call	_LCD_WriteCharAt
  2852  00139C                     l5416:
  2853                           
  2854                           ;main.c: 378: }
  2855                           ;main.c: 380: interruptConfig(1);
  2856  00139C  0E01               	movlw	1
  2857  00139E  ECEA  F017         	call	_interruptConfig
  2858                           
  2859                           ;main.c: 383: KEY_BUFFER = readKey();
  2860  0013A2  EC30  F014         	call	_readKey	;wreg free
  2861  0013A6  0101               	movlb	1	; () banked
  2862  0013A8  0101               	movlb	1	; () banked
  2863  0013AA  6F85               	movwf	_KEY_BUFFER& (0+255),b
  2864                           
  2865                           ; BSR set to: 1
  2866                           ;main.c: 384: if (KEY_BUFFER == 0x21) {
  2867  0013AC  0101               	movlb	1	; () banked
  2868  0013AE  0101               	movlb	1	; () banked
  2869  0013B0  5185               	movf	_KEY_BUFFER& (0+255),w,b
  2870  0013B2  0A21               	xorlw	33
  2871  0013B4  A4D8               	btfss	status,2,c
  2872  0013B6  D04E               	goto	l5434
  2873                           
  2874                           ; BSR set to: 1
  2875                           ;main.c: 386: if (ansBuffer.ans == 0)
  2876  0013B8  0100               	movlb	0	; () banked
  2877  0013BA  0100               	movlb	0	; () banked
  2878  0013BC  67E0               	tstfsz	runPaper@ansBuffer& (0+255),b
  2879  0013BE  D008               	goto	l5426
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;main.c: 387: ansBuffer.flag = 1;
  2883  0013C0  0100               	movlb	0	; () banked
  2884  0013C2  6FBA               	movwf	??_runPaper& (0+255),b
  2885  0013C4  0E01               	movlw	1
  2886  0013C6  0100               	movlb	0	; () banked
  2887  0013C8  0100               	movlb	0	; () banked
  2888  0013CA  6FE1               	movwf	(runPaper@ansBuffer+1)& (0+255),b
  2889  0013CC  0100               	movlb	0	; () banked
  2890  0013CE  51BA               	movf	??_runPaper& (0+255),w,b
  2891  0013D0                     l5426:
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;main.c: 390: saveAnswer(qCount_tmp, &ansBuffer.ans, &ansBuffer.flag);
  2895  0013D0  0100               	movlb	0	; () banked
  2896  0013D2  0E00               	movlw	high runPaper@ansBuffer
  2897  0013D4  6E24               	movwf	saveAnswer@ans+1,c
  2898  0013D6  0100               	movlb	0	; () banked
  2899  0013D8  0EE0               	movlw	low runPaper@ansBuffer
  2900  0013DA  6E23               	movwf	saveAnswer@ans,c
  2901  0013DC  0100               	movlb	0	; () banked
  2902  0013DE  0E00               	movlw	high (runPaper@ansBuffer+1)
  2903  0013E0  6E26               	movwf	saveAnswer@flag+1,c
  2904  0013E2  0100               	movlb	0	; () banked
  2905  0013E4  0EE1               	movlw	low (runPaper@ansBuffer+1)
  2906  0013E6  6E25               	movwf	saveAnswer@flag,c
  2907  0013E8  0100               	movlb	0	; () banked
  2908  0013EA  0100               	movlb	0	; () banked
  2909  0013EC  51DF               	movf	runPaper@qCount_tmp& (0+255),w,b
  2910  0013EE  EC68  F016         	call	_saveAnswer
  2911                           
  2912                           ;main.c: 392: if (qCount_tmp - 1 > 0)
  2913  0013F2  0EFF               	movlw	255
  2914  0013F4  0100               	movlb	0	; () banked
  2915  0013F6  6FBA               	movwf	??_runPaper& (0+255),b
  2916  0013F8  0EFF               	movlw	255
  2917  0013FA  6FBB               	movwf	(??_runPaper+1)& (0+255),b
  2918  0013FC  0100               	movlb	0	; () banked
  2919  0013FE  0100               	movlb	0	; () banked
  2920  001400  51DF               	movf	runPaper@qCount_tmp& (0+255),w,b
  2921  001402  0100               	movlb	0	; () banked
  2922  001404  6FBC               	movwf	(??_runPaper+2)& (0+255),b
  2923  001406  6BBD               	clrf	(??_runPaper+3)& (0+255),b
  2924  001408  0100               	movlb	0	; () banked
  2925  00140A  51BA               	movf	??_runPaper& (0+255),w,b
  2926  00140C  0100               	movlb	0	; () banked
  2927  00140E  27BC               	addwf	(??_runPaper+2)& (0+255),f,b
  2928  001410  0100               	movlb	0	; () banked
  2929  001412  51BB               	movf	(??_runPaper+1)& (0+255),w,b
  2930  001414  0100               	movlb	0	; () banked
  2931  001416  23BD               	addwfc	(??_runPaper+3)& (0+255),f,b
  2932  001418  0100               	movlb	0	; () banked
  2933  00141A  51BD               	movf	(??_runPaper+3)& (0+255),w,b
  2934  00141C  0A80               	xorlw	128
  2935  00141E  0F80               	addlw	-128
  2936  001420  0E01               	movlw	1
  2937  001422  B4D8               	btfsc	status,2,c
  2938  001424  5DBC               	subwf	(??_runPaper+2)& (0+255),w,b
  2939  001426  A0D8               	btfss	status,0,c
  2940  001428  D003               	goto	l5432
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;main.c: 393: qCount_tmp--;
  2944  00142A  0100               	movlb	0	; () banked
  2945  00142C  0100               	movlb	0	; () banked
  2946  00142E  07DF               	decf	runPaper@qCount_tmp& (0+255),f,b
  2947  001430                     l5432:
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;main.c: 396: loadAnswer(qCount_tmp, &ansBuffer.ans, &ansBuffer.flag);
  2951  001430  0100               	movlb	0	; () banked
  2952  001432  0E00               	movlw	high runPaper@ansBuffer
  2953  001434  6E21               	movwf	loadAnswer@ans+1,c
  2954  001436  0100               	movlb	0	; () banked
  2955  001438  0EE0               	movlw	low runPaper@ansBuffer
  2956  00143A  6E20               	movwf	loadAnswer@ans,c
  2957  00143C  0100               	movlb	0	; () banked
  2958  00143E  0E00               	movlw	high (runPaper@ansBuffer+1)
  2959  001440  6E23               	movwf	loadAnswer@flag+1,c
  2960  001442  0100               	movlb	0	; () banked
  2961  001444  0EE1               	movlw	low (runPaper@ansBuffer+1)
  2962  001446  6E22               	movwf	loadAnswer@flag,c
  2963  001448  0100               	movlb	0	; () banked
  2964  00144A  0100               	movlb	0	; () banked
  2965  00144C  51DF               	movf	runPaper@qCount_tmp& (0+255),w,b
  2966  00144E  EC95  F016         	call	_loadAnswer
  2967                           
  2968                           ;main.c: 398: } else if (KEY_BUFFER == 0x24) {
  2969  001452  D0BB               	goto	l5484
  2970  001454                     l5434:
  2971  001454  0101               	movlb	1	; () banked
  2972  001456  0101               	movlb	1	; () banked
  2973  001458  5185               	movf	_KEY_BUFFER& (0+255),w,b
  2974  00145A  0A24               	xorlw	36
  2975  00145C  A4D8               	btfss	status,2,c
  2976  00145E  D03C               	goto	l5444
  2977                           
  2978                           ; BSR set to: 1
  2979                           ;main.c: 400: saveAnswer(qCount_tmp, &ansBuffer.ans, &ansBuffer.flag);
  2980  001460  0100               	movlb	0	; () banked
  2981  001462  0E00               	movlw	high runPaper@ansBuffer
  2982  001464  6E24               	movwf	saveAnswer@ans+1,c
  2983  001466  0100               	movlb	0	; () banked
  2984  001468  0EE0               	movlw	low runPaper@ansBuffer
  2985  00146A  6E23               	movwf	saveAnswer@ans,c
  2986  00146C  0100               	movlb	0	; () banked
  2987  00146E  0E00               	movlw	high (runPaper@ansBuffer+1)
  2988  001470  6E26               	movwf	saveAnswer@flag+1,c
  2989  001472  0100               	movlb	0	; () banked
  2990  001474  0EE1               	movlw	low (runPaper@ansBuffer+1)
  2991  001476  6E25               	movwf	saveAnswer@flag,c
  2992  001478  0100               	movlb	0	; () banked
  2993  00147A  0100               	movlb	0	; () banked
  2994  00147C  51DF               	movf	runPaper@qCount_tmp& (0+255),w,b
  2995  00147E  EC68  F016         	call	_saveAnswer
  2996                           
  2997                           ;main.c: 402: if (qCount_tmp + 1 <= 50)
  2998  001482  0100               	movlb	0	; () banked
  2999  001484  0100               	movlb	0	; () banked
  3000  001486  51DF               	movf	runPaper@qCount_tmp& (0+255),w,b
  3001  001488  0100               	movlb	0	; () banked
  3002  00148A  6FBA               	movwf	??_runPaper& (0+255),b
  3003  00148C  6BBB               	clrf	(??_runPaper+1)& (0+255),b
  3004  00148E  0E01               	movlw	1
  3005  001490  0100               	movlb	0	; () banked
  3006  001492  27BA               	addwf	??_runPaper& (0+255),f,b
  3007  001494  0E00               	movlw	0
  3008  001496  23BB               	addwfc	(??_runPaper+1)& (0+255),f,b
  3009  001498  0100               	movlb	0	; () banked
  3010  00149A  51BB               	movf	(??_runPaper+1)& (0+255),w,b
  3011  00149C  0A80               	xorlw	128
  3012  00149E  6EF3               	movwf	prodl,c
  3013  0014A0  0E80               	movlw	128
  3014  0014A2  5CF3               	subwf	prodl,w,c
  3015  0014A4  0E33               	movlw	51
  3016  0014A6  B4D8               	btfsc	status,2,c
  3017  0014A8  5DBA               	subwf	??_runPaper& (0+255),w,b
  3018  0014AA  B0D8               	btfsc	status,0,c
  3019  0014AC  D003               	goto	l5442
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;main.c: 403: qCount_tmp++;
  3023  0014AE  0100               	movlb	0	; () banked
  3024  0014B0  0100               	movlb	0	; () banked
  3025  0014B2  2BDF               	incf	runPaper@qCount_tmp& (0+255),f,b
  3026  0014B4                     l5442:
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;main.c: 406: loadAnswer(qCount_tmp, &ansBuffer.ans, &ansBuffer.flag);
  3030  0014B4  0100               	movlb	0	; () banked
  3031  0014B6  0E00               	movlw	high runPaper@ansBuffer
  3032  0014B8  6E21               	movwf	loadAnswer@ans+1,c
  3033  0014BA  0100               	movlb	0	; () banked
  3034  0014BC  0EE0               	movlw	low runPaper@ansBuffer
  3035  0014BE  6E20               	movwf	loadAnswer@ans,c
  3036  0014C0  0100               	movlb	0	; () banked
  3037  0014C2  0E00               	movlw	high (runPaper@ansBuffer+1)
  3038  0014C4  6E23               	movwf	loadAnswer@flag+1,c
  3039  0014C6  0100               	movlb	0	; () banked
  3040  0014C8  0EE1               	movlw	low (runPaper@ansBuffer+1)
  3041  0014CA  6E22               	movwf	loadAnswer@flag,c
  3042  0014CC  0100               	movlb	0	; () banked
  3043  0014CE  0100               	movlb	0	; () banked
  3044  0014D0  51DF               	movf	runPaper@qCount_tmp& (0+255),w,b
  3045  0014D2  EC95  F016         	call	_loadAnswer
  3046                           
  3047                           ;main.c: 408: } else if (KEY_BUFFER == 0x14) {
  3048  0014D6  D079               	goto	l5484
  3049  0014D8                     l5444:
  3050  0014D8  0101               	movlb	1	; () banked
  3051  0014DA  0101               	movlb	1	; () banked
  3052  0014DC  5185               	movf	_KEY_BUFFER& (0+255),w,b
  3053  0014DE  0A14               	xorlw	20
  3054  0014E0  A4D8               	btfss	status,2,c
  3055  0014E2  D030               	goto	l5460
  3056                           
  3057                           ; BSR set to: 1
  3058                           ;main.c: 410: saveAnswer(qCount_tmp, &ansBuffer.ans, &ansBuffer.flag);
  3059  0014E4  0100               	movlb	0	; () banked
  3060  0014E6  0E00               	movlw	high runPaper@ansBuffer
  3061  0014E8  6E24               	movwf	saveAnswer@ans+1,c
  3062  0014EA  0100               	movlb	0	; () banked
  3063  0014EC  0EE0               	movlw	low runPaper@ansBuffer
  3064  0014EE  6E23               	movwf	saveAnswer@ans,c
  3065  0014F0  0100               	movlb	0	; () banked
  3066  0014F2  0E00               	movlw	high (runPaper@ansBuffer+1)
  3067  0014F4  6E26               	movwf	saveAnswer@flag+1,c
  3068  0014F6  0100               	movlb	0	; () banked
  3069  0014F8  0EE1               	movlw	low (runPaper@ansBuffer+1)
  3070  0014FA  6E25               	movwf	saveAnswer@flag,c
  3071  0014FC  0100               	movlb	0	; () banked
  3072  0014FE  0100               	movlb	0	; () banked
  3073  001500  51DF               	movf	runPaper@qCount_tmp& (0+255),w,b
  3074  001502  EC68  F016         	call	_saveAnswer
  3075                           
  3076                           ;main.c: 412: LCD_WriteCommand(0x01);
  3077  001506  0E01               	movlw	1
  3078  001508  ECFF  F00E         	call	_LCD_WriteCommand
  3079                           
  3080                           ;main.c: 413: GLOBLE_TMOD = PAPER_MOD_COMPLEX;
  3081  00150C  0100               	movlb	0	; () banked
  3082  00150E  6FBA               	movwf	??_runPaper& (0+255),b
  3083  001510  0E02               	movlw	2
  3084  001512  6E3C               	movwf	_GLOBLE_TMOD,c
  3085  001514  0100               	movlb	0	; () banked
  3086  001516  51BA               	movf	??_runPaper& (0+255),w,b
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;main.c: 414: LCD_WriteStringAt(1, 1, "SUB MENU");
  3090  001518  0100               	movlb	0	; () banked
  3091  00151A  6FBA               	movwf	??_runPaper& (0+255),b
  3092  00151C  0E01               	movlw	1
  3093  00151E  6E23               	movwf	LCD_WriteStringAt@column,c
  3094  001520  0100               	movlb	0	; () banked
  3095  001522  51BA               	movf	??_runPaper& (0+255),w,b
  3096  001524  0E08               	movlw	high STR_3
  3097  001526  6E25               	movwf	LCD_WriteStringAt@string+1,c
  3098  001528  0E77               	movlw	low STR_3
  3099  00152A  6E24               	movwf	LCD_WriteStringAt@string,c
  3100  00152C  0E01               	movlw	1
  3101  00152E  EC1A  F015         	call	_LCD_WriteStringAt
  3102                           
  3103                           ;main.c: 415: Delay_100ms();
  3104  001532  EC22  F017         	call	_Delay_100ms	;wreg free
  3105                           
  3106                           ;main.c: 416: subMenu();
  3107  001536  ECFB  F006         	call	_subMenu	;wreg free
  3108                           
  3109                           ;main.c: 417: GLOBLE_TMOD = PAPER_MOD_SIMPLE;
  3110  00153A  0100               	movlb	0	; () banked
  3111  00153C  6FBA               	movwf	??_runPaper& (0+255),b
  3112  00153E  0E01               	movlw	1
  3113  001540  6E3C               	movwf	_GLOBLE_TMOD,c
  3114  001542  D041               	goto	L6
  3115  001544                     l5460:
  3116  001544  0101               	movlb	1	; () banked
  3117  001546  0101               	movlb	1	; () banked
  3118  001548  5185               	movf	_KEY_BUFFER& (0+255),w,b
  3119  00154A  0A41               	xorlw	65
  3120  00154C  A4D8               	btfss	status,2,c
  3121  00154E  D004               	goto	l5464
  3122                           
  3123                           ; BSR set to: 1
  3124                           ;main.c: 420: ansBuffer.ans = 'A';
  3125  001550  0100               	movlb	0	; () banked
  3126  001552  6FBA               	movwf	??_runPaper& (0+255),b
  3127  001554  0E41               	movlw	65
  3128  001556  D027               	goto	L9
  3129  001558                     l5464:
  3130  001558  0101               	movlb	1	; () banked
  3131  00155A  0101               	movlb	1	; () banked
  3132  00155C  5185               	movf	_KEY_BUFFER& (0+255),w,b
  3133  00155E  0A42               	xorlw	66
  3134  001560  A4D8               	btfss	status,2,c
  3135  001562  D004               	goto	l5468
  3136                           
  3137                           ; BSR set to: 1
  3138                           ;main.c: 422: ansBuffer.ans = 'B';
  3139  001564  0100               	movlb	0	; () banked
  3140  001566  6FBA               	movwf	??_runPaper& (0+255),b
  3141  001568  0E42               	movlw	66
  3142  00156A  D01D               	goto	L9
  3143  00156C                     l5468:
  3144  00156C  0101               	movlb	1	; () banked
  3145  00156E  0101               	movlb	1	; () banked
  3146  001570  5185               	movf	_KEY_BUFFER& (0+255),w,b
  3147  001572  0A44               	xorlw	68
  3148  001574  A4D8               	btfss	status,2,c
  3149  001576  D004               	goto	l5472
  3150                           
  3151                           ; BSR set to: 1
  3152                           ;main.c: 424: ansBuffer.ans = 'C';
  3153  001578  0100               	movlb	0	; () banked
  3154  00157A  6FBA               	movwf	??_runPaper& (0+255),b
  3155  00157C  0E43               	movlw	67
  3156  00157E  D013               	goto	L9
  3157  001580                     l5472:
  3158  001580  0101               	movlb	1	; () banked
  3159  001582  0101               	movlb	1	; () banked
  3160  001584  5185               	movf	_KEY_BUFFER& (0+255),w,b
  3161  001586  0A48               	xorlw	72
  3162  001588  A4D8               	btfss	status,2,c
  3163  00158A  D004               	goto	l5476
  3164                           
  3165                           ; BSR set to: 1
  3166                           ;main.c: 426: ansBuffer.ans = 'D';
  3167  00158C  0100               	movlb	0	; () banked
  3168  00158E  6FBA               	movwf	??_runPaper& (0+255),b
  3169  001590  0E44               	movlw	68
  3170  001592  D009               	goto	L9
  3171  001594                     l5476:
  3172  001594  0101               	movlb	1	; () banked
  3173  001596  0101               	movlb	1	; () banked
  3174  001598  5185               	movf	_KEY_BUFFER& (0+255),w,b
  3175  00159A  0A81               	xorlw	129
  3176  00159C  A4D8               	btfss	status,2,c
  3177  00159E  D007               	goto	l5480
  3178                           
  3179                           ; BSR set to: 1
  3180                           ;main.c: 428: ansBuffer.ans = 'E';
  3181  0015A0  0100               	movlb	0	; () banked
  3182  0015A2  6FBA               	movwf	??_runPaper& (0+255),b
  3183  0015A4  0E45               	movlw	69
  3184  0015A6                     L9:
  3185  0015A6  0100               	movlb	0	; () banked
  3186  0015A8  0100               	movlb	0	; () banked
  3187  0015AA  6FE0               	movwf	runPaper@ansBuffer& (0+255),b
  3188  0015AC  D00C               	goto	L6
  3189  0015AE                     l5480:
  3190  0015AE  0101               	movlb	1	; () banked
  3191  0015B0  0101               	movlb	1	; () banked
  3192  0015B2  5185               	movf	_KEY_BUFFER& (0+255),w,b
  3193  0015B4  0A12               	xorlw	18
  3194  0015B6  A4D8               	btfss	status,2,c
  3195  0015B8  D008               	goto	l5484
  3196                           
  3197                           ; BSR set to: 1
  3198                           ;main.c: 430: ansBuffer.flag = 1;
  3199  0015BA  0100               	movlb	0	; () banked
  3200  0015BC  6FBA               	movwf	??_runPaper& (0+255),b
  3201  0015BE  0E01               	movlw	1
  3202  0015C0  0100               	movlb	0	; () banked
  3203  0015C2  0100               	movlb	0	; () banked
  3204  0015C4  6FE1               	movwf	(runPaper@ansBuffer+1)& (0+255),b
  3205  0015C6                     L6:
  3206  0015C6  0100               	movlb	0	; () banked
  3207  0015C8  51BA               	movf	??_runPaper& (0+255),w,b
  3208  0015CA                     l5484:
  3209  0015CA  0100               	movlb	0	; () banked
  3210  0015CC  0100               	movlb	0	; () banked
  3211  0015CE  51DF               	movf	runPaper@qCount_tmp& (0+255),w,b
  3212  0015D0  0100               	movlb	0	; () banked
  3213  0015D2  0100               	movlb	0	; () banked
  3214  0015D4  5DFD               	subwf	_MCQCnt& (0+255),w,b
  3215  0015D6  B0D8               	btfsc	status,0,c
  3216  0015D8  D650               	goto	l5394
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;main.c: 431: }
  3220                           ;main.c: 434: }
  3221                           ;main.c: 436: interruptConfig(0);
  3222                           
  3223                           ; BSR set to: 0
  3224  0015DA  0E00               	movlw	0
  3225  0015DC  ECEA  F017         	call	_interruptConfig
  3226                           
  3227                           ;main.c: 437: LCD_WriteCommand(0x01);
  3228  0015E0  0E01               	movlw	1
  3229  0015E2  ECFF  F00E         	call	_LCD_WriteCommand
  3230                           
  3231                           ;main.c: 438: LCD_WriteStringAt(1, 1, "You have finished");
  3232  0015E6  0100               	movlb	0	; () banked
  3233  0015E8  6FBA               	movwf	??_runPaper& (0+255),b
  3234  0015EA  0E01               	movlw	1
  3235  0015EC  6E23               	movwf	LCD_WriteStringAt@column,c
  3236  0015EE  0100               	movlb	0	; () banked
  3237  0015F0  51BA               	movf	??_runPaper& (0+255),w,b
  3238  0015F2  0E08               	movlw	high STR_4
  3239  0015F4  6E25               	movwf	LCD_WriteStringAt@string+1,c
  3240  0015F6  0E16               	movlw	low STR_4
  3241  0015F8  6E24               	movwf	LCD_WriteStringAt@string,c
  3242  0015FA  0E01               	movlw	1
  3243  0015FC  EC1A  F015         	call	_LCD_WriteStringAt
  3244                           
  3245                           ;main.c: 439: LCD_WriteStringAt(2, 1, "Submit answers");
  3246  001600  0100               	movlb	0	; () banked
  3247  001602  6FBA               	movwf	??_runPaper& (0+255),b
  3248  001604  0E01               	movlw	1
  3249  001606  6E23               	movwf	LCD_WriteStringAt@column,c
  3250  001608  0100               	movlb	0	; () banked
  3251  00160A  51BA               	movf	??_runPaper& (0+255),w,b
  3252  00160C  0E08               	movlw	high STR_5
  3253  00160E  6E25               	movwf	LCD_WriteStringAt@string+1,c
  3254  001610  0E47               	movlw	low STR_5
  3255  001612  6E24               	movwf	LCD_WriteStringAt@string,c
  3256  001614  0E02               	movlw	2
  3257  001616  EC1A  F015         	call	_LCD_WriteStringAt
  3258                           
  3259                           ;main.c: 440: if (get_yes_no(3)) {
  3260  00161A  0E03               	movlw	3
  3261  00161C  ECED  F011         	call	_get_yes_no
  3262  001620  0900               	iorlw	0
  3263  001622  B4D8               	btfsc	status,2,c
  3264  001624  D623               	goto	l5392
  3265                           
  3266                           ;main.c: 441: LCD_WriteCommand(0x01);
  3267  001626  0E01               	movlw	1
  3268  001628  ECFF  F00E         	call	_LCD_WriteCommand
  3269                           
  3270                           ;main.c: 442: LCD_WriteStringAt(2, 1, "ok");
  3271  00162C  0100               	movlb	0	; () banked
  3272  00162E  6FBA               	movwf	??_runPaper& (0+255),b
  3273  001630  0E01               	movlw	1
  3274  001632  6E23               	movwf	LCD_WriteStringAt@column,c
  3275  001634  0100               	movlb	0	; () banked
  3276  001636  51BA               	movf	??_runPaper& (0+255),w,b
  3277  001638  0E08               	movlw	high STR_6
  3278  00163A  6E25               	movwf	LCD_WriteStringAt@string+1,c
  3279  00163C  0E84               	movlw	low STR_6
  3280  00163E  6E24               	movwf	LCD_WriteStringAt@string,c
  3281  001640  0E02               	movlw	2
  3282  001642  EC1A  F015         	call	_LCD_WriteStringAt
  3283                           
  3284                           ;main.c: 443: Delay_1000ms();
  3285  001646  EC3D  F017         	call	_Delay_1000ms	;wreg free
  3286  00164A  D610               	goto	l5392
  3287  00164C                     __end_of_runPaper:
  3288                           	opt stack 0
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           prodl	equ	0xFF3
  3294                           intcon	equ	0xFF2
  3295                           postinc0	equ	0xFEE
  3296                           wreg	equ	0xFE8
  3297                           postinc1	equ	0xFE6
  3298                           postdec1	equ	0xFE5
  3299                           fsr1l	equ	0xFE1
  3300                           postinc2	equ	0xFDE
  3301                           status	equ	0xFD8
  3302                           
  3303 ;; *************** function _subMenu *****************
  3304 ;; Defined at:
  3305 ;;		line 449 in file "main.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;		None
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  i               2   85[BANK0 ] int 
  3310 ;;  rc              2   87[BANK0 ] int 
  3311 ;;  lc              2   83[BANK0 ] int 
  3312 ;;  txt1           19   12[BANK0 ] unsigned char [19]
  3313 ;;  txt3           18   31[BANK0 ] unsigned char [18]
  3314 ;;  txt2           17   66[BANK0 ] unsigned char [17]
  3315 ;;  txt0           17   49[BANK0 ] unsigned char [17]
  3316 ;;  menuNumber      1   89[BANK0 ] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;		None               void
  3319 ;; Registers used:
  3320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3326 ;;      Params:         0       0       0       0       0       0       0       0       0
  3327 ;;      Locals:         0      78       0       0       0       0       0       0       0
  3328 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3329 ;;      Totals:         0      81       0       0       0       0       0       0       0
  3330 ;;Total ram usage:       81 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    8
  3333 ;; This function calls:
  3334 ;;		_LCD_WriteCharAt
  3335 ;;		_LCD_WriteCommand
  3336 ;;		_LCD_WriteStringAt
  3337 ;;		_Read_b_eep
  3338 ;;		___awdiv
  3339 ;;		___awmod
  3340 ;;		_readKey
  3341 ;;		_view_answers
  3342 ;; This function is called by:
  3343 ;;		_runPaper
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text8
  3348  000DF6                     __ptext8:
  3349                           	opt stack 0
  3350  000DF6                     _subMenu:
  3351                           	opt stack 19
  3352                           
  3353                           ;main.c: 450: char menuNumber = 1;
  3354                           
  3355                           ;incstack = 0
  3356  000DF6  0100               	movlb	0	; () banked
  3357  000DF8  6F69               	movwf	??_subMenu& (0+255),b
  3358  000DFA  0E01               	movlw	1
  3359  000DFC  0100               	movlb	0	; () banked
  3360  000DFE  0100               	movlb	0	; () banked
  3361  000E00  6FB9               	movwf	subMenu@menuNumber& (0+255),b
  3362  000E02  0100               	movlb	0	; () banked
  3363  000E04  5169               	movf	??_subMenu& (0+255),w,b
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;main.c: 451: char txt0[] = "Select an option";
  3367  000E06  EE21  F034         	lfsr	2,subMenu@F5385
  3368  000E0A  EE10  F091         	lfsr	1,subMenu@txt0
  3369  000E0E  0E11               	movlw	17
  3370  000E10                     u4671:
  3371  000E10  CFDE FFE6          	movff	postinc2,postinc1
  3372  000E14  2EE8               	decfsz	wreg,f,c
  3373  000E16  D7FC               	goto	u4671
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;main.c: 452: char txt1[] = "1-view all answers";
  3377  000E18  EE22  F0A4         	lfsr	2,subMenu@F5387
  3378  000E1C  EE10  F06C         	lfsr	1,subMenu@txt1
  3379  000E20  0E13               	movlw	19
  3380  000E22                     u4681:
  3381  000E22  CFDE FFE6          	movff	postinc2,postinc1
  3382  000E26  2EE8               	decfsz	wreg,f,c
  3383  000E28  D7FC               	goto	u4681
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;main.c: 453: char txt2[] = "2-view all flags";
  3387  000E2A  EE21  F045         	lfsr	2,subMenu@F5389
  3388  000E2E  EE10  F0A2         	lfsr	1,subMenu@txt2
  3389  000E32  0E11               	movlw	17
  3390  000E34                     u4691:
  3391  000E34  CFDE FFE6          	movff	postinc2,postinc1
  3392  000E38  2EE8               	decfsz	wreg,f,c
  3393  000E3A  D7FC               	goto	u4691
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;main.c: 454: char txt3[] = "3-Save and Submit";
  3397  000E3C  EE22  F0DB         	lfsr	2,subMenu@F5391
  3398  000E40  EE10  F07F         	lfsr	1,subMenu@txt3
  3399  000E44  0E12               	movlw	18
  3400  000E46                     u4701:
  3401  000E46  CFDE FFE6          	movff	postinc2,postinc1
  3402  000E4A  2EE8               	decfsz	wreg,f,c
  3403  000E4C  D7FC               	goto	u4701
  3404  000E4E                     l5268:
  3405                           
  3406                           ;main.c: 459: LCD_WriteCommand(0x01);
  3407  000E4E  0E01               	movlw	1
  3408  000E50  ECFF  F00E         	call	_LCD_WriteCommand
  3409                           
  3410                           ;main.c: 460: LCD_WriteStringAt(1, 3, txt0);
  3411  000E54  0100               	movlb	0	; () banked
  3412  000E56  6F69               	movwf	??_subMenu& (0+255),b
  3413  000E58  0E03               	movlw	3
  3414  000E5A  6E23               	movwf	LCD_WriteStringAt@column,c
  3415  000E5C  0100               	movlb	0	; () banked
  3416  000E5E  5169               	movf	??_subMenu& (0+255),w,b
  3417  000E60  0100               	movlb	0	; () banked
  3418  000E62  0E00               	movlw	high subMenu@txt0
  3419  000E64  6E25               	movwf	LCD_WriteStringAt@string+1,c
  3420  000E66  0100               	movlb	0	; () banked
  3421  000E68  0E91               	movlw	low subMenu@txt0
  3422  000E6A  6E24               	movwf	LCD_WriteStringAt@string,c
  3423  000E6C  0E01               	movlw	1
  3424  000E6E  EC1A  F015         	call	_LCD_WriteStringAt
  3425                           
  3426                           ;main.c: 461: LCD_WriteStringAt(2, 3, txt1);
  3427  000E72  0100               	movlb	0	; () banked
  3428  000E74  6F69               	movwf	??_subMenu& (0+255),b
  3429  000E76  0E03               	movlw	3
  3430  000E78  6E23               	movwf	LCD_WriteStringAt@column,c
  3431  000E7A  0100               	movlb	0	; () banked
  3432  000E7C  5169               	movf	??_subMenu& (0+255),w,b
  3433  000E7E  0100               	movlb	0	; () banked
  3434  000E80  0E00               	movlw	high subMenu@txt1
  3435  000E82  6E25               	movwf	LCD_WriteStringAt@string+1,c
  3436  000E84  0100               	movlb	0	; () banked
  3437  000E86  0E6C               	movlw	low subMenu@txt1
  3438  000E88  6E24               	movwf	LCD_WriteStringAt@string,c
  3439  000E8A  0E02               	movlw	2
  3440  000E8C  EC1A  F015         	call	_LCD_WriteStringAt
  3441                           
  3442                           ;main.c: 462: LCD_WriteStringAt(3, 3, txt2);
  3443  000E90  0100               	movlb	0	; () banked
  3444  000E92  6F69               	movwf	??_subMenu& (0+255),b
  3445  000E94  0E03               	movlw	3
  3446  000E96  6E23               	movwf	LCD_WriteStringAt@column,c
  3447  000E98  0100               	movlb	0	; () banked
  3448  000E9A  5169               	movf	??_subMenu& (0+255),w,b
  3449  000E9C  0100               	movlb	0	; () banked
  3450  000E9E  0E00               	movlw	high subMenu@txt2
  3451  000EA0  6E25               	movwf	LCD_WriteStringAt@string+1,c
  3452  000EA2  0100               	movlb	0	; () banked
  3453  000EA4  0EA2               	movlw	low subMenu@txt2
  3454  000EA6  6E24               	movwf	LCD_WriteStringAt@string,c
  3455  000EA8  0E03               	movlw	3
  3456  000EAA  EC1A  F015         	call	_LCD_WriteStringAt
  3457                           
  3458                           ;main.c: 463: LCD_WriteStringAt(4, 3, txt3);
  3459  000EAE  0100               	movlb	0	; () banked
  3460  000EB0  6F69               	movwf	??_subMenu& (0+255),b
  3461  000EB2  0E03               	movlw	3
  3462  000EB4  6E23               	movwf	LCD_WriteStringAt@column,c
  3463  000EB6  0100               	movlb	0	; () banked
  3464  000EB8  5169               	movf	??_subMenu& (0+255),w,b
  3465  000EBA  0100               	movlb	0	; () banked
  3466  000EBC  0E00               	movlw	high subMenu@txt3
  3467  000EBE  6E25               	movwf	LCD_WriteStringAt@string+1,c
  3468  000EC0  0100               	movlb	0	; () banked
  3469  000EC2  0E7F               	movlw	low subMenu@txt3
  3470  000EC4  6E24               	movwf	LCD_WriteStringAt@string,c
  3471  000EC6  0E04               	movlw	4
  3472  000EC8  EC1A  F015         	call	_LCD_WriteStringAt
  3473                           
  3474                           ;main.c: 464: LCD_WriteCharAt(menuNumber + 1, 1, 0b01111110);
  3475  000ECC  0100               	movlb	0	; () banked
  3476  000ECE  6F69               	movwf	??_subMenu& (0+255),b
  3477  000ED0  0E01               	movlw	1
  3478  000ED2  6E27               	movwf	LCD_WriteCharAt@column,c
  3479  000ED4  0100               	movlb	0	; () banked
  3480  000ED6  5169               	movf	??_subMenu& (0+255),w,b
  3481  000ED8  0100               	movlb	0	; () banked
  3482  000EDA  6F6A               	movwf	(??_subMenu+1)& (0+255),b
  3483  000EDC  0E7E               	movlw	126
  3484  000EDE  6E28               	movwf	LCD_WriteCharAt@chr,c
  3485  000EE0  0100               	movlb	0	; () banked
  3486  000EE2  516A               	movf	(??_subMenu+1)& (0+255),w,b
  3487  000EE4  0100               	movlb	0	; () banked
  3488  000EE6  0100               	movlb	0	; () banked
  3489  000EE8  29B9               	incf	subMenu@menuNumber& (0+255),w,b
  3490  000EEA  ECBC  F016         	call	_LCD_WriteCharAt
  3491                           
  3492                           ;main.c: 465: KEY_BUFFER = readKey();
  3493  000EEE  EC30  F014         	call	_readKey	;wreg free
  3494  000EF2  0101               	movlb	1	; () banked
  3495  000EF4  0101               	movlb	1	; () banked
  3496  000EF6  6F85               	movwf	_KEY_BUFFER& (0+255),b
  3497                           
  3498                           ; BSR set to: 1
  3499                           ;main.c: 466: if (KEY_BUFFER == 0x22) {
  3500  000EF8  0101               	movlb	1	; () banked
  3501  000EFA  0101               	movlb	1	; () banked
  3502  000EFC  5185               	movf	_KEY_BUFFER& (0+255),w,b
  3503  000EFE  0A22               	xorlw	34
  3504  000F00  A4D8               	btfss	status,2,c
  3505  000F02  D01E               	goto	l5292
  3506                           
  3507                           ; BSR set to: 1
  3508                           ;main.c: 467: LCD_WriteCharAt(menuNumber, 1, ' ');
  3509  000F04  0100               	movlb	0	; () banked
  3510  000F06  6F69               	movwf	??_subMenu& (0+255),b
  3511  000F08  0E01               	movlw	1
  3512  000F0A  6E27               	movwf	LCD_WriteCharAt@column,c
  3513  000F0C  0100               	movlb	0	; () banked
  3514  000F0E  5169               	movf	??_subMenu& (0+255),w,b
  3515  000F10  0100               	movlb	0	; () banked
  3516  000F12  6F6A               	movwf	(??_subMenu+1)& (0+255),b
  3517  000F14  0E20               	movlw	32
  3518  000F16  6E28               	movwf	LCD_WriteCharAt@chr,c
  3519  000F18  0100               	movlb	0	; () banked
  3520  000F1A  516A               	movf	(??_subMenu+1)& (0+255),w,b
  3521  000F1C  0100               	movlb	0	; () banked
  3522  000F1E  0100               	movlb	0	; () banked
  3523  000F20  51B9               	movf	subMenu@menuNumber& (0+255),w,b
  3524  000F22  ECBC  F016         	call	_LCD_WriteCharAt
  3525                           
  3526                           ;main.c: 468: if (menuNumber == 1) {
  3527  000F26  0100               	movlb	0	; () banked
  3528  000F28  0100               	movlb	0	; () banked
  3529  000F2A  05B9               	decf	subMenu@menuNumber& (0+255),w,b
  3530  000F2C  A4D8               	btfss	status,2,c
  3531  000F2E  D004               	goto	l5290
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;main.c: 469: menuNumber = 3;
  3535  000F30  0100               	movlb	0	; () banked
  3536  000F32  6F69               	movwf	??_subMenu& (0+255),b
  3537  000F34  0E03               	movlw	3
  3538  000F36  D024               	goto	L10
  3539  000F38                     l5290:
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;main.c: 471: menuNumber--;
  3543  000F38  0100               	movlb	0	; () banked
  3544  000F3A  0100               	movlb	0	; () banked
  3545  000F3C  07B9               	decf	subMenu@menuNumber& (0+255),f,b
  3546  000F3E  D787               	goto	l5268
  3547  000F40                     l5292:
  3548  000F40  0101               	movlb	1	; () banked
  3549  000F42  0101               	movlb	1	; () banked
  3550  000F44  5185               	movf	_KEY_BUFFER& (0+255),w,b
  3551  000F46  0A28               	xorlw	40
  3552  000F48  A4D8               	btfss	status,2,c
  3553  000F4A  D024               	goto	l5302
  3554                           
  3555                           ; BSR set to: 1
  3556                           ;main.c: 473: LCD_WriteCharAt(menuNumber, 1, ' ');
  3557  000F4C  0100               	movlb	0	; () banked
  3558  000F4E  6F69               	movwf	??_subMenu& (0+255),b
  3559  000F50  0E01               	movlw	1
  3560  000F52  6E27               	movwf	LCD_WriteCharAt@column,c
  3561  000F54  0100               	movlb	0	; () banked
  3562  000F56  5169               	movf	??_subMenu& (0+255),w,b
  3563  000F58  0100               	movlb	0	; () banked
  3564  000F5A  6F6A               	movwf	(??_subMenu+1)& (0+255),b
  3565  000F5C  0E20               	movlw	32
  3566  000F5E  6E28               	movwf	LCD_WriteCharAt@chr,c
  3567  000F60  0100               	movlb	0	; () banked
  3568  000F62  516A               	movf	(??_subMenu+1)& (0+255),w,b
  3569  000F64  0100               	movlb	0	; () banked
  3570  000F66  0100               	movlb	0	; () banked
  3571  000F68  51B9               	movf	subMenu@menuNumber& (0+255),w,b
  3572  000F6A  ECBC  F016         	call	_LCD_WriteCharAt
  3573                           
  3574                           ;main.c: 474: if (menuNumber == 3) {
  3575  000F6E  0100               	movlb	0	; () banked
  3576  000F70  0100               	movlb	0	; () banked
  3577  000F72  51B9               	movf	subMenu@menuNumber& (0+255),w,b
  3578  000F74  0A03               	xorlw	3
  3579  000F76  A4D8               	btfss	status,2,c
  3580  000F78  D009               	goto	l5300
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;main.c: 475: menuNumber = 1;
  3584  000F7A  0100               	movlb	0	; () banked
  3585  000F7C  6F69               	movwf	??_subMenu& (0+255),b
  3586  000F7E  0E01               	movlw	1
  3587  000F80                     L10:
  3588  000F80  0100               	movlb	0	; () banked
  3589  000F82  0100               	movlb	0	; () banked
  3590  000F84  6FB9               	movwf	subMenu@menuNumber& (0+255),b
  3591  000F86  0100               	movlb	0	; () banked
  3592  000F88  5169               	movf	??_subMenu& (0+255),w,b
  3593                           
  3594                           ;main.c: 476: } else
  3595  000F8A  D761               	goto	l5268
  3596  000F8C                     l5300:
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;main.c: 477: menuNumber++;
  3600  000F8C  0100               	movlb	0	; () banked
  3601  000F8E  0100               	movlb	0	; () banked
  3602  000F90  2BB9               	incf	subMenu@menuNumber& (0+255),f,b
  3603  000F92  D75D               	goto	l5268
  3604  000F94                     l5302:
  3605  000F94  0101               	movlb	1	; () banked
  3606  000F96  0101               	movlb	1	; () banked
  3607  000F98  5185               	movf	_KEY_BUFFER& (0+255),w,b
  3608  000F9A  0A12               	xorlw	18
  3609  000F9C  A4D8               	btfss	status,2,c
  3610  000F9E  D13B               	goto	l5364
  3611                           
  3612                           ; BSR set to: 1
  3613                           ;main.c: 479: if (menuNumber == 1) {
  3614  000FA0  0100               	movlb	0	; () banked
  3615  000FA2  0100               	movlb	0	; () banked
  3616  000FA4  05B9               	decf	subMenu@menuNumber& (0+255),w,b
  3617  000FA6  A4D8               	btfss	status,2,c
  3618  000FA8  D014               	goto	l5310
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;main.c: 480: LCD_WriteCommand(0x01);
  3622  000FAA  0E01               	movlw	1
  3623  000FAC  ECFF  F00E         	call	_LCD_WriteCommand
  3624                           
  3625                           ;main.c: 481: view_answers(1, 1);
  3626  000FB0  0E00               	movlw	0
  3627  000FB2  0100               	movlb	0	; () banked
  3628  000FB4  0100               	movlb	0	; () banked
  3629  000FB6  6F61               	movwf	(view_answers@i+1)& (0+255),b
  3630  000FB8  0E01               	movlw	1
  3631  000FBA  0100               	movlb	0	; () banked
  3632  000FBC  6F60               	movwf	view_answers@i& (0+255),b
  3633  000FBE  0E00               	movlw	0
  3634  000FC0  0100               	movlb	0	; () banked
  3635  000FC2  0100               	movlb	0	; () banked
  3636  000FC4  6F63               	movwf	(view_answers@j+1)& (0+255),b
  3637  000FC6  0E01               	movlw	1
  3638  000FC8  0100               	movlb	0	; () banked
  3639  000FCA  6F62               	movwf	view_answers@j& (0+255),b
  3640  000FCC  EC46  F004         	call	_view_answers	;wreg free
  3641                           
  3642                           ;main.c: 485: } else if (menuNumber == 2) {
  3643  000FD0  D73E               	goto	l5268
  3644  000FD2                     l5310:
  3645  000FD2  0100               	movlb	0	; () banked
  3646  000FD4  0100               	movlb	0	; () banked
  3647  000FD6  51B9               	movf	subMenu@menuNumber& (0+255),w,b
  3648  000FD8  0A02               	xorlw	2
  3649  000FDA  A4D8               	btfss	status,2,c
  3650  000FDC  D104               	goto	l5358
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;main.c: 486: LCD_WriteCommand(0x01);
  3654  000FDE  0E01               	movlw	1
  3655  000FE0  ECFF  F00E         	call	_LCD_WriteCommand
  3656                           
  3657                           ;main.c: 487: int lc = 1;
  3658  000FE4  0E00               	movlw	0
  3659  000FE6  0100               	movlb	0	; () banked
  3660  000FE8  0100               	movlb	0	; () banked
  3661  000FEA  6FB4               	movwf	(subMenu@lc+1)& (0+255),b
  3662  000FEC  0E01               	movlw	1
  3663  000FEE  0100               	movlb	0	; () banked
  3664  000FF0  6FB3               	movwf	subMenu@lc& (0+255),b
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;main.c: 488: int rc = 2;
  3668  000FF2  0E00               	movlw	0
  3669  000FF4  0100               	movlb	0	; () banked
  3670  000FF6  0100               	movlb	0	; () banked
  3671  000FF8  6FB8               	movwf	(subMenu@rc+1)& (0+255),b
  3672  000FFA  0E02               	movlw	2
  3673  000FFC  0100               	movlb	0	; () banked
  3674  000FFE  6FB7               	movwf	subMenu@rc& (0+255),b
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;main.c: 489: for (int i = 1; i <= MCQCnt; i++) {
  3678  001000  0E00               	movlw	0
  3679  001002  0100               	movlb	0	; () banked
  3680  001004  0100               	movlb	0	; () banked
  3681  001006  6FB6               	movwf	(subMenu@i+1)& (0+255),b
  3682  001008  0E01               	movlw	1
  3683  00100A  0100               	movlb	0	; () banked
  3684  00100C  6FB5               	movwf	subMenu@i& (0+255),b
  3685  00100E  D0D2               	goto	l5356
  3686  001010                     l5320:
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;main.c: 490: if (Read_b_eep(0x0A + (i)*2 - 1) == 1) {
  3690  001010  90D8               	bcf	status,0,c
  3691  001012  0100               	movlb	0	; () banked
  3692  001014  0100               	movlb	0	; () banked
  3693  001016  35B5               	rlcf	subMenu@i& (0+255),w,b
  3694  001018  0100               	movlb	0	; () banked
  3695  00101A  6F69               	movwf	??_subMenu& (0+255),b
  3696  00101C  0100               	movlb	0	; () banked
  3697  00101E  0100               	movlb	0	; () banked
  3698  001020  35B6               	rlcf	(subMenu@i+1)& (0+255),w,b
  3699  001022  0100               	movlb	0	; () banked
  3700  001024  6F6A               	movwf	(??_subMenu+1)& (0+255),b
  3701  001026  0E09               	movlw	9
  3702  001028  0100               	movlb	0	; () banked
  3703  00102A  2569               	addwf	??_subMenu& (0+255),w,b
  3704  00102C  6E1E               	movwf	Read_b_eep@badd,c
  3705  00102E  0E00               	movlw	0
  3706  001030  0100               	movlb	0	; () banked
  3707  001032  216A               	addwfc	(??_subMenu+1)& (0+255),w,b
  3708  001034  6E1F               	movwf	Read_b_eep@badd+1,c
  3709  001036  ECE1  F017         	call	_Read_b_eep	;wreg free
  3710  00103A  0100               	movlb	0	; () banked
  3711  00103C  6F6B               	movwf	(??_subMenu+2)& (0+255),b
  3712  00103E  0100               	movlb	0	; () banked
  3713  001040  056B               	decf	(??_subMenu+2)& (0+255),w,b
  3714  001042  A4D8               	btfss	status,2,c
  3715  001044  D0AC               	goto	l5352
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;main.c: 492: LCD_WriteCharAt(lc, rc, 48 + i / 10);
  3719  001046  C0B7  F027         	movff	subMenu@rc,LCD_WriteCharAt@column
  3720  00104A  C0B5  F01E         	movff	subMenu@i,___awdiv@dividend
  3721  00104E  C0B6  F01F         	movff	subMenu@i+1,___awdiv@dividend+1
  3722  001052  0E00               	movlw	0
  3723  001054  6E21               	movwf	___awdiv@divisor+1,c
  3724  001056  0E0A               	movlw	10
  3725  001058  6E20               	movwf	___awdiv@divisor,c
  3726  00105A  ECE0  F012         	call	___awdiv	;wreg free
  3727  00105E  501E               	movf	?___awdiv,w,c
  3728  001060  0F30               	addlw	48
  3729  001062  6E28               	movwf	LCD_WriteCharAt@chr,c
  3730  001064  0100               	movlb	0	; () banked
  3731  001066  0100               	movlb	0	; () banked
  3732  001068  51B3               	movf	subMenu@lc& (0+255),w,b
  3733  00106A  ECBC  F016         	call	_LCD_WriteCharAt
  3734                           
  3735                           ;main.c: 493: LCD_WriteCharAt(lc, ++rc, 48 + i % 10);
  3736  00106E  0100               	movlb	0	; () banked
  3737  001070  0100               	movlb	0	; () banked
  3738  001072  4BB7               	infsnz	subMenu@rc& (0+255),f,b
  3739  001074  2BB8               	incf	(subMenu@rc+1)& (0+255),f,b
  3740  001076  C0B7  F027         	movff	subMenu@rc,LCD_WriteCharAt@column
  3741  00107A  C0B5  F01E         	movff	subMenu@i,___awmod@dividend
  3742  00107E  C0B6  F01F         	movff	subMenu@i+1,___awmod@dividend+1
  3743  001082  0E00               	movlw	0
  3744  001084  6E21               	movwf	___awmod@divisor+1,c
  3745  001086  0E0A               	movlw	10
  3746  001088  6E20               	movwf	___awmod@divisor,c
  3747  00108A  EC7E  F014         	call	___awmod	;wreg free
  3748  00108E  501E               	movf	?___awmod,w,c
  3749  001090  0F30               	addlw	48
  3750  001092  6E28               	movwf	LCD_WriteCharAt@chr,c
  3751  001094  0100               	movlb	0	; () banked
  3752  001096  0100               	movlb	0	; () banked
  3753  001098  51B3               	movf	subMenu@lc& (0+255),w,b
  3754  00109A  ECBC  F016         	call	_LCD_WriteCharAt
  3755                           
  3756                           ;main.c: 494: LCD_WriteCharAt(lc, ++rc, 0b00111010);
  3757  00109E  0100               	movlb	0	; () banked
  3758  0010A0  0100               	movlb	0	; () banked
  3759  0010A2  4BB7               	infsnz	subMenu@rc& (0+255),f,b
  3760  0010A4  2BB8               	incf	(subMenu@rc+1)& (0+255),f,b
  3761  0010A6  C0B7  F027         	movff	subMenu@rc,LCD_WriteCharAt@column
  3762  0010AA  0100               	movlb	0	; () banked
  3763  0010AC  6F69               	movwf	??_subMenu& (0+255),b
  3764  0010AE  0E3A               	movlw	58
  3765  0010B0  6E28               	movwf	LCD_WriteCharAt@chr,c
  3766  0010B2  0100               	movlb	0	; () banked
  3767  0010B4  5169               	movf	??_subMenu& (0+255),w,b
  3768  0010B6  0100               	movlb	0	; () banked
  3769  0010B8  0100               	movlb	0	; () banked
  3770  0010BA  51B3               	movf	subMenu@lc& (0+255),w,b
  3771  0010BC  ECBC  F016         	call	_LCD_WriteCharAt
  3772                           
  3773                           ;main.c: 495: LCD_WriteCharAt(lc, ++rc, Read_b_eep(0x0A + (i - 1)*2));
  3774  0010C0  0100               	movlb	0	; () banked
  3775  0010C2  0100               	movlb	0	; () banked
  3776  0010C4  4BB7               	infsnz	subMenu@rc& (0+255),f,b
  3777  0010C6  2BB8               	incf	(subMenu@rc+1)& (0+255),f,b
  3778  0010C8  C0B7  F027         	movff	subMenu@rc,LCD_WriteCharAt@column
  3779  0010CC  90D8               	bcf	status,0,c
  3780  0010CE  0100               	movlb	0	; () banked
  3781  0010D0  0100               	movlb	0	; () banked
  3782  0010D2  35B5               	rlcf	subMenu@i& (0+255),w,b
  3783  0010D4  0100               	movlb	0	; () banked
  3784  0010D6  6F69               	movwf	??_subMenu& (0+255),b
  3785  0010D8  0100               	movlb	0	; () banked
  3786  0010DA  0100               	movlb	0	; () banked
  3787  0010DC  35B6               	rlcf	(subMenu@i+1)& (0+255),w,b
  3788  0010DE  0100               	movlb	0	; () banked
  3789  0010E0  6F6A               	movwf	(??_subMenu+1)& (0+255),b
  3790  0010E2  0E08               	movlw	8
  3791  0010E4  0100               	movlb	0	; () banked
  3792  0010E6  2569               	addwf	??_subMenu& (0+255),w,b
  3793  0010E8  6E1E               	movwf	Read_b_eep@badd,c
  3794  0010EA  0E00               	movlw	0
  3795  0010EC  0100               	movlb	0	; () banked
  3796  0010EE  216A               	addwfc	(??_subMenu+1)& (0+255),w,b
  3797  0010F0  6E1F               	movwf	Read_b_eep@badd+1,c
  3798  0010F2  ECE1  F017         	call	_Read_b_eep	;wreg free
  3799  0010F6  6E28               	movwf	LCD_WriteCharAt@chr,c
  3800  0010F8  0100               	movlb	0	; () banked
  3801  0010FA  0100               	movlb	0	; () banked
  3802  0010FC  51B3               	movf	subMenu@lc& (0+255),w,b
  3803  0010FE  ECBC  F016         	call	_LCD_WriteCharAt
  3804                           
  3805                           ;main.c: 496: rc=rc + 3;
  3806  001102  0E03               	movlw	3
  3807  001104  0100               	movlb	0	; () banked
  3808  001106  0100               	movlb	0	; () banked
  3809  001108  25B7               	addwf	subMenu@rc& (0+255),w,b
  3810  00110A  0100               	movlb	0	; () banked
  3811  00110C  0100               	movlb	0	; () banked
  3812  00110E  6FB7               	movwf	subMenu@rc& (0+255),b
  3813  001110  0E00               	movlw	0
  3814  001112  0100               	movlb	0	; () banked
  3815  001114  0100               	movlb	0	; () banked
  3816  001116  21B8               	addwfc	(subMenu@rc+1)& (0+255),w,b
  3817  001118  0100               	movlb	0	; () banked
  3818  00111A  6FB8               	movwf	(subMenu@rc+1)& (0+255),b
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;main.c: 497: if (rc == 20) {
  3822  00111C  0100               	movlb	0	; () banked
  3823  00111E  0100               	movlb	0	; () banked
  3824  001120  51B7               	movf	subMenu@rc& (0+255),w,b
  3825  001122  0A14               	xorlw	20
  3826  001124  11B8               	iorwf	(subMenu@rc+1)& (0+255),w,b
  3827  001126  A4D8               	btfss	status,2,c
  3828  001128  D03A               	goto	l5352
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;main.c: 498: rc = 2;
  3832  00112A  0E00               	movlw	0
  3833  00112C  0100               	movlb	0	; () banked
  3834  00112E  0100               	movlb	0	; () banked
  3835  001130  6FB8               	movwf	(subMenu@rc+1)& (0+255),b
  3836  001132  0E02               	movlw	2
  3837  001134  0100               	movlb	0	; () banked
  3838  001136  6FB7               	movwf	subMenu@rc& (0+255),b
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;main.c: 499: ++lc;
  3842  001138  0100               	movlb	0	; () banked
  3843  00113A  0100               	movlb	0	; () banked
  3844  00113C  4BB3               	infsnz	subMenu@lc& (0+255),f,b
  3845  00113E  2BB4               	incf	(subMenu@lc+1)& (0+255),f,b
  3846  001140  D02E               	goto	l5352
  3847  001142                     l5336:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;main.c: 503: KEY_BUFFER = readKey();
  3851  001142  EC30  F014         	call	_readKey	;wreg free
  3852  001146  0101               	movlb	1	; () banked
  3853  001148  0101               	movlb	1	; () banked
  3854  00114A  6F85               	movwf	_KEY_BUFFER& (0+255),b
  3855                           
  3856                           ; BSR set to: 1
  3857                           ;main.c: 504: if (KEY_BUFFER == 0x22) {
  3858  00114C  0101               	movlb	1	; () banked
  3859  00114E  0101               	movlb	1	; () banked
  3860  001150  5185               	movf	_KEY_BUFFER& (0+255),w,b
  3861  001152  0A22               	xorlw	34
  3862  001154  B4D8               	btfsc	status,2,c
  3863  001156  D023               	goto	l5352
  3864                           
  3865                           ; BSR set to: 1
  3866                           
  3867                           ; BSR set to: 1
  3868                           
  3869                           ; BSR set to: 1
  3870                           ;main.c: 507: } else if (KEY_BUFFER == 0x28) {
  3871  001158  0101               	movlb	1	; () banked
  3872  00115A  0101               	movlb	1	; () banked
  3873  00115C  5185               	movf	_KEY_BUFFER& (0+255),w,b
  3874  00115E  0A28               	xorlw	40
  3875  001160  A4D8               	btfss	status,2,c
  3876  001162  D01D               	goto	l5352
  3877                           
  3878                           ; BSR set to: 1
  3879                           ;main.c: 508: if (i != MCQCnt) {
  3880  001164  0100               	movlb	0	; () banked
  3881  001166  0100               	movlb	0	; () banked
  3882  001168  51FD               	movf	_MCQCnt& (0+255),w,b
  3883  00116A  0100               	movlb	0	; () banked
  3884  00116C  6F69               	movwf	??_subMenu& (0+255),b
  3885  00116E  6B6A               	clrf	(??_subMenu+1)& (0+255),b
  3886  001170  0100               	movlb	0	; () banked
  3887  001172  0100               	movlb	0	; () banked
  3888  001174  51B6               	movf	(subMenu@i+1)& (0+255),w,b
  3889  001176  0100               	movlb	0	; () banked
  3890  001178  196A               	xorwf	(??_subMenu+1)& (0+255),w,b
  3891  00117A  E105               	bnz	u4825
  3892  00117C  0100               	movlb	0	; () banked
  3893  00117E  0100               	movlb	0	; () banked
  3894  001180  51B5               	movf	subMenu@i& (0+255),w,b
  3895  001182  0100               	movlb	0	; () banked
  3896  001184  1969               	xorwf	??_subMenu& (0+255),w,b
  3897  001186                     u4825:
  3898  001186  B4D8               	btfsc	status,2,c
  3899  001188  D00A               	goto	l5352
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;main.c: 509: LCD_WriteCommand(0x01);
  3903  00118A  0E01               	movlw	1
  3904  00118C  ECFF  F00E         	call	_LCD_WriteCommand
  3905                           
  3906                           ;main.c: 510: lc=1;}
  3907  001190  0E00               	movlw	0
  3908  001192  0100               	movlb	0	; () banked
  3909  001194  0100               	movlb	0	; () banked
  3910  001196  6FB4               	movwf	(subMenu@lc+1)& (0+255),b
  3911  001198  0E01               	movlw	1
  3912  00119A  0100               	movlb	0	; () banked
  3913  00119C  6FB3               	movwf	subMenu@lc& (0+255),b
  3914  00119E                     l5352:
  3915  00119E  0100               	movlb	0	; () banked
  3916  0011A0  0100               	movlb	0	; () banked
  3917  0011A2  51B3               	movf	subMenu@lc& (0+255),w,b
  3918  0011A4  0A05               	xorlw	5
  3919  0011A6  11B4               	iorwf	(subMenu@lc+1)& (0+255),w,b
  3920  0011A8  B4D8               	btfsc	status,2,c
  3921  0011AA  D7CB               	goto	l5336
  3922                           
  3923                           ; BSR set to: 0
  3924                           
  3925                           ; BSR set to: 0
  3926  0011AC  0100               	movlb	0	; () banked
  3927  0011AE  0100               	movlb	0	; () banked
  3928  0011B0  4BB5               	infsnz	subMenu@i& (0+255),f,b
  3929  0011B2  2BB6               	incf	(subMenu@i+1)& (0+255),f,b
  3930  0011B4                     l5356:
  3931                           
  3932                           ; BSR set to: 0
  3933  0011B4  0100               	movlb	0	; () banked
  3934  0011B6  0100               	movlb	0	; () banked
  3935  0011B8  51FD               	movf	_MCQCnt& (0+255),w,b
  3936  0011BA  0100               	movlb	0	; () banked
  3937  0011BC  6F69               	movwf	??_subMenu& (0+255),b
  3938  0011BE  6B6A               	clrf	(??_subMenu+1)& (0+255),b
  3939  0011C0  0100               	movlb	0	; () banked
  3940  0011C2  516A               	movf	(??_subMenu+1)& (0+255),w,b
  3941  0011C4  0A80               	xorlw	128
  3942  0011C6  0100               	movlb	0	; () banked
  3943  0011C8  6F6B               	movwf	(??_subMenu+2)& (0+255),b
  3944  0011CA  0100               	movlb	0	; () banked
  3945  0011CC  0100               	movlb	0	; () banked
  3946  0011CE  51B5               	movf	subMenu@i& (0+255),w,b
  3947  0011D0  0100               	movlb	0	; () banked
  3948  0011D2  5D69               	subwf	??_subMenu& (0+255),w,b
  3949  0011D4  0100               	movlb	0	; () banked
  3950  0011D6  0100               	movlb	0	; () banked
  3951  0011D8  51B6               	movf	(subMenu@i+1)& (0+255),w,b
  3952  0011DA  0A80               	xorlw	128
  3953  0011DC  0100               	movlb	0	; () banked
  3954  0011DE  596B               	subwfb	(??_subMenu+2)& (0+255),w,b
  3955  0011E0  B0D8               	btfsc	status,0,c
  3956  0011E2  D716               	goto	l5320
  3957  0011E4  D016               	goto	L11
  3958  0011E6                     l5358:
  3959  0011E6  0100               	movlb	0	; () banked
  3960  0011E8  0100               	movlb	0	; () banked
  3961  0011EA  51B9               	movf	subMenu@menuNumber& (0+255),w,b
  3962  0011EC  0A03               	xorlw	3
  3963  0011EE  A4D8               	btfss	status,2,c
  3964  0011F0  D62E               	goto	l5268
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;main.c: 523: LCD_WriteCommand(0x01);
  3968  0011F2  0E01               	movlw	1
  3969  0011F4  ECFF  F00E         	call	_LCD_WriteCommand
  3970                           
  3971                           ;main.c: 524: LCD_WriteStringAt(2, 5, "Connecting..");
  3972  0011F8  0100               	movlb	0	; () banked
  3973  0011FA  6F69               	movwf	??_subMenu& (0+255),b
  3974  0011FC  0E05               	movlw	5
  3975  0011FE  6E23               	movwf	LCD_WriteStringAt@column,c
  3976  001200  0100               	movlb	0	; () banked
  3977  001202  5169               	movf	??_subMenu& (0+255),w,b
  3978  001204  0E08               	movlw	high STR_7
  3979  001206  6E25               	movwf	LCD_WriteStringAt@string+1,c
  3980  001208  0E56               	movlw	low STR_7
  3981  00120A  6E24               	movwf	LCD_WriteStringAt@string,c
  3982  00120C  0E02               	movlw	2
  3983  00120E  EC1A  F015         	call	_LCD_WriteStringAt
  3984  001212                     L11:
  3985  001212  0003               	sleep		;# 
  3986  001214  D61C               	goto	l5268
  3987  001216                     l5364:
  3988  001216  0101               	movlb	1	; () banked
  3989  001218  0101               	movlb	1	; () banked
  3990  00121A  5185               	movf	_KEY_BUFFER& (0+255),w,b
  3991  00121C  0A11               	xorlw	17
  3992  00121E  A4D8               	btfss	status,2,c
  3993  001220  D616               	goto	l5268
  3994                           
  3995                           ; BSR set to: 1
  3996                           ;main.c: 529: LCD_WriteCommand(0x01);
  3997  001222  0E01               	movlw	1
  3998  001224  ECFF  F00E         	call	_LCD_WriteCommand
  3999                           
  4000                           ;main.c: 530: return;
  4001  001228  0012               	return	
  4002  00122A                     __end_of_subMenu:
  4003                           	opt stack 0
  4004                           tblptru	equ	0xFF8
  4005                           tblptrh	equ	0xFF7
  4006                           tblptrl	equ	0xFF6
  4007                           tablat	equ	0xFF5
  4008                           prodl	equ	0xFF3
  4009                           intcon	equ	0xFF2
  4010                           postinc0	equ	0xFEE
  4011                           wreg	equ	0xFE8
  4012                           postinc1	equ	0xFE6
  4013                           postdec1	equ	0xFE5
  4014                           fsr1l	equ	0xFE1
  4015                           postinc2	equ	0xFDE
  4016                           status	equ	0xFD8
  4017                           
  4018 ;; *************** function _view_answers *****************
  4019 ;; Defined at:
  4020 ;;		line 535 in file "main.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  i               2    0[BANK0 ] int 
  4023 ;;  j               2    2[BANK0 ] int 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  p               2    7[BANK0 ] int 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  2    0[BANK0 ] int 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0, prodl, cstack
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4035 ;;      Params:         0       4       0       0       0       0       0       0       0
  4036 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4037 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4038 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4039 ;;Total ram usage:        9 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    7
  4042 ;; This function calls:
  4043 ;;		_LCD_WriteCharAt
  4044 ;;		_LCD_WriteCommand
  4045 ;;		_Read_b_eep
  4046 ;;		___awdiv
  4047 ;;		___awmod
  4048 ;;		_readKey
  4049 ;; This function is called by:
  4050 ;;		_subMenu
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text9
  4055  00088C                     __ptext9:
  4056                           	opt stack 0
  4057  00088C                     _view_answers:
  4058                           	opt stack 19
  4059                           
  4060                           ;main.c: 536: int p;
  4061                           ;main.c: 537: for (i = 1; i <= MCQCnt; i++) {
  4062                           
  4063                           ;incstack = 0
  4064  00088C  0E00               	movlw	0
  4065  00088E  0100               	movlb	0	; () banked
  4066  000890  0100               	movlb	0	; () banked
  4067  000892  6F61               	movwf	(view_answers@i+1)& (0+255),b
  4068  000894  0E01               	movlw	1
  4069  000896  0100               	movlb	0	; () banked
  4070  000898  6F60               	movwf	view_answers@i& (0+255),b
  4071  00089A  D294               	goto	l5182
  4072  00089C                     l5082:
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;main.c: 538: p = 0;
  4076  00089C  0E00               	movlw	0
  4077  00089E  0100               	movlb	0	; () banked
  4078  0008A0  0100               	movlb	0	; () banked
  4079  0008A2  6F68               	movwf	(view_answers@p+1)& (0+255),b
  4080  0008A4  0E00               	movlw	0
  4081  0008A6  0100               	movlb	0	; () banked
  4082  0008A8  6F67               	movwf	view_answers@p& (0+255),b
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;main.c: 539: if (i % 3 == 1) {
  4086  0008AA  C060  F01E         	movff	view_answers@i,___awmod@dividend
  4087  0008AE  C061  F01F         	movff	view_answers@i+1,___awmod@dividend+1
  4088  0008B2  0E00               	movlw	0
  4089  0008B4  6E21               	movwf	___awmod@divisor+1,c
  4090  0008B6  0E03               	movlw	3
  4091  0008B8  6E20               	movwf	___awmod@divisor,c
  4092  0008BA  EC7E  F014         	call	___awmod	;wreg free
  4093  0008BE  041E               	decf	?___awmod,w,c
  4094  0008C0  101F               	iorwf	?___awmod+1,w,c
  4095  0008C2  A4D8               	btfss	status,2,c
  4096  0008C4  D08F               	goto	l5096
  4097                           
  4098                           ;main.c: 540: LCD_WriteCharAt(j, 2, 48 + i / 10);
  4099  0008C6  0100               	movlb	0	; () banked
  4100  0008C8  6F64               	movwf	??_view_answers& (0+255),b
  4101  0008CA  0E02               	movlw	2
  4102  0008CC  6E27               	movwf	LCD_WriteCharAt@column,c
  4103  0008CE  0100               	movlb	0	; () banked
  4104  0008D0  5164               	movf	??_view_answers& (0+255),w,b
  4105  0008D2  C060  F01E         	movff	view_answers@i,___awdiv@dividend
  4106  0008D6  C061  F01F         	movff	view_answers@i+1,___awdiv@dividend+1
  4107  0008DA  0E00               	movlw	0
  4108  0008DC  6E21               	movwf	___awdiv@divisor+1,c
  4109  0008DE  0E0A               	movlw	10
  4110  0008E0  6E20               	movwf	___awdiv@divisor,c
  4111  0008E2  ECE0  F012         	call	___awdiv	;wreg free
  4112  0008E6  501E               	movf	?___awdiv,w,c
  4113  0008E8  0F30               	addlw	48
  4114  0008EA  6E28               	movwf	LCD_WriteCharAt@chr,c
  4115  0008EC  0100               	movlb	0	; () banked
  4116  0008EE  0100               	movlb	0	; () banked
  4117  0008F0  5162               	movf	view_answers@j& (0+255),w,b
  4118  0008F2  ECBC  F016         	call	_LCD_WriteCharAt
  4119                           
  4120                           ;main.c: 541: LCD_WriteCharAt(j, 3, 48 + i % 10);
  4121  0008F6  0100               	movlb	0	; () banked
  4122  0008F8  6F64               	movwf	??_view_answers& (0+255),b
  4123  0008FA  0E03               	movlw	3
  4124  0008FC  6E27               	movwf	LCD_WriteCharAt@column,c
  4125  0008FE  0100               	movlb	0	; () banked
  4126  000900  5164               	movf	??_view_answers& (0+255),w,b
  4127  000902  C060  F01E         	movff	view_answers@i,___awmod@dividend
  4128  000906  C061  F01F         	movff	view_answers@i+1,___awmod@dividend+1
  4129  00090A  0E00               	movlw	0
  4130  00090C  6E21               	movwf	___awmod@divisor+1,c
  4131  00090E  0E0A               	movlw	10
  4132  000910  6E20               	movwf	___awmod@divisor,c
  4133  000912  EC7E  F014         	call	___awmod	;wreg free
  4134  000916  501E               	movf	?___awmod,w,c
  4135  000918  0F30               	addlw	48
  4136  00091A  6E28               	movwf	LCD_WriteCharAt@chr,c
  4137  00091C  0100               	movlb	0	; () banked
  4138  00091E  0100               	movlb	0	; () banked
  4139  000920  5162               	movf	view_answers@j& (0+255),w,b
  4140  000922  ECBC  F016         	call	_LCD_WriteCharAt
  4141                           
  4142                           ;main.c: 542: LCD_WriteCharAt(j, 4, 0b00111010);
  4143  000926  0100               	movlb	0	; () banked
  4144  000928  6F64               	movwf	??_view_answers& (0+255),b
  4145  00092A  0E04               	movlw	4
  4146  00092C  6E27               	movwf	LCD_WriteCharAt@column,c
  4147  00092E  0100               	movlb	0	; () banked
  4148  000930  5164               	movf	??_view_answers& (0+255),w,b
  4149  000932  0100               	movlb	0	; () banked
  4150  000934  6F65               	movwf	(??_view_answers+1)& (0+255),b
  4151  000936  0E3A               	movlw	58
  4152  000938  6E28               	movwf	LCD_WriteCharAt@chr,c
  4153  00093A  0100               	movlb	0	; () banked
  4154  00093C  5165               	movf	(??_view_answers+1)& (0+255),w,b
  4155  00093E  0100               	movlb	0	; () banked
  4156  000940  0100               	movlb	0	; () banked
  4157  000942  5162               	movf	view_answers@j& (0+255),w,b
  4158  000944  ECBC  F016         	call	_LCD_WriteCharAt
  4159                           
  4160                           ;main.c: 543: LCD_WriteCharAt(j, 5, Read_b_eep(0x0A + (i - 1)*2));
  4161  000948  0100               	movlb	0	; () banked
  4162  00094A  6F64               	movwf	??_view_answers& (0+255),b
  4163  00094C  0E05               	movlw	5
  4164  00094E  6E27               	movwf	LCD_WriteCharAt@column,c
  4165  000950  0100               	movlb	0	; () banked
  4166  000952  5164               	movf	??_view_answers& (0+255),w,b
  4167  000954  90D8               	bcf	status,0,c
  4168  000956  0100               	movlb	0	; () banked
  4169  000958  0100               	movlb	0	; () banked
  4170  00095A  3560               	rlcf	view_answers@i& (0+255),w,b
  4171  00095C  0100               	movlb	0	; () banked
  4172  00095E  6F65               	movwf	(??_view_answers+1)& (0+255),b
  4173  000960  0100               	movlb	0	; () banked
  4174  000962  0100               	movlb	0	; () banked
  4175  000964  3561               	rlcf	(view_answers@i+1)& (0+255),w,b
  4176  000966  0100               	movlb	0	; () banked
  4177  000968  6F66               	movwf	(??_view_answers+2)& (0+255),b
  4178  00096A  0E08               	movlw	8
  4179  00096C  0100               	movlb	0	; () banked
  4180  00096E  2565               	addwf	(??_view_answers+1)& (0+255),w,b
  4181  000970  6E1E               	movwf	Read_b_eep@badd,c
  4182  000972  0E00               	movlw	0
  4183  000974  0100               	movlb	0	; () banked
  4184  000976  2166               	addwfc	(??_view_answers+2)& (0+255),w,b
  4185  000978  6E1F               	movwf	Read_b_eep@badd+1,c
  4186  00097A  ECE1  F017         	call	_Read_b_eep	;wreg free
  4187  00097E  6E28               	movwf	LCD_WriteCharAt@chr,c
  4188  000980  0100               	movlb	0	; () banked
  4189  000982  0100               	movlb	0	; () banked
  4190  000984  5162               	movf	view_answers@j& (0+255),w,b
  4191  000986  ECBC  F016         	call	_LCD_WriteCharAt
  4192                           
  4193                           ;main.c: 544: if (Read_b_eep(0x0A + (i)*2 - 1) == 1) {
  4194  00098A  90D8               	bcf	status,0,c
  4195  00098C  0100               	movlb	0	; () banked
  4196  00098E  0100               	movlb	0	; () banked
  4197  000990  3560               	rlcf	view_answers@i& (0+255),w,b
  4198  000992  0100               	movlb	0	; () banked
  4199  000994  6F64               	movwf	??_view_answers& (0+255),b
  4200  000996  0100               	movlb	0	; () banked
  4201  000998  0100               	movlb	0	; () banked
  4202  00099A  3561               	rlcf	(view_answers@i+1)& (0+255),w,b
  4203  00099C  0100               	movlb	0	; () banked
  4204  00099E  6F65               	movwf	(??_view_answers+1)& (0+255),b
  4205  0009A0  0E09               	movlw	9
  4206  0009A2  0100               	movlb	0	; () banked
  4207  0009A4  2564               	addwf	??_view_answers& (0+255),w,b
  4208  0009A6  6E1E               	movwf	Read_b_eep@badd,c
  4209  0009A8  0E00               	movlw	0
  4210  0009AA  0100               	movlb	0	; () banked
  4211  0009AC  2165               	addwfc	(??_view_answers+1)& (0+255),w,b
  4212  0009AE  6E1F               	movwf	Read_b_eep@badd+1,c
  4213  0009B0  ECE1  F017         	call	_Read_b_eep	;wreg free
  4214  0009B4  0100               	movlb	0	; () banked
  4215  0009B6  6F66               	movwf	(??_view_answers+2)& (0+255),b
  4216  0009B8  0100               	movlb	0	; () banked
  4217  0009BA  0566               	decf	(??_view_answers+2)& (0+255),w,b
  4218  0009BC  A4D8               	btfss	status,2,c
  4219  0009BE  D1F8               	goto	l5178
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;main.c: 545: LCD_WriteCharAt(j, 6, 0b01111111);
  4223  0009C0  0100               	movlb	0	; () banked
  4224  0009C2  6F64               	movwf	??_view_answers& (0+255),b
  4225  0009C4  0E06               	movlw	6
  4226  0009C6  6E27               	movwf	LCD_WriteCharAt@column,c
  4227  0009C8  0100               	movlb	0	; () banked
  4228  0009CA  5164               	movf	??_view_answers& (0+255),w,b
  4229  0009CC  0100               	movlb	0	; () banked
  4230  0009CE  6F65               	movwf	(??_view_answers+1)& (0+255),b
  4231  0009D0  0E7F               	movlw	127
  4232  0009D2  6E28               	movwf	LCD_WriteCharAt@chr,c
  4233  0009D4  0100               	movlb	0	; () banked
  4234  0009D6  5165               	movf	(??_view_answers+1)& (0+255),w,b
  4235  0009D8  0100               	movlb	0	; () banked
  4236  0009DA  0100               	movlb	0	; () banked
  4237  0009DC  5162               	movf	view_answers@j& (0+255),w,b
  4238  0009DE  ECBC  F016         	call	_LCD_WriteCharAt
  4239  0009E2  D1E6               	goto	l5178
  4240  0009E4                     l5096:
  4241  0009E4  C060  F01E         	movff	view_answers@i,___awmod@dividend
  4242  0009E8  C061  F01F         	movff	view_answers@i+1,___awmod@dividend+1
  4243  0009EC  0E00               	movlw	0
  4244  0009EE  6E21               	movwf	___awmod@divisor+1,c
  4245  0009F0  0E03               	movlw	3
  4246  0009F2  6E20               	movwf	___awmod@divisor,c
  4247  0009F4  EC7E  F014         	call	___awmod	;wreg free
  4248  0009F8  501E               	movf	?___awmod,w,c
  4249  0009FA  0A02               	xorlw	2
  4250  0009FC  101F               	iorwf	?___awmod+1,w,c
  4251  0009FE  A4D8               	btfss	status,2,c
  4252  000A00  D08F               	goto	l5108
  4253                           
  4254                           ;main.c: 548: LCD_WriteCharAt(j, 8, 48 + i / 10);
  4255  000A02  0100               	movlb	0	; () banked
  4256  000A04  6F64               	movwf	??_view_answers& (0+255),b
  4257  000A06  0E08               	movlw	8
  4258  000A08  6E27               	movwf	LCD_WriteCharAt@column,c
  4259  000A0A  0100               	movlb	0	; () banked
  4260  000A0C  5164               	movf	??_view_answers& (0+255),w,b
  4261  000A0E  C060  F01E         	movff	view_answers@i,___awdiv@dividend
  4262  000A12  C061  F01F         	movff	view_answers@i+1,___awdiv@dividend+1
  4263  000A16  0E00               	movlw	0
  4264  000A18  6E21               	movwf	___awdiv@divisor+1,c
  4265  000A1A  0E0A               	movlw	10
  4266  000A1C  6E20               	movwf	___awdiv@divisor,c
  4267  000A1E  ECE0  F012         	call	___awdiv	;wreg free
  4268  000A22  501E               	movf	?___awdiv,w,c
  4269  000A24  0F30               	addlw	48
  4270  000A26  6E28               	movwf	LCD_WriteCharAt@chr,c
  4271  000A28  0100               	movlb	0	; () banked
  4272  000A2A  0100               	movlb	0	; () banked
  4273  000A2C  5162               	movf	view_answers@j& (0+255),w,b
  4274  000A2E  ECBC  F016         	call	_LCD_WriteCharAt
  4275                           
  4276                           ;main.c: 549: LCD_WriteCharAt(j, 9, 48 + i % 10);
  4277  000A32  0100               	movlb	0	; () banked
  4278  000A34  6F64               	movwf	??_view_answers& (0+255),b
  4279  000A36  0E09               	movlw	9
  4280  000A38  6E27               	movwf	LCD_WriteCharAt@column,c
  4281  000A3A  0100               	movlb	0	; () banked
  4282  000A3C  5164               	movf	??_view_answers& (0+255),w,b
  4283  000A3E  C060  F01E         	movff	view_answers@i,___awmod@dividend
  4284  000A42  C061  F01F         	movff	view_answers@i+1,___awmod@dividend+1
  4285  000A46  0E00               	movlw	0
  4286  000A48  6E21               	movwf	___awmod@divisor+1,c
  4287  000A4A  0E0A               	movlw	10
  4288  000A4C  6E20               	movwf	___awmod@divisor,c
  4289  000A4E  EC7E  F014         	call	___awmod	;wreg free
  4290  000A52  501E               	movf	?___awmod,w,c
  4291  000A54  0F30               	addlw	48
  4292  000A56  6E28               	movwf	LCD_WriteCharAt@chr,c
  4293  000A58  0100               	movlb	0	; () banked
  4294  000A5A  0100               	movlb	0	; () banked
  4295  000A5C  5162               	movf	view_answers@j& (0+255),w,b
  4296  000A5E  ECBC  F016         	call	_LCD_WriteCharAt
  4297                           
  4298                           ;main.c: 550: LCD_WriteCharAt(j, 10, 0b00111010);
  4299  000A62  0100               	movlb	0	; () banked
  4300  000A64  6F64               	movwf	??_view_answers& (0+255),b
  4301  000A66  0E0A               	movlw	10
  4302  000A68  6E27               	movwf	LCD_WriteCharAt@column,c
  4303  000A6A  0100               	movlb	0	; () banked
  4304  000A6C  5164               	movf	??_view_answers& (0+255),w,b
  4305  000A6E  0100               	movlb	0	; () banked
  4306  000A70  6F65               	movwf	(??_view_answers+1)& (0+255),b
  4307  000A72  0E3A               	movlw	58
  4308  000A74  6E28               	movwf	LCD_WriteCharAt@chr,c
  4309  000A76  0100               	movlb	0	; () banked
  4310  000A78  5165               	movf	(??_view_answers+1)& (0+255),w,b
  4311  000A7A  0100               	movlb	0	; () banked
  4312  000A7C  0100               	movlb	0	; () banked
  4313  000A7E  5162               	movf	view_answers@j& (0+255),w,b
  4314  000A80  ECBC  F016         	call	_LCD_WriteCharAt
  4315                           
  4316                           ;main.c: 551: LCD_WriteCharAt(j, 11, Read_b_eep(0x0A + (i - 1)*2));
  4317  000A84  0100               	movlb	0	; () banked
  4318  000A86  6F64               	movwf	??_view_answers& (0+255),b
  4319  000A88  0E0B               	movlw	11
  4320  000A8A  6E27               	movwf	LCD_WriteCharAt@column,c
  4321  000A8C  0100               	movlb	0	; () banked
  4322  000A8E  5164               	movf	??_view_answers& (0+255),w,b
  4323  000A90  90D8               	bcf	status,0,c
  4324  000A92  0100               	movlb	0	; () banked
  4325  000A94  0100               	movlb	0	; () banked
  4326  000A96  3560               	rlcf	view_answers@i& (0+255),w,b
  4327  000A98  0100               	movlb	0	; () banked
  4328  000A9A  6F65               	movwf	(??_view_answers+1)& (0+255),b
  4329  000A9C  0100               	movlb	0	; () banked
  4330  000A9E  0100               	movlb	0	; () banked
  4331  000AA0  3561               	rlcf	(view_answers@i+1)& (0+255),w,b
  4332  000AA2  0100               	movlb	0	; () banked
  4333  000AA4  6F66               	movwf	(??_view_answers+2)& (0+255),b
  4334  000AA6  0E08               	movlw	8
  4335  000AA8  0100               	movlb	0	; () banked
  4336  000AAA  2565               	addwf	(??_view_answers+1)& (0+255),w,b
  4337  000AAC  6E1E               	movwf	Read_b_eep@badd,c
  4338  000AAE  0E00               	movlw	0
  4339  000AB0  0100               	movlb	0	; () banked
  4340  000AB2  2166               	addwfc	(??_view_answers+2)& (0+255),w,b
  4341  000AB4  6E1F               	movwf	Read_b_eep@badd+1,c
  4342  000AB6  ECE1  F017         	call	_Read_b_eep	;wreg free
  4343  000ABA  6E28               	movwf	LCD_WriteCharAt@chr,c
  4344  000ABC  0100               	movlb	0	; () banked
  4345  000ABE  0100               	movlb	0	; () banked
  4346  000AC0  5162               	movf	view_answers@j& (0+255),w,b
  4347  000AC2  ECBC  F016         	call	_LCD_WriteCharAt
  4348                           
  4349                           ;main.c: 552: if (Read_b_eep(0x0A + (i)*2 - 1) == 1) {
  4350  000AC6  90D8               	bcf	status,0,c
  4351  000AC8  0100               	movlb	0	; () banked
  4352  000ACA  0100               	movlb	0	; () banked
  4353  000ACC  3560               	rlcf	view_answers@i& (0+255),w,b
  4354  000ACE  0100               	movlb	0	; () banked
  4355  000AD0  6F64               	movwf	??_view_answers& (0+255),b
  4356  000AD2  0100               	movlb	0	; () banked
  4357  000AD4  0100               	movlb	0	; () banked
  4358  000AD6  3561               	rlcf	(view_answers@i+1)& (0+255),w,b
  4359  000AD8  0100               	movlb	0	; () banked
  4360  000ADA  6F65               	movwf	(??_view_answers+1)& (0+255),b
  4361  000ADC  0E09               	movlw	9
  4362  000ADE  0100               	movlb	0	; () banked
  4363  000AE0  2564               	addwf	??_view_answers& (0+255),w,b
  4364  000AE2  6E1E               	movwf	Read_b_eep@badd,c
  4365  000AE4  0E00               	movlw	0
  4366  000AE6  0100               	movlb	0	; () banked
  4367  000AE8  2165               	addwfc	(??_view_answers+1)& (0+255),w,b
  4368  000AEA  6E1F               	movwf	Read_b_eep@badd+1,c
  4369  000AEC  ECE1  F017         	call	_Read_b_eep	;wreg free
  4370  000AF0  0100               	movlb	0	; () banked
  4371  000AF2  6F66               	movwf	(??_view_answers+2)& (0+255),b
  4372  000AF4  0100               	movlb	0	; () banked
  4373  000AF6  0566               	decf	(??_view_answers+2)& (0+255),w,b
  4374  000AF8  A4D8               	btfss	status,2,c
  4375  000AFA  D15A               	goto	l5178
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;main.c: 553: LCD_WriteCharAt(j, 12, 0b01111111);
  4379  000AFC  0100               	movlb	0	; () banked
  4380  000AFE  6F64               	movwf	??_view_answers& (0+255),b
  4381  000B00  0E0C               	movlw	12
  4382  000B02  6E27               	movwf	LCD_WriteCharAt@column,c
  4383  000B04  0100               	movlb	0	; () banked
  4384  000B06  5164               	movf	??_view_answers& (0+255),w,b
  4385  000B08  0100               	movlb	0	; () banked
  4386  000B0A  6F65               	movwf	(??_view_answers+1)& (0+255),b
  4387  000B0C  0E7F               	movlw	127
  4388  000B0E  6E28               	movwf	LCD_WriteCharAt@chr,c
  4389  000B10  0100               	movlb	0	; () banked
  4390  000B12  5165               	movf	(??_view_answers+1)& (0+255),w,b
  4391  000B14  0100               	movlb	0	; () banked
  4392  000B16  0100               	movlb	0	; () banked
  4393  000B18  5162               	movf	view_answers@j& (0+255),w,b
  4394  000B1A  ECBC  F016         	call	_LCD_WriteCharAt
  4395  000B1E  D148               	goto	l5178
  4396  000B20                     l5108:
  4397  000B20  C060  F01E         	movff	view_answers@i,___awmod@dividend
  4398  000B24  C061  F01F         	movff	view_answers@i+1,___awmod@dividend+1
  4399  000B28  0E00               	movlw	0
  4400  000B2A  6E21               	movwf	___awmod@divisor+1,c
  4401  000B2C  0E03               	movlw	3
  4402  000B2E  6E20               	movwf	___awmod@divisor,c
  4403  000B30  EC7E  F014         	call	___awmod	;wreg free
  4404  000B34  501F               	movf	?___awmod+1,w,c
  4405  000B36  101E               	iorwf	?___awmod,w,c
  4406  000B38  A4D8               	btfss	status,2,c
  4407  000B3A  D13A               	goto	l5178
  4408                           
  4409                           ;main.c: 556: LCD_WriteCharAt(j, 14, 48 + i / 10);
  4410  000B3C  0100               	movlb	0	; () banked
  4411  000B3E  6F64               	movwf	??_view_answers& (0+255),b
  4412  000B40  0E0E               	movlw	14
  4413  000B42  6E27               	movwf	LCD_WriteCharAt@column,c
  4414  000B44  0100               	movlb	0	; () banked
  4415  000B46  5164               	movf	??_view_answers& (0+255),w,b
  4416  000B48  C060  F01E         	movff	view_answers@i,___awdiv@dividend
  4417  000B4C  C061  F01F         	movff	view_answers@i+1,___awdiv@dividend+1
  4418  000B50  0E00               	movlw	0
  4419  000B52  6E21               	movwf	___awdiv@divisor+1,c
  4420  000B54  0E0A               	movlw	10
  4421  000B56  6E20               	movwf	___awdiv@divisor,c
  4422  000B58  ECE0  F012         	call	___awdiv	;wreg free
  4423  000B5C  501E               	movf	?___awdiv,w,c
  4424  000B5E  0F30               	addlw	48
  4425  000B60  6E28               	movwf	LCD_WriteCharAt@chr,c
  4426  000B62  0100               	movlb	0	; () banked
  4427  000B64  0100               	movlb	0	; () banked
  4428  000B66  5162               	movf	view_answers@j& (0+255),w,b
  4429  000B68  ECBC  F016         	call	_LCD_WriteCharAt
  4430                           
  4431                           ;main.c: 557: LCD_WriteCharAt(j, 15, 48 + i % 10);
  4432  000B6C  0100               	movlb	0	; () banked
  4433  000B6E  6F64               	movwf	??_view_answers& (0+255),b
  4434  000B70  0E0F               	movlw	15
  4435  000B72  6E27               	movwf	LCD_WriteCharAt@column,c
  4436  000B74  0100               	movlb	0	; () banked
  4437  000B76  5164               	movf	??_view_answers& (0+255),w,b
  4438  000B78  C060  F01E         	movff	view_answers@i,___awmod@dividend
  4439  000B7C  C061  F01F         	movff	view_answers@i+1,___awmod@dividend+1
  4440  000B80  0E00               	movlw	0
  4441  000B82  6E21               	movwf	___awmod@divisor+1,c
  4442  000B84  0E0A               	movlw	10
  4443  000B86  6E20               	movwf	___awmod@divisor,c
  4444  000B88  EC7E  F014         	call	___awmod	;wreg free
  4445  000B8C  501E               	movf	?___awmod,w,c
  4446  000B8E  0F30               	addlw	48
  4447  000B90  6E28               	movwf	LCD_WriteCharAt@chr,c
  4448  000B92  0100               	movlb	0	; () banked
  4449  000B94  0100               	movlb	0	; () banked
  4450  000B96  5162               	movf	view_answers@j& (0+255),w,b
  4451  000B98  ECBC  F016         	call	_LCD_WriteCharAt
  4452                           
  4453                           ;main.c: 558: LCD_WriteCharAt(j, 16, 0b00111010);
  4454  000B9C  0100               	movlb	0	; () banked
  4455  000B9E  6F64               	movwf	??_view_answers& (0+255),b
  4456  000BA0  0E10               	movlw	16
  4457  000BA2  6E27               	movwf	LCD_WriteCharAt@column,c
  4458  000BA4  0100               	movlb	0	; () banked
  4459  000BA6  5164               	movf	??_view_answers& (0+255),w,b
  4460  000BA8  0100               	movlb	0	; () banked
  4461  000BAA  6F65               	movwf	(??_view_answers+1)& (0+255),b
  4462  000BAC  0E3A               	movlw	58
  4463  000BAE  6E28               	movwf	LCD_WriteCharAt@chr,c
  4464  000BB0  0100               	movlb	0	; () banked
  4465  000BB2  5165               	movf	(??_view_answers+1)& (0+255),w,b
  4466  000BB4  0100               	movlb	0	; () banked
  4467  000BB6  0100               	movlb	0	; () banked
  4468  000BB8  5162               	movf	view_answers@j& (0+255),w,b
  4469  000BBA  ECBC  F016         	call	_LCD_WriteCharAt
  4470                           
  4471                           ;main.c: 559: LCD_WriteCharAt(j, 17, Read_b_eep(0x0A + (i - 1)*2));
  4472  000BBE  0100               	movlb	0	; () banked
  4473  000BC0  6F64               	movwf	??_view_answers& (0+255),b
  4474  000BC2  0E11               	movlw	17
  4475  000BC4  6E27               	movwf	LCD_WriteCharAt@column,c
  4476  000BC6  0100               	movlb	0	; () banked
  4477  000BC8  5164               	movf	??_view_answers& (0+255),w,b
  4478  000BCA  90D8               	bcf	status,0,c
  4479  000BCC  0100               	movlb	0	; () banked
  4480  000BCE  0100               	movlb	0	; () banked
  4481  000BD0  3560               	rlcf	view_answers@i& (0+255),w,b
  4482  000BD2  0100               	movlb	0	; () banked
  4483  000BD4  6F65               	movwf	(??_view_answers+1)& (0+255),b
  4484  000BD6  0100               	movlb	0	; () banked
  4485  000BD8  0100               	movlb	0	; () banked
  4486  000BDA  3561               	rlcf	(view_answers@i+1)& (0+255),w,b
  4487  000BDC  0100               	movlb	0	; () banked
  4488  000BDE  6F66               	movwf	(??_view_answers+2)& (0+255),b
  4489  000BE0  0E08               	movlw	8
  4490  000BE2  0100               	movlb	0	; () banked
  4491  000BE4  2565               	addwf	(??_view_answers+1)& (0+255),w,b
  4492  000BE6  6E1E               	movwf	Read_b_eep@badd,c
  4493  000BE8  0E00               	movlw	0
  4494  000BEA  0100               	movlb	0	; () banked
  4495  000BEC  2166               	addwfc	(??_view_answers+2)& (0+255),w,b
  4496  000BEE  6E1F               	movwf	Read_b_eep@badd+1,c
  4497  000BF0  ECE1  F017         	call	_Read_b_eep	;wreg free
  4498  000BF4  6E28               	movwf	LCD_WriteCharAt@chr,c
  4499  000BF6  0100               	movlb	0	; () banked
  4500  000BF8  0100               	movlb	0	; () banked
  4501  000BFA  5162               	movf	view_answers@j& (0+255),w,b
  4502  000BFC  ECBC  F016         	call	_LCD_WriteCharAt
  4503                           
  4504                           ;main.c: 560: if (Read_b_eep(0x0A + (i)*2 - 1) == 1) {
  4505  000C00  90D8               	bcf	status,0,c
  4506  000C02  0100               	movlb	0	; () banked
  4507  000C04  0100               	movlb	0	; () banked
  4508  000C06  3560               	rlcf	view_answers@i& (0+255),w,b
  4509  000C08  0100               	movlb	0	; () banked
  4510  000C0A  6F64               	movwf	??_view_answers& (0+255),b
  4511  000C0C  0100               	movlb	0	; () banked
  4512  000C0E  0100               	movlb	0	; () banked
  4513  000C10  3561               	rlcf	(view_answers@i+1)& (0+255),w,b
  4514  000C12  0100               	movlb	0	; () banked
  4515  000C14  6F65               	movwf	(??_view_answers+1)& (0+255),b
  4516  000C16  0E09               	movlw	9
  4517  000C18  0100               	movlb	0	; () banked
  4518  000C1A  2564               	addwf	??_view_answers& (0+255),w,b
  4519  000C1C  6E1E               	movwf	Read_b_eep@badd,c
  4520  000C1E  0E00               	movlw	0
  4521  000C20  0100               	movlb	0	; () banked
  4522  000C22  2165               	addwfc	(??_view_answers+1)& (0+255),w,b
  4523  000C24  6E1F               	movwf	Read_b_eep@badd+1,c
  4524  000C26  ECE1  F017         	call	_Read_b_eep	;wreg free
  4525  000C2A  0100               	movlb	0	; () banked
  4526  000C2C  6F66               	movwf	(??_view_answers+2)& (0+255),b
  4527  000C2E  0100               	movlb	0	; () banked
  4528  000C30  0566               	decf	(??_view_answers+2)& (0+255),w,b
  4529  000C32  A4D8               	btfss	status,2,c
  4530  000C34  D011               	goto	l5120
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;main.c: 561: LCD_WriteCharAt(j, 18, 0b01111111);
  4534  000C36  0100               	movlb	0	; () banked
  4535  000C38  6F64               	movwf	??_view_answers& (0+255),b
  4536  000C3A  0E12               	movlw	18
  4537  000C3C  6E27               	movwf	LCD_WriteCharAt@column,c
  4538  000C3E  0100               	movlb	0	; () banked
  4539  000C40  5164               	movf	??_view_answers& (0+255),w,b
  4540  000C42  0100               	movlb	0	; () banked
  4541  000C44  6F65               	movwf	(??_view_answers+1)& (0+255),b
  4542  000C46  0E7F               	movlw	127
  4543  000C48  6E28               	movwf	LCD_WriteCharAt@chr,c
  4544  000C4A  0100               	movlb	0	; () banked
  4545  000C4C  5165               	movf	(??_view_answers+1)& (0+255),w,b
  4546  000C4E  0100               	movlb	0	; () banked
  4547  000C50  0100               	movlb	0	; () banked
  4548  000C52  5162               	movf	view_answers@j& (0+255),w,b
  4549  000C54  ECBC  F016         	call	_LCD_WriteCharAt
  4550  000C58                     l5120:
  4551                           
  4552                           ;main.c: 562: }
  4553                           ;main.c: 563: j++;
  4554  000C58  0100               	movlb	0	; () banked
  4555  000C5A  0100               	movlb	0	; () banked
  4556  000C5C  4B62               	infsnz	view_answers@j& (0+255),f,b
  4557  000C5E  2B63               	incf	(view_answers@j+1)& (0+255),f,b
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;main.c: 564: if (i == 12 || i == 24 || i == 36 || i == 48 || i == 60) {
  4561  000C60  0100               	movlb	0	; () banked
  4562  000C62  0100               	movlb	0	; () banked
  4563  000C64  5160               	movf	view_answers@i& (0+255),w,b
  4564  000C66  0A0C               	xorlw	12
  4565  000C68  1161               	iorwf	(view_answers@i+1)& (0+255),w,b
  4566  000C6A  B4D8               	btfsc	status,2,c
  4567  000C6C  D01C               	goto	l5132
  4568                           
  4569                           ; BSR set to: 0
  4570  000C6E  0100               	movlb	0	; () banked
  4571  000C70  0100               	movlb	0	; () banked
  4572  000C72  5160               	movf	view_answers@i& (0+255),w,b
  4573  000C74  0A18               	xorlw	24
  4574  000C76  1161               	iorwf	(view_answers@i+1)& (0+255),w,b
  4575  000C78  B4D8               	btfsc	status,2,c
  4576  000C7A  D015               	goto	l5132
  4577                           
  4578                           ; BSR set to: 0
  4579  000C7C  0100               	movlb	0	; () banked
  4580  000C7E  0100               	movlb	0	; () banked
  4581  000C80  5160               	movf	view_answers@i& (0+255),w,b
  4582  000C82  0A24               	xorlw	36
  4583  000C84  1161               	iorwf	(view_answers@i+1)& (0+255),w,b
  4584  000C86  B4D8               	btfsc	status,2,c
  4585  000C88  D00E               	goto	l5132
  4586                           
  4587                           ; BSR set to: 0
  4588  000C8A  0100               	movlb	0	; () banked
  4589  000C8C  0100               	movlb	0	; () banked
  4590  000C8E  5160               	movf	view_answers@i& (0+255),w,b
  4591  000C90  0A30               	xorlw	48
  4592  000C92  1161               	iorwf	(view_answers@i+1)& (0+255),w,b
  4593  000C94  B4D8               	btfsc	status,2,c
  4594  000C96  D007               	goto	l5132
  4595                           
  4596                           ; BSR set to: 0
  4597  000C98  0100               	movlb	0	; () banked
  4598  000C9A  0100               	movlb	0	; () banked
  4599  000C9C  5160               	movf	view_answers@i& (0+255),w,b
  4600  000C9E  0A3C               	xorlw	60
  4601  000CA0  1161               	iorwf	(view_answers@i+1)& (0+255),w,b
  4602  000CA2  A4D8               	btfss	status,2,c
  4603  000CA4  D085               	goto	l5178
  4604  000CA6                     l5132:
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;main.c: 565: p = 1;
  4608  000CA6  0E00               	movlw	0
  4609  000CA8  0100               	movlb	0	; () banked
  4610  000CAA  0100               	movlb	0	; () banked
  4611  000CAC  6F68               	movwf	(view_answers@p+1)& (0+255),b
  4612  000CAE  0E01               	movlw	1
  4613  000CB0  0100               	movlb	0	; () banked
  4614  000CB2  6F67               	movwf	view_answers@p& (0+255),b
  4615                           
  4616                           ;main.c: 566: j = 1;
  4617  000CB4  0E00               	movlw	0
  4618  000CB6  0100               	movlb	0	; () banked
  4619  000CB8  0100               	movlb	0	; () banked
  4620  000CBA  6F63               	movwf	(view_answers@j+1)& (0+255),b
  4621  000CBC  0E01               	movlw	1
  4622  000CBE  0100               	movlb	0	; () banked
  4623  000CC0  6F62               	movwf	view_answers@j& (0+255),b
  4624  000CC2  D076               	goto	l5178
  4625  000CC4                     l5134:
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;main.c: 570: KEY_BUFFER = readKey();
  4629  000CC4  EC30  F014         	call	_readKey	;wreg free
  4630  000CC8  0101               	movlb	1	; () banked
  4631  000CCA  0101               	movlb	1	; () banked
  4632  000CCC  6F85               	movwf	_KEY_BUFFER& (0+255),b
  4633                           
  4634                           ; BSR set to: 1
  4635                           ;main.c: 571: if (KEY_BUFFER == 0x22) {
  4636  000CCE  0101               	movlb	1	; () banked
  4637  000CD0  0101               	movlb	1	; () banked
  4638  000CD2  5185               	movf	_KEY_BUFFER& (0+255),w,b
  4639  000CD4  0A22               	xorlw	34
  4640  000CD6  A4D8               	btfss	status,2,c
  4641  000CD8  D048               	goto	l5168
  4642                           
  4643                           ; BSR set to: 1
  4644                           ;main.c: 573: if (i == 24) {
  4645  000CDA  0100               	movlb	0	; () banked
  4646  000CDC  0100               	movlb	0	; () banked
  4647  000CDE  5160               	movf	view_answers@i& (0+255),w,b
  4648  000CE0  0A18               	xorlw	24
  4649  000CE2  1161               	iorwf	(view_answers@i+1)& (0+255),w,b
  4650  000CE4  A4D8               	btfss	status,2,c
  4651  000CE6  D00B               	goto	l5146
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;main.c: 574: i = 0;
  4655  000CE8  0E00               	movlw	0
  4656  000CEA  0100               	movlb	0	; () banked
  4657  000CEC  0100               	movlb	0	; () banked
  4658  000CEE  6F61               	movwf	(view_answers@i+1)& (0+255),b
  4659  000CF0  0E00               	movlw	0
  4660  000CF2  0100               	movlb	0	; () banked
  4661  000CF4  6F60               	movwf	view_answers@i& (0+255),b
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;main.c: 575: LCD_WriteCommand(0x01);
  4665  000CF6  0E01               	movlw	1
  4666  000CF8  ECFF  F00E         	call	_LCD_WriteCommand
  4667                           
  4668                           ;main.c: 576: break;
  4669  000CFC  D05F               	goto	l5180
  4670  000CFE                     l5146:
  4671  000CFE  0100               	movlb	0	; () banked
  4672  000D00  0100               	movlb	0	; () banked
  4673  000D02  5160               	movf	view_answers@i& (0+255),w,b
  4674  000D04  0A24               	xorlw	36
  4675  000D06  1161               	iorwf	(view_answers@i+1)& (0+255),w,b
  4676  000D08  A4D8               	btfss	status,2,c
  4677  000D0A  D00B               	goto	l5154
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;main.c: 578: i = 12;
  4681  000D0C  0E00               	movlw	0
  4682  000D0E  0100               	movlb	0	; () banked
  4683  000D10  0100               	movlb	0	; () banked
  4684  000D12  6F61               	movwf	(view_answers@i+1)& (0+255),b
  4685  000D14  0E0C               	movlw	12
  4686  000D16  0100               	movlb	0	; () banked
  4687  000D18  6F60               	movwf	view_answers@i& (0+255),b
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;main.c: 579: LCD_WriteCommand(0x01);
  4691  000D1A  0E01               	movlw	1
  4692  000D1C  ECFF  F00E         	call	_LCD_WriteCommand
  4693                           
  4694                           ;main.c: 580: break;
  4695  000D20  D04D               	goto	l5180
  4696  000D22                     l5154:
  4697  000D22  0100               	movlb	0	; () banked
  4698  000D24  0100               	movlb	0	; () banked
  4699  000D26  5160               	movf	view_answers@i& (0+255),w,b
  4700  000D28  0A30               	xorlw	48
  4701  000D2A  1161               	iorwf	(view_answers@i+1)& (0+255),w,b
  4702  000D2C  A4D8               	btfss	status,2,c
  4703  000D2E  D00B               	goto	l5162
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;main.c: 582: i = 24;
  4707  000D30  0E00               	movlw	0
  4708  000D32  0100               	movlb	0	; () banked
  4709  000D34  0100               	movlb	0	; () banked
  4710  000D36  6F61               	movwf	(view_answers@i+1)& (0+255),b
  4711  000D38  0E18               	movlw	24
  4712  000D3A  0100               	movlb	0	; () banked
  4713  000D3C  6F60               	movwf	view_answers@i& (0+255),b
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;main.c: 583: LCD_WriteCommand(0x01);
  4717  000D3E  0E01               	movlw	1
  4718  000D40  ECFF  F00E         	call	_LCD_WriteCommand
  4719                           
  4720                           ;main.c: 584: break;
  4721  000D44  D03B               	goto	l5180
  4722  000D46                     l5162:
  4723  000D46  0100               	movlb	0	; () banked
  4724  000D48  0100               	movlb	0	; () banked
  4725  000D4A  5160               	movf	view_answers@i& (0+255),w,b
  4726  000D4C  0A3C               	xorlw	60
  4727  000D4E  1161               	iorwf	(view_answers@i+1)& (0+255),w,b
  4728  000D50  A4D8               	btfss	status,2,c
  4729  000D52  D02E               	goto	l5178
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;main.c: 586: i = 36;
  4733  000D54  0E00               	movlw	0
  4734  000D56  0100               	movlb	0	; () banked
  4735  000D58  0100               	movlb	0	; () banked
  4736  000D5A  6F61               	movwf	(view_answers@i+1)& (0+255),b
  4737  000D5C  0E24               	movlw	36
  4738  000D5E  0100               	movlb	0	; () banked
  4739  000D60  6F60               	movwf	view_answers@i& (0+255),b
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;main.c: 587: LCD_WriteCommand(0x01);
  4743  000D62  0E01               	movlw	1
  4744  000D64  ECFF  F00E         	call	_LCD_WriteCommand
  4745                           
  4746                           ;main.c: 588: break;
  4747  000D68  D029               	goto	l5180
  4748  000D6A                     l5168:
  4749  000D6A  0101               	movlb	1	; () banked
  4750  000D6C  0101               	movlb	1	; () banked
  4751  000D6E  5185               	movf	_KEY_BUFFER& (0+255),w,b
  4752  000D70  0A28               	xorlw	40
  4753  000D72  A4D8               	btfss	status,2,c
  4754  000D74  D017               	goto	l5174
  4755                           
  4756                           ; BSR set to: 1
  4757                           ;main.c: 591: if (i != MCQCnt) {
  4758  000D76  0100               	movlb	0	; () banked
  4759  000D78  0100               	movlb	0	; () banked
  4760  000D7A  51FD               	movf	_MCQCnt& (0+255),w,b
  4761  000D7C  0100               	movlb	0	; () banked
  4762  000D7E  6F64               	movwf	??_view_answers& (0+255),b
  4763  000D80  6B65               	clrf	(??_view_answers+1)& (0+255),b
  4764  000D82  0100               	movlb	0	; () banked
  4765  000D84  0100               	movlb	0	; () banked
  4766  000D86  5161               	movf	(view_answers@i+1)& (0+255),w,b
  4767  000D88  0100               	movlb	0	; () banked
  4768  000D8A  1965               	xorwf	(??_view_answers+1)& (0+255),w,b
  4769  000D8C  E105               	bnz	u4535
  4770  000D8E  0100               	movlb	0	; () banked
  4771  000D90  0100               	movlb	0	; () banked
  4772  000D92  5160               	movf	view_answers@i& (0+255),w,b
  4773  000D94  0100               	movlb	0	; () banked
  4774  000D96  1964               	xorwf	??_view_answers& (0+255),w,b
  4775  000D98                     u4535:
  4776  000D98  B4D8               	btfsc	status,2,c
  4777  000D9A  D00A               	goto	l5178
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;main.c: 592: LCD_WriteCommand(0x01);
  4781  000D9C  0E01               	movlw	1
  4782  000D9E  ECFF  F00E         	call	_LCD_WriteCommand
  4783                           
  4784                           ;main.c: 593: break;
  4785  000DA2  D00C               	goto	l5180
  4786  000DA4                     l5174:
  4787  000DA4  0101               	movlb	1	; () banked
  4788  000DA6  0101               	movlb	1	; () banked
  4789  000DA8  5185               	movf	_KEY_BUFFER& (0+255),w,b
  4790  000DAA  0A11               	xorlw	17
  4791  000DAC  B4D8               	btfsc	status,2,c
  4792  000DAE  D022               	goto	l399
  4793  000DB0                     l5178:
  4794  000DB0  0100               	movlb	0	; () banked
  4795  000DB2  0100               	movlb	0	; () banked
  4796  000DB4  0567               	decf	view_answers@p& (0+255),w,b
  4797  000DB6  1168               	iorwf	(view_answers@p+1)& (0+255),w,b
  4798  000DB8  B4D8               	btfsc	status,2,c
  4799  000DBA  D784               	goto	l5134
  4800  000DBC                     l5180:
  4801  000DBC  0100               	movlb	0	; () banked
  4802  000DBE  0100               	movlb	0	; () banked
  4803  000DC0  4B60               	infsnz	view_answers@i& (0+255),f,b
  4804  000DC2  2B61               	incf	(view_answers@i+1)& (0+255),f,b
  4805  000DC4                     l5182:
  4806                           
  4807                           ; BSR set to: 0
  4808  000DC4  0100               	movlb	0	; () banked
  4809  000DC6  0100               	movlb	0	; () banked
  4810  000DC8  51FD               	movf	_MCQCnt& (0+255),w,b
  4811  000DCA  0100               	movlb	0	; () banked
  4812  000DCC  6F64               	movwf	??_view_answers& (0+255),b
  4813  000DCE  6B65               	clrf	(??_view_answers+1)& (0+255),b
  4814  000DD0  0100               	movlb	0	; () banked
  4815  000DD2  5165               	movf	(??_view_answers+1)& (0+255),w,b
  4816  000DD4  0A80               	xorlw	128
  4817  000DD6  0100               	movlb	0	; () banked
  4818  000DD8  6F66               	movwf	(??_view_answers+2)& (0+255),b
  4819  000DDA  0100               	movlb	0	; () banked
  4820  000DDC  0100               	movlb	0	; () banked
  4821  000DDE  5160               	movf	view_answers@i& (0+255),w,b
  4822  000DE0  0100               	movlb	0	; () banked
  4823  000DE2  5D64               	subwf	??_view_answers& (0+255),w,b
  4824  000DE4  0100               	movlb	0	; () banked
  4825  000DE6  0100               	movlb	0	; () banked
  4826  000DE8  5161               	movf	(view_answers@i+1)& (0+255),w,b
  4827  000DEA  0A80               	xorlw	128
  4828  000DEC  0100               	movlb	0	; () banked
  4829  000DEE  5966               	subwfb	(??_view_answers+2)& (0+255),w,b
  4830  000DF0  B0D8               	btfsc	status,0,c
  4831  000DF2  D554               	goto	l5082
  4832  000DF4                     l399:
  4833  000DF4  0012               	return	
  4834  000DF6                     __end_of_view_answers:
  4835                           	opt stack 0
  4836                           tblptru	equ	0xFF8
  4837                           tblptrh	equ	0xFF7
  4838                           tblptrl	equ	0xFF6
  4839                           tablat	equ	0xFF5
  4840                           prodl	equ	0xFF3
  4841                           intcon	equ	0xFF2
  4842                           postinc0	equ	0xFEE
  4843                           wreg	equ	0xFE8
  4844                           postinc1	equ	0xFE6
  4845                           postdec1	equ	0xFE5
  4846                           fsr1l	equ	0xFE1
  4847                           postinc2	equ	0xFDE
  4848                           status	equ	0xFD8
  4849                           
  4850 ;; *************** function _saveAnswer *****************
  4851 ;; Defined at:
  4852 ;;		line 615 in file "main.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  qNumber         1    wreg     unsigned char 
  4855 ;;  ans             2   34[COMRAM] PTR unsigned char 
  4856 ;;		 -> runPaper@ansBuffer(2), 
  4857 ;;  flag            2   36[COMRAM] PTR unsigned char 
  4858 ;;		 -> runPaper@ansBuffer(2), 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  qNumber         1   40[COMRAM] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;		None               void
  4863 ;; Registers used:
  4864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4870 ;;      Params:         4       0       0       0       0       0       0       0       0
  4871 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4872 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4873 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4874 ;;Total ram usage:        7 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    5
  4877 ;; This function calls:
  4878 ;;		_Busy_eep
  4879 ;;		_Write_b_eep
  4880 ;; This function is called by:
  4881 ;;		_runPaper
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text10
  4886  002CD0                     __ptext10:
  4887                           	opt stack 0
  4888  002CD0                     _saveAnswer:
  4889                           	opt stack 22
  4890                           
  4891                           ;incstack = 0
  4892                           ;saveAnswer@qNumber stored from wreg
  4893  002CD0  CFE8 F029          	movff	wreg,saveAnswer@qNumber
  4894                           
  4895                           ;main.c: 616: (Busy_eep(), Write_b_eep(0x0A + ((qNumber - 1)*2),*ans));
  4896  002CD4  ECFF  F017         	call	_Busy_eep	;wreg free
  4897  002CD8  90D8               	bcf	status,0,c
  4898  002CDA  3429               	rlcf	saveAnswer@qNumber,w,c
  4899  002CDC  6E27               	movwf	??_saveAnswer& (0+255),c
  4900  002CDE  6A28               	clrf	(??_saveAnswer+1)& (0+255),c
  4901  002CE0  3628               	rlcf	(??_saveAnswer+1)& (0+255),f,c
  4902  002CE2  0E08               	movlw	8
  4903  002CE4  2427               	addwf	??_saveAnswer,w,c
  4904  002CE6  6E1E               	movwf	Write_b_eep@badd,c
  4905  002CE8  0E00               	movlw	0
  4906  002CEA  2028               	addwfc	??_saveAnswer+1,w,c
  4907  002CEC  6E1F               	movwf	Write_b_eep@badd+1,c
  4908  002CEE  C023  FFD9         	movff	saveAnswer@ans,fsr2l
  4909  002CF2  C024  FFDA         	movff	saveAnswer@ans+1,fsr2h
  4910  002CF6  50DF               	movf	indf2,w,c
  4911  002CF8  6E20               	movwf	Write_b_eep@bdat,c
  4912  002CFA  EC04  F017         	call	_Write_b_eep	;wreg free
  4913                           
  4914                           ;main.c: 617: (Busy_eep(), Write_b_eep(0x0A + (qNumber)*2 - 1,*flag));
  4915  002CFE  ECFF  F017         	call	_Busy_eep	;wreg free
  4916  002D02  90D8               	bcf	status,0,c
  4917  002D04  3429               	rlcf	saveAnswer@qNumber,w,c
  4918  002D06  6E27               	movwf	??_saveAnswer& (0+255),c
  4919  002D08  6A28               	clrf	(??_saveAnswer+1)& (0+255),c
  4920  002D0A  3628               	rlcf	(??_saveAnswer+1)& (0+255),f,c
  4921  002D0C  0E09               	movlw	9
  4922  002D0E  2427               	addwf	??_saveAnswer,w,c
  4923  002D10  6E1E               	movwf	Write_b_eep@badd,c
  4924  002D12  0E00               	movlw	0
  4925  002D14  2028               	addwfc	??_saveAnswer+1,w,c
  4926  002D16  6E1F               	movwf	Write_b_eep@badd+1,c
  4927  002D18  C025  FFD9         	movff	saveAnswer@flag,fsr2l
  4928  002D1C  C026  FFDA         	movff	saveAnswer@flag+1,fsr2h
  4929  002D20  50DF               	movf	indf2,w,c
  4930  002D22  6E20               	movwf	Write_b_eep@bdat,c
  4931  002D24  EC04  F017         	call	_Write_b_eep	;wreg free
  4932  002D28  0012               	return	
  4933  002D2A                     __end_of_saveAnswer:
  4934                           	opt stack 0
  4935                           tblptru	equ	0xFF8
  4936                           tblptrh	equ	0xFF7
  4937                           tblptrl	equ	0xFF6
  4938                           tablat	equ	0xFF5
  4939                           prodl	equ	0xFF3
  4940                           intcon	equ	0xFF2
  4941                           postinc0	equ	0xFEE
  4942                           wreg	equ	0xFE8
  4943                           postinc1	equ	0xFE6
  4944                           postdec1	equ	0xFE5
  4945                           fsr1l	equ	0xFE1
  4946                           indf2	equ	0xFDF
  4947                           postinc2	equ	0xFDE
  4948                           fsr2h	equ	0xFDA
  4949                           fsr2l	equ	0xFD9
  4950                           status	equ	0xFD8
  4951                           
  4952 ;; *************** function _Write_b_eep *****************
  4953 ;; Defined at:
  4954 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\pic18\plib\EEP\write_B.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  badd            2   29[COMRAM] unsigned int 
  4957 ;;  bdat            1   31[COMRAM] unsigned char 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  GIE_BIT_VAL     1   33[COMRAM] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;		None               void
  4962 ;; Registers used:
  4963 ;;		wreg, status,2
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4969 ;;      Params:         3       0       0       0       0       0       0       0       0
  4970 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4971 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4972 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4973 ;;Total ram usage:        5 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; Hardware stack levels required when called:    4
  4976 ;; This function calls:
  4977 ;;		Nothing
  4978 ;; This function is called by:
  4979 ;;		_saveAnswer
  4980 ;;		_initializeDevice
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text11
  4985  002E08                     __ptext11:
  4986                           	opt stack 0
  4987  002E08                     _Write_b_eep:
  4988                           	opt stack 25
  4989                           
  4990                           ;incstack = 0
  4991  002E08  6E21               	movwf	??_Write_b_eep& (0+255),c
  4992  002E0A  0E00               	movlw	0
  4993  002E0C  6E22               	movwf	Write_b_eep@GIE_BIT_VAL,c
  4994  002E0E  5021               	movf	??_Write_b_eep& (0+255),w,c
  4995  002E10  C01E  FFA9         	movff	Write_b_eep@badd,4009	;volatile
  4996  002E14  C020  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
  4997  002E18  9EA6               	bcf	4006,7,c	;volatile
  4998  002E1A  9CA6               	bcf	4006,6,c	;volatile
  4999  002E1C  84A6               	bsf	4006,2,c	;volatile
  5000  002E1E  0E00               	movlw	0
  5001  002E20  BEF2               	btfsc	intcon,7,c	;volatile
  5002  002E22  0E01               	movlw	1
  5003  002E24  6E22               	movwf	Write_b_eep@GIE_BIT_VAL,c
  5004  002E26  9EF2               	bcf	intcon,7,c	;volatile
  5005  002E28  0E55               	movlw	85
  5006  002E2A  6EA7               	movwf	4007,c	;volatile
  5007  002E2C  0EAA               	movlw	170
  5008  002E2E  6EA7               	movwf	4007,c	;volatile
  5009  002E30  82A6               	bsf	4006,1,c	;volatile
  5010  002E32                     l521:
  5011  002E32  B2A6               	btfsc	4006,1,c	;volatile
  5012  002E34  D7FE               	goto	l521
  5013  002E36  B022               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
  5014  002E38  D002               	bra	u4595
  5015  002E3A  9EF2               	bcf	intcon,7,c	;volatile
  5016  002E3C  D001               	bra	u4596
  5017  002E3E                     u4595:
  5018  002E3E  8EF2               	bsf	intcon,7,c	;volatile
  5019  002E40                     u4596:
  5020  002E40  94A6               	bcf	4006,2,c	;volatile
  5021  002E42  0012               	return	
  5022  002E44                     __end_of_Write_b_eep:
  5023                           	opt stack 0
  5024                           tblptru	equ	0xFF8
  5025                           tblptrh	equ	0xFF7
  5026                           tblptrl	equ	0xFF6
  5027                           tablat	equ	0xFF5
  5028                           prodl	equ	0xFF3
  5029                           intcon	equ	0xFF2
  5030                           postinc0	equ	0xFEE
  5031                           wreg	equ	0xFE8
  5032                           postinc1	equ	0xFE6
  5033                           postdec1	equ	0xFE5
  5034                           fsr1l	equ	0xFE1
  5035                           indf2	equ	0xFDF
  5036                           postinc2	equ	0xFDE
  5037                           fsr2h	equ	0xFDA
  5038                           fsr2l	equ	0xFD9
  5039                           status	equ	0xFD8
  5040                           
  5041 ;; *************** function _Busy_eep *****************
  5042 ;; Defined at:
  5043 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\pic18\plib\EEP\busy_eep.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;		None               void
  5050 ;; Registers used:
  5051 ;;		None
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5057 ;;      Params:         0       0       0       0       0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5060 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5061 ;;Total ram usage:        0 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:    4
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_saveAnswer
  5068 ;;		_initializeDevice
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text12
  5073  002FFE                     __ptext12:
  5074                           	opt stack 0
  5075  002FFE                     _Busy_eep:
  5076                           	opt stack 25
  5077  002FFE                     l494:
  5078  002FFE  A2A6               	btfss	4006,1,c	;volatile
  5079  003000  0012               	return	
  5080  003002  D7FD               	goto	l494
  5081  003004                     __end_of_Busy_eep:
  5082                           	opt stack 0
  5083                           tblptru	equ	0xFF8
  5084                           tblptrh	equ	0xFF7
  5085                           tblptrl	equ	0xFF6
  5086                           tablat	equ	0xFF5
  5087                           prodl	equ	0xFF3
  5088                           intcon	equ	0xFF2
  5089                           postinc0	equ	0xFEE
  5090                           wreg	equ	0xFE8
  5091                           postinc1	equ	0xFE6
  5092                           postdec1	equ	0xFE5
  5093                           fsr1l	equ	0xFE1
  5094                           indf2	equ	0xFDF
  5095                           postinc2	equ	0xFDE
  5096                           fsr2h	equ	0xFDA
  5097                           fsr2l	equ	0xFD9
  5098                           status	equ	0xFD8
  5099                           
  5100 ;; *************** function _loadAnswer *****************
  5101 ;; Defined at:
  5102 ;;		line 622 in file "main.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  qNumber         1    wreg     unsigned char 
  5105 ;;  ans             2   31[COMRAM] PTR unsigned char 
  5106 ;;		 -> runPaper@ansBuffer(2), 
  5107 ;;  flag            2   33[COMRAM] PTR unsigned char 
  5108 ;;		 -> runPaper@ansBuffer(2), 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  qNumber         1   37[COMRAM] unsigned char 
  5111 ;; Return value:  Size  Location     Type
  5112 ;;		None               void
  5113 ;; Registers used:
  5114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5120 ;;      Params:         4       0       0       0       0       0       0       0       0
  5121 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5122 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5123 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5124 ;;Total ram usage:        7 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; Hardware stack levels required when called:    5
  5127 ;; This function calls:
  5128 ;;		_Read_b_eep
  5129 ;; This function is called by:
  5130 ;;		_runPaper
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text13
  5135  002D2A                     __ptext13:
  5136                           	opt stack 0
  5137  002D2A                     _loadAnswer:
  5138                           	opt stack 22
  5139                           
  5140                           ;incstack = 0
  5141                           ;loadAnswer@qNumber stored from wreg
  5142  002D2A  CFE8 F026          	movff	wreg,loadAnswer@qNumber
  5143                           
  5144                           ;main.c: 623: *ans = Read_b_eep(0x0A + (qNumber - 1)*2);
  5145  002D2E  90D8               	bcf	status,0,c
  5146  002D30  3426               	rlcf	loadAnswer@qNumber,w,c
  5147  002D32  6E24               	movwf	??_loadAnswer& (0+255),c
  5148  002D34  6A25               	clrf	(??_loadAnswer+1)& (0+255),c
  5149  002D36  3625               	rlcf	(??_loadAnswer+1)& (0+255),f,c
  5150  002D38  0E08               	movlw	8
  5151  002D3A  2424               	addwf	??_loadAnswer,w,c
  5152  002D3C  6E1E               	movwf	Read_b_eep@badd,c
  5153  002D3E  0E00               	movlw	0
  5154  002D40  2025               	addwfc	??_loadAnswer+1,w,c
  5155  002D42  6E1F               	movwf	Read_b_eep@badd+1,c
  5156  002D44  ECE1  F017         	call	_Read_b_eep	;wreg free
  5157  002D48  C020  FFD9         	movff	loadAnswer@ans,fsr2l
  5158  002D4C  C021  FFDA         	movff	loadAnswer@ans+1,fsr2h
  5159  002D50  6EDF               	movwf	indf2,c
  5160                           
  5161                           ;main.c: 624: *flag = Read_b_eep(0x0A + (qNumber)*2 - 1);
  5162  002D52  90D8               	bcf	status,0,c
  5163  002D54  3426               	rlcf	loadAnswer@qNumber,w,c
  5164  002D56  6E24               	movwf	??_loadAnswer& (0+255),c
  5165  002D58  6A25               	clrf	(??_loadAnswer+1)& (0+255),c
  5166  002D5A  3625               	rlcf	(??_loadAnswer+1)& (0+255),f,c
  5167  002D5C  0E09               	movlw	9
  5168  002D5E  2424               	addwf	??_loadAnswer,w,c
  5169  002D60  6E1E               	movwf	Read_b_eep@badd,c
  5170  002D62  0E00               	movlw	0
  5171  002D64  2025               	addwfc	??_loadAnswer+1,w,c
  5172  002D66  6E1F               	movwf	Read_b_eep@badd+1,c
  5173  002D68  ECE1  F017         	call	_Read_b_eep	;wreg free
  5174  002D6C  C022  FFD9         	movff	loadAnswer@flag,fsr2l
  5175  002D70  C023  FFDA         	movff	loadAnswer@flag+1,fsr2h
  5176  002D74  6EDF               	movwf	indf2,c
  5177  002D76  0012               	return	
  5178  002D78                     __end_of_loadAnswer:
  5179                           	opt stack 0
  5180                           tblptru	equ	0xFF8
  5181                           tblptrh	equ	0xFF7
  5182                           tblptrl	equ	0xFF6
  5183                           tablat	equ	0xFF5
  5184                           prodl	equ	0xFF3
  5185                           intcon	equ	0xFF2
  5186                           postinc0	equ	0xFEE
  5187                           wreg	equ	0xFE8
  5188                           postinc1	equ	0xFE6
  5189                           postdec1	equ	0xFE5
  5190                           fsr1l	equ	0xFE1
  5191                           indf2	equ	0xFDF
  5192                           postinc2	equ	0xFDE
  5193                           fsr2h	equ	0xFDA
  5194                           fsr2l	equ	0xFD9
  5195                           status	equ	0xFD8
  5196                           
  5197 ;; *************** function _Read_b_eep *****************
  5198 ;; Defined at:
  5199 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\pic18\plib\EEP\read_B.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  badd            2   29[COMRAM] unsigned int 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      unsigned char 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5213 ;;      Params:         2       0       0       0       0       0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5216 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5217 ;;Total ram usage:        2 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    4
  5220 ;; This function calls:
  5221 ;;		Nothing
  5222 ;; This function is called by:
  5223 ;;		_subMenu
  5224 ;;		_view_answers
  5225 ;;		_loadAnswer
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text14
  5230  002FC2                     __ptext14:
  5231                           	opt stack 0
  5232  002FC2                     _Read_b_eep:
  5233                           	opt stack 21
  5234                           
  5235                           ;incstack = 0
  5236  002FC2  C01E  FFA9         	movff	Read_b_eep@badd,4009	;volatile
  5237  002FC6  9CA6               	bcf	4006,6,c	;volatile
  5238  002FC8  9EA6               	bcf	4006,7,c	;volatile
  5239  002FCA  80A6               	bsf	4006,0,c	;volatile
  5240  002FCC  F000               	nop	
  5241  002FCE  F000               	nop	
  5242  002FD0  50A8               	movf	4008,w,c	;volatile
  5243  002FD2  0012               	return	
  5244  002FD4                     __end_of_Read_b_eep:
  5245                           	opt stack 0
  5246                           tblptru	equ	0xFF8
  5247                           tblptrh	equ	0xFF7
  5248                           tblptrl	equ	0xFF6
  5249                           tablat	equ	0xFF5
  5250                           prodl	equ	0xFF3
  5251                           intcon	equ	0xFF2
  5252                           postinc0	equ	0xFEE
  5253                           wreg	equ	0xFE8
  5254                           postinc1	equ	0xFE6
  5255                           postdec1	equ	0xFE5
  5256                           fsr1l	equ	0xFE1
  5257                           indf2	equ	0xFDF
  5258                           postinc2	equ	0xFDE
  5259                           fsr2h	equ	0xFDA
  5260                           fsr2l	equ	0xFD9
  5261                           status	equ	0xFD8
  5262                           
  5263 ;; *************** function _interruptConfig *****************
  5264 ;; Defined at:
  5265 ;;		line 732 in file "main.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  state           1    wreg     unsigned char 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  state           1   29[COMRAM] unsigned char 
  5270 ;; Return value:  Size  Location     Type
  5271 ;;		None               void
  5272 ;; Registers used:
  5273 ;;		wreg
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5279 ;;      Params:         0       0       0       0       0       0       0       0       0
  5280 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5282 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5283 ;;Total ram usage:        1 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    4
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		_examSetup
  5290 ;;		_runPaper
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text15
  5295  002FD4                     __ptext15:
  5296                           	opt stack 0
  5297  002FD4                     _interruptConfig:
  5298                           	opt stack 23
  5299                           
  5300                           ;incstack = 0
  5301                           ;interruptConfig@state stored from wreg
  5302  002FD4  CFE8 F01E          	movff	wreg,interruptConfig@state
  5303                           
  5304                           ;main.c: 733: INTCONbits.GIE = state;
  5305  002FD8  B01E               	btfsc	interruptConfig@state,0,c
  5306  002FDA  D002               	bra	u4625
  5307  002FDC  9EF2               	bcf	intcon,7,c	;volatile
  5308  002FDE  D001               	bra	u4626
  5309  002FE0                     u4625:
  5310  002FE0  8EF2               	bsf	intcon,7,c	;volatile
  5311  002FE2                     u4626:
  5312  002FE2  0012               	return	
  5313  002FE4                     __end_of_interruptConfig:
  5314                           	opt stack 0
  5315                           tblptru	equ	0xFF8
  5316                           tblptrh	equ	0xFF7
  5317                           tblptrl	equ	0xFF6
  5318                           tablat	equ	0xFF5
  5319                           prodl	equ	0xFF3
  5320                           intcon	equ	0xFF2
  5321                           postinc0	equ	0xFEE
  5322                           wreg	equ	0xFE8
  5323                           postinc1	equ	0xFE6
  5324                           postdec1	equ	0xFE5
  5325                           fsr1l	equ	0xFE1
  5326                           indf2	equ	0xFDF
  5327                           postinc2	equ	0xFDE
  5328                           fsr2h	equ	0xFDA
  5329                           fsr2l	equ	0xFD9
  5330                           status	equ	0xFD8
  5331                           
  5332 ;; *************** function _get_yes_no *****************
  5333 ;; Defined at:
  5334 ;;		line 741 in file "main.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  lcd_location    1    wreg     unsigned char 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  lcd_location    1   42[COMRAM] unsigned char 
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      unsigned char 
  5341 ;; Registers used:
  5342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5348 ;;      Params:         0       0       0       0       0       0       0       0       0
  5349 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5350 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5351 ;;      Totals:         1       2       0       0       0       0       0       0       0
  5352 ;;Total ram usage:        3 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; Hardware stack levels required when called:    7
  5355 ;; This function calls:
  5356 ;;		_Delay_100ms
  5357 ;;		_LCD_WriteCharAt
  5358 ;;		_LCD_WriteStringAt
  5359 ;;		_readKey
  5360 ;; This function is called by:
  5361 ;;		_startExam
  5362 ;;		_runPaper
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text16
  5367  0023DA                     __ptext16:
  5368                           	opt stack 0
  5369  0023DA                     _get_yes_no:
  5370                           	opt stack 20
  5371                           
  5372                           ;incstack = 0
  5373                           ;get_yes_no@lcd_location stored from wreg
  5374  0023DA  CFE8 F02B          	movff	wreg,get_yes_no@lcd_location
  5375                           
  5376                           ;main.c: 742: LCD_WriteStringAt(lcd_location, 10, "no");
  5377  0023DE  0100               	movlb	0	; () banked
  5378  0023E0  6F60               	movwf	??_get_yes_no& (0+255),b
  5379  0023E2  0E0A               	movlw	10
  5380  0023E4  6E23               	movwf	LCD_WriteStringAt@column,c
  5381  0023E6  0100               	movlb	0	; () banked
  5382  0023E8  5160               	movf	??_get_yes_no& (0+255),w,b
  5383  0023EA  0E08               	movlw	high STR_8
  5384  0023EC  6E25               	movwf	LCD_WriteStringAt@string+1,c
  5385  0023EE  0E87               	movlw	low STR_8
  5386  0023F0  6E24               	movwf	LCD_WriteStringAt@string,c
  5387  0023F2  502B               	movf	get_yes_no@lcd_location,w,c
  5388  0023F4  EC1A  F015         	call	_LCD_WriteStringAt
  5389                           
  5390                           ;main.c: 743: LCD_WriteStringAt(lcd_location + 1, 10, "yes");
  5391  0023F8  0100               	movlb	0	; () banked
  5392  0023FA  6F60               	movwf	??_get_yes_no& (0+255),b
  5393  0023FC  0E0A               	movlw	10
  5394  0023FE  6E23               	movwf	LCD_WriteStringAt@column,c
  5395  002400  0100               	movlb	0	; () banked
  5396  002402  5160               	movf	??_get_yes_no& (0+255),w,b
  5397  002404  0E08               	movlw	high STR_9
  5398  002406  6E25               	movwf	LCD_WriteStringAt@string+1,c
  5399  002408  0E80               	movlw	low STR_9
  5400  00240A  6E24               	movwf	LCD_WriteStringAt@string,c
  5401  00240C  282B               	incf	get_yes_no@lcd_location,w,c
  5402  00240E  EC1A  F015         	call	_LCD_WriteStringAt
  5403  002412                     l5220:
  5404                           
  5405                           ;main.c: 747: LCD_WriteCharAt((char) user_option + lcd_location, 8, 0x7e);
  5406  002412  0100               	movlb	0	; () banked
  5407  002414  6F60               	movwf	??_get_yes_no& (0+255),b
  5408  002416  0E08               	movlw	8
  5409  002418  6E27               	movwf	LCD_WriteCharAt@column,c
  5410  00241A  0100               	movlb	0	; () banked
  5411  00241C  5160               	movf	??_get_yes_no& (0+255),w,b
  5412  00241E  0100               	movlb	0	; () banked
  5413  002420  6F61               	movwf	(??_get_yes_no+1)& (0+255),b
  5414  002422  0E7E               	movlw	126
  5415  002424  6E28               	movwf	LCD_WriteCharAt@chr,c
  5416  002426  0100               	movlb	0	; () banked
  5417  002428  5161               	movf	(??_get_yes_no+1)& (0+255),w,b
  5418  00242A  502B               	movf	get_yes_no@lcd_location,w,c
  5419  00242C  0100               	movlb	(get_yes_no@user_option/(0+8)) shr (0+8)
  5420  00242E  B042               	btfsc	get_yes_no@user_option/(0+8),get_yes_no@user_option& (0+7),c
  5421  002430  0F01               	addlw	1
  5422  002432  ECBC  F016         	call	_LCD_WriteCharAt
  5423                           
  5424                           ;main.c: 748: KEY_BUFFER = readKey();
  5425  002436  EC30  F014         	call	_readKey	;wreg free
  5426  00243A  0101               	movlb	1	; () banked
  5427  00243C  0101               	movlb	1	; () banked
  5428  00243E  6F85               	movwf	_KEY_BUFFER& (0+255),b
  5429                           
  5430                           ; BSR set to: 1
  5431                           ;main.c: 749: if (KEY_BUFFER == 0x22) {
  5432  002440  0101               	movlb	1	; () banked
  5433  002442  0101               	movlb	1	; () banked
  5434  002444  5185               	movf	_KEY_BUFFER& (0+255),w,b
  5435  002446  0A22               	xorlw	34
  5436  002448  A4D8               	btfss	status,2,c
  5437  00244A  D018               	goto	l5230
  5438                           
  5439                           ; BSR set to: 1
  5440                           ;main.c: 750: LCD_WriteCharAt((char) user_option + lcd_location, 8, ' ');
  5441  00244C  0100               	movlb	0	; () banked
  5442  00244E  6F60               	movwf	??_get_yes_no& (0+255),b
  5443  002450  0E08               	movlw	8
  5444  002452  6E27               	movwf	LCD_WriteCharAt@column,c
  5445  002454  0100               	movlb	0	; () banked
  5446  002456  5160               	movf	??_get_yes_no& (0+255),w,b
  5447  002458  0100               	movlb	0	; () banked
  5448  00245A  6F61               	movwf	(??_get_yes_no+1)& (0+255),b
  5449  00245C  0E20               	movlw	32
  5450  00245E  6E28               	movwf	LCD_WriteCharAt@chr,c
  5451  002460  0100               	movlb	0	; () banked
  5452  002462  5161               	movf	(??_get_yes_no+1)& (0+255),w,b
  5453  002464  502B               	movf	get_yes_no@lcd_location,w,c
  5454  002466  0100               	movlb	(get_yes_no@user_option/(0+8)) shr (0+8)
  5455  002468  B042               	btfsc	get_yes_no@user_option/(0+8),get_yes_no@user_option& (0+7),c
  5456  00246A  0F01               	addlw	1
  5457  00246C  ECBC  F016         	call	_LCD_WriteCharAt
  5458                           
  5459                           ;main.c: 751: user_option = !user_option;
  5460  002470  0100               	movlb	(get_yes_no@user_option/(0+8)) shr (0+8)
  5461  002472  0100               	movlb	(get_yes_no@user_option/(0+8)) shr (0+8)
  5462  002474  7042               	btg	get_yes_no@user_option/(0+8),get_yes_no@user_option& (0+7),c
  5463                           
  5464                           ;main.c: 752: Delay_100ms();
  5465  002476  EC22  F017         	call	_Delay_100ms	;wreg free
  5466                           
  5467                           ;main.c: 753: } else if (KEY_BUFFER == 0x28) {
  5468  00247A  D7CB               	goto	l5220
  5469  00247C                     l5230:
  5470  00247C  0101               	movlb	1	; () banked
  5471  00247E  0101               	movlb	1	; () banked
  5472  002480  5185               	movf	_KEY_BUFFER& (0+255),w,b
  5473  002482  0A28               	xorlw	40
  5474  002484  A4D8               	btfss	status,2,c
  5475  002486  D018               	goto	l5236
  5476                           
  5477                           ; BSR set to: 1
  5478                           ;main.c: 754: LCD_WriteCharAt((char) user_option + 2, 8, ' ');
  5479  002488  0100               	movlb	0	; () banked
  5480  00248A  6F60               	movwf	??_get_yes_no& (0+255),b
  5481  00248C  0E08               	movlw	8
  5482  00248E  6E27               	movwf	LCD_WriteCharAt@column,c
  5483  002490  0100               	movlb	0	; () banked
  5484  002492  5160               	movf	??_get_yes_no& (0+255),w,b
  5485  002494  0100               	movlb	0	; () banked
  5486  002496  6F61               	movwf	(??_get_yes_no+1)& (0+255),b
  5487  002498  0E20               	movlw	32
  5488  00249A  6E28               	movwf	LCD_WriteCharAt@chr,c
  5489  00249C  0100               	movlb	0	; () banked
  5490  00249E  5161               	movf	(??_get_yes_no+1)& (0+255),w,b
  5491  0024A0  0E02               	movlw	2
  5492  0024A2  0100               	movlb	(get_yes_no@user_option/(0+8)) shr (0+8)
  5493  0024A4  B042               	btfsc	get_yes_no@user_option/(0+8),get_yes_no@user_option& (0+7),c
  5494  0024A6  0F01               	addlw	1
  5495  0024A8  ECBC  F016         	call	_LCD_WriteCharAt
  5496                           
  5497                           ;main.c: 755: Delay_100ms();
  5498  0024AC  EC22  F017         	call	_Delay_100ms	;wreg free
  5499                           
  5500                           ;main.c: 756: user_option = !user_option;
  5501  0024B0  0100               	movlb	(get_yes_no@user_option/(0+8)) shr (0+8)
  5502  0024B2  0100               	movlb	(get_yes_no@user_option/(0+8)) shr (0+8)
  5503  0024B4  7042               	btg	get_yes_no@user_option/(0+8),get_yes_no@user_option& (0+7),c
  5504                           
  5505                           ;main.c: 757: } else if (KEY_BUFFER == 0x12) {
  5506  0024B6  D7AD               	goto	l5220
  5507  0024B8                     l5236:
  5508  0024B8  0101               	movlb	1	; () banked
  5509  0024BA  0101               	movlb	1	; () banked
  5510  0024BC  5185               	movf	_KEY_BUFFER& (0+255),w,b
  5511  0024BE  0A12               	xorlw	18
  5512  0024C0  A4D8               	btfss	status,2,c
  5513  0024C2  D7A7               	goto	l5220
  5514                           
  5515                           ; BSR set to: 1
  5516                           ;main.c: 758: if (user_option == 1) {
  5517  0024C4  0100               	movlb	(get_yes_no@user_option/(0+8)) shr (0+8)
  5518  0024C6  A042               	btfss	get_yes_no@user_option/(0+8),get_yes_no@user_option& (0+7),c
  5519  0024C8  D002               	goto	l5246
  5520                           
  5521                           ;main.c: 759: return 1;
  5522  0024CA  0E01               	movlw	1
  5523  0024CC  D001               	goto	l450
  5524  0024CE                     l5246:
  5525                           
  5526                           ;main.c: 761: return 0;
  5527  0024CE  0E00               	movlw	0
  5528  0024D0                     l450:
  5529  0024D0  0012               	return	
  5530  0024D2                     __end_of_get_yes_no:
  5531                           	opt stack 0
  5532                           tblptru	equ	0xFF8
  5533                           tblptrh	equ	0xFF7
  5534                           tblptrl	equ	0xFF6
  5535                           tablat	equ	0xFF5
  5536                           prodl	equ	0xFF3
  5537                           intcon	equ	0xFF2
  5538                           postinc0	equ	0xFEE
  5539                           wreg	equ	0xFE8
  5540                           postinc1	equ	0xFE6
  5541                           postdec1	equ	0xFE5
  5542                           fsr1l	equ	0xFE1
  5543                           indf2	equ	0xFDF
  5544                           postinc2	equ	0xFDE
  5545                           fsr2h	equ	0xFDA
  5546                           fsr2l	equ	0xFD9
  5547                           status	equ	0xFD8
  5548                           
  5549 ;; *************** function _Delay_1000ms *****************
  5550 ;; Defined at:
  5551 ;;		line 118 in file "MyDelays.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;		None
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;  r0              2   30[COMRAM] unsigned short 
  5556 ;;  r1              1   32[COMRAM] unsigned char 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;		None               void
  5559 ;; Registers used:
  5560 ;;		wreg, status,2, status,0
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0
  5567 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5568 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5569 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5570 ;;Total ram usage:        4 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    4
  5573 ;; This function calls:
  5574 ;;		Nothing
  5575 ;; This function is called by:
  5576 ;;		_runPaper
  5577 ;;		_powerOnScreen
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text17
  5582  002E7A                     __ptext17:
  5583                           	opt stack 0
  5584  002E7A                     _Delay_1000ms:
  5585                           	opt stack 23
  5586                           
  5587                           ;MyDelays.c: 140: register unsigned short r0;
  5588                           ;MyDelays.c: 141: register char r1;
  5589                           ;MyDelays.c: 142: r1 = 0;
  5590                           
  5591                           ;incstack = 0
  5592  002E7A  6E1E               	movwf	??_Delay_1000ms& (0+255),c
  5593  002E7C  0E00               	movlw	0
  5594  002E7E  6E21               	movwf	Delay_1000ms@r1,c
  5595  002E80  501E               	movf	??_Delay_1000ms& (0+255),w,c
  5596                           
  5597                           ;MyDelays.c: 143: while(r1 < 5){
  5598  002E82  D00E               	goto	l5214
  5599  002E84                     l5206:
  5600                           
  5601                           ;MyDelays.c: 144: r0 = 0;
  5602  002E84  0E00               	movlw	0
  5603  002E86  6E20               	movwf	Delay_1000ms@r0+1,c
  5604  002E88  0E00               	movlw	0
  5605  002E8A  6E1F               	movwf	Delay_1000ms@r0,c
  5606                           
  5607                           ;MyDelays.c: 145: while(r0 < 33335)
  5608  002E8C  D002               	goto	l5210
  5609  002E8E                     l5208:
  5610                           
  5611                           ;MyDelays.c: 146: r0++;
  5612  002E8E  4A1F               	infsnz	Delay_1000ms@r0,f,c
  5613  002E90  2A20               	incf	Delay_1000ms@r0+1,f,c
  5614  002E92                     l5210:
  5615  002E92  0E37               	movlw	55
  5616  002E94  5C1F               	subwf	Delay_1000ms@r0,w,c
  5617  002E96  0E82               	movlw	130
  5618  002E98  5820               	subwfb	Delay_1000ms@r0+1,w,c
  5619  002E9A  A0D8               	btfss	status,0,c
  5620  002E9C  D7F8               	goto	l5208
  5621                           
  5622                           ;MyDelays.c: 147: r1++;
  5623  002E9E  2A21               	incf	Delay_1000ms@r1,f,c
  5624  002EA0                     l5214:
  5625  002EA0  0E04               	movlw	4
  5626  002EA2  6421               	cpfsgt	Delay_1000ms@r1,c
  5627  002EA4  D7EF               	goto	l5206
  5628  002EA6  0012               	return	
  5629  002EA8                     __end_of_Delay_1000ms:
  5630                           	opt stack 0
  5631                           tblptru	equ	0xFF8
  5632                           tblptrh	equ	0xFF7
  5633                           tblptrl	equ	0xFF6
  5634                           tablat	equ	0xFF5
  5635                           prodl	equ	0xFF3
  5636                           intcon	equ	0xFF2
  5637                           postinc0	equ	0xFEE
  5638                           wreg	equ	0xFE8
  5639                           postinc1	equ	0xFE6
  5640                           postdec1	equ	0xFE5
  5641                           fsr1l	equ	0xFE1
  5642                           indf2	equ	0xFDF
  5643                           postinc2	equ	0xFDE
  5644                           fsr2h	equ	0xFDA
  5645                           fsr2l	equ	0xFD9
  5646                           status	equ	0xFD8
  5647                           
  5648 ;; *************** function _getBeep *****************
  5649 ;; Defined at:
  5650 ;;		line 605 in file "main.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  cnt             2   33[COMRAM] short 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;		None
  5655 ;; Return value:  Size  Location     Type
  5656 ;;		None               void
  5657 ;; Registers used:
  5658 ;;		wreg, status,2, status,0, prodl, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5664 ;;      Params:         2       0       0       0       0       0       0       0       0
  5665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5667 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5668 ;;Total ram usage:        2 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; Hardware stack levels required when called:    5
  5671 ;; This function calls:
  5672 ;;		_Delay_100ms
  5673 ;; This function is called by:
  5674 ;;		_startExam
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text18
  5679  002ED6                     __ptext18:
  5680                           	opt stack 0
  5681  002ED6                     _getBeep:
  5682                           	opt stack 23
  5683                           
  5684                           ;main.c: 606: for (; cnt > 0; cnt--) {
  5685                           
  5686                           ;incstack = 0
  5687  002ED6  5023               	movf	getBeep@cnt+1,w,c
  5688  002ED8  0A80               	xorlw	128
  5689  002EDA  6EF3               	movwf	prodl,c
  5690  002EDC  0E80               	movlw	128
  5691  002EDE  5CF3               	subwf	prodl,w,c
  5692  002EE0  0E01               	movlw	1
  5693  002EE2  B4D8               	btfsc	status,2,c
  5694  002EE4  5C22               	subwf	getBeep@cnt,w,c
  5695  002EE6  A0D8               	btfss	status,0,c
  5696  002EE8  D006               	goto	l405
  5697                           
  5698                           ;main.c: 608: Delay_100ms();
  5699  002EEA  EC22  F017         	call	_Delay_100ms	;wreg free
  5700  002EEE  0622               	decf	getBeep@cnt,f,c
  5701  002EF0  A0D8               	btfss	status,0,c
  5702  002EF2  0623               	decf	getBeep@cnt+1,f,c
  5703  002EF4  D7F0               	goto	_getBeep
  5704  002EF6                     l405:
  5705  002EF6  0012               	return	
  5706  002EF8                     __end_of_getBeep:
  5707                           	opt stack 0
  5708                           tblptru	equ	0xFF8
  5709                           tblptrh	equ	0xFF7
  5710                           tblptrl	equ	0xFF6
  5711                           tablat	equ	0xFF5
  5712                           prodl	equ	0xFF3
  5713                           intcon	equ	0xFF2
  5714                           postinc0	equ	0xFEE
  5715                           wreg	equ	0xFE8
  5716                           postinc1	equ	0xFE6
  5717                           postdec1	equ	0xFE5
  5718                           fsr1l	equ	0xFE1
  5719                           indf2	equ	0xFDF
  5720                           postinc2	equ	0xFDE
  5721                           fsr2h	equ	0xFDA
  5722                           fsr2l	equ	0xFD9
  5723                           status	equ	0xFD8
  5724                           
  5725 ;; *************** function _setExamTime *****************
  5726 ;; Defined at:
  5727 ;;		line 221 in file "main.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;		None
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;  txt1           19    2[BANK0 ] unsigned char [19]
  5732 ;;  txt1_3         13   34[BANK0 ] unsigned char [13]
  5733 ;;  txt1_2         13   21[BANK0 ] unsigned char [13]
  5734 ;; Return value:  Size  Location     Type
  5735 ;;		None               void
  5736 ;; Registers used:
  5737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5743 ;;      Params:         0       0       0       0       0       0       0       0       0
  5744 ;;      Locals:         0      45       0       0       0       0       0       0       0
  5745 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5746 ;;      Totals:         0      47       0       0       0       0       0       0       0
  5747 ;;Total ram usage:       47 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:    7
  5750 ;; This function calls:
  5751 ;;		_LCD_WriteCharAt
  5752 ;;		_LCD_WriteCommand
  5753 ;;		_LCD_WriteStringAt
  5754 ;;		___awdiv
  5755 ;;		___awmod
  5756 ;;		_readKey
  5757 ;; This function is called by:
  5758 ;;		_examSetup
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	text19
  5763  00164C                     __ptext19:
  5764                           	opt stack 0
  5765  00164C                     _setExamTime:
  5766                           	opt stack 22
  5767                           
  5768                           ;main.c: 222: char txt1[] = "Set the exam time:";
  5769                           
  5770                           ;incstack = 0
  5771  00164C  EE22  F091         	lfsr	2,setExamTime@F5366
  5772  001650  EE10  F062         	lfsr	1,setExamTime@txt1
  5773  001654  0E13               	movlw	19
  5774  001656                     u5081:
  5775  001656  CFDE FFE6          	movff	postinc2,postinc1
  5776  00165A  2EE8               	decfsz	wreg,f,c
  5777  00165C  D7FC               	goto	u5081
  5778                           
  5779                           ;main.c: 223: char txt1_2[] = "Hours     : ";
  5780  00165E  EE20  F0E3         	lfsr	2,setExamTime@F5368
  5781  001662  EE10  F075         	lfsr	1,setExamTime@txt1_2
  5782  001666  0E0D               	movlw	13
  5783  001668                     u5091:
  5784  001668  CFDE FFE6          	movff	postinc2,postinc1
  5785  00166C  2EE8               	decfsz	wreg,f,c
  5786  00166E  D7FC               	goto	u5091
  5787                           
  5788                           ;main.c: 224: char txt1_3[] = "Minutes   : ";
  5789  001670  EE20  F0F0         	lfsr	2,setExamTime@F5370
  5790  001674  EE10  F082         	lfsr	1,setExamTime@txt1_3
  5791  001678  0E0D               	movlw	13
  5792  00167A                     u5101:
  5793  00167A  CFDE FFE6          	movff	postinc2,postinc1
  5794  00167E  2EE8               	decfsz	wreg,f,c
  5795  001680  D7FC               	goto	u5101
  5796                           
  5797                           ;main.c: 227: LCD_WriteCommand(0x01);
  5798  001682  0E01               	movlw	1
  5799  001684  ECFF  F00E         	call	_LCD_WriteCommand
  5800                           
  5801                           ;main.c: 228: LCD_WriteStringAt(1, 1, txt1);
  5802  001688  0100               	movlb	0	; () banked
  5803  00168A  6F60               	movwf	??_setExamTime& (0+255),b
  5804  00168C  0E01               	movlw	1
  5805  00168E  6E23               	movwf	LCD_WriteStringAt@column,c
  5806  001690  0100               	movlb	0	; () banked
  5807  001692  5160               	movf	??_setExamTime& (0+255),w,b
  5808  001694  0100               	movlb	0	; () banked
  5809  001696  0E00               	movlw	high setExamTime@txt1
  5810  001698  6E25               	movwf	LCD_WriteStringAt@string+1,c
  5811  00169A  0100               	movlb	0	; () banked
  5812  00169C  0E62               	movlw	low setExamTime@txt1
  5813  00169E  6E24               	movwf	LCD_WriteStringAt@string,c
  5814  0016A0  0E01               	movlw	1
  5815  0016A2  EC1A  F015         	call	_LCD_WriteStringAt
  5816                           
  5817                           ;main.c: 229: LCD_WriteStringAt(2, 1, txt1_2);
  5818  0016A6  0100               	movlb	0	; () banked
  5819  0016A8  6F60               	movwf	??_setExamTime& (0+255),b
  5820  0016AA  0E01               	movlw	1
  5821  0016AC  6E23               	movwf	LCD_WriteStringAt@column,c
  5822  0016AE  0100               	movlb	0	; () banked
  5823  0016B0  5160               	movf	??_setExamTime& (0+255),w,b
  5824  0016B2  0100               	movlb	0	; () banked
  5825  0016B4  0E00               	movlw	high setExamTime@txt1_2
  5826  0016B6  6E25               	movwf	LCD_WriteStringAt@string+1,c
  5827  0016B8  0100               	movlb	0	; () banked
  5828  0016BA  0E75               	movlw	low setExamTime@txt1_2
  5829  0016BC  6E24               	movwf	LCD_WriteStringAt@string,c
  5830  0016BE  0E02               	movlw	2
  5831  0016C0  EC1A  F015         	call	_LCD_WriteStringAt
  5832                           
  5833                           ;main.c: 230: LCD_WriteStringAt(3, 1, txt1_3);
  5834  0016C4  0100               	movlb	0	; () banked
  5835  0016C6  6F60               	movwf	??_setExamTime& (0+255),b
  5836  0016C8  0E01               	movlw	1
  5837  0016CA  6E23               	movwf	LCD_WriteStringAt@column,c
  5838  0016CC  0100               	movlb	0	; () banked
  5839  0016CE  5160               	movf	??_setExamTime& (0+255),w,b
  5840  0016D0  0100               	movlb	0	; () banked
  5841  0016D2  0E00               	movlw	high setExamTime@txt1_3
  5842  0016D4  6E25               	movwf	LCD_WriteStringAt@string+1,c
  5843  0016D6  0100               	movlb	0	; () banked
  5844  0016D8  0E82               	movlw	low setExamTime@txt1_3
  5845  0016DA  6E24               	movwf	LCD_WriteStringAt@string,c
  5846  0016DC  0E03               	movlw	3
  5847  0016DE  EC1A  F015         	call	_LCD_WriteStringAt
  5848                           
  5849                           ;main.c: 233: LCD_WriteCharAt(2, 13, 0x30 + hourCnt);
  5850  0016E2  0100               	movlb	0	; () banked
  5851  0016E4  6F60               	movwf	??_setExamTime& (0+255),b
  5852  0016E6  0E0D               	movlw	13
  5853  0016E8  6E27               	movwf	LCD_WriteCharAt@column,c
  5854  0016EA  0100               	movlb	0	; () banked
  5855  0016EC  5160               	movf	??_setExamTime& (0+255),w,b
  5856  0016EE  0100               	movlb	0	; () banked
  5857  0016F0  0100               	movlb	0	; () banked
  5858  0016F2  51FE               	movf	_hourCnt& (0+255),w,b
  5859  0016F4  0F30               	addlw	48
  5860  0016F6  6E28               	movwf	LCD_WriteCharAt@chr,c
  5861  0016F8  0E02               	movlw	2
  5862  0016FA  ECBC  F016         	call	_LCD_WriteCharAt
  5863                           
  5864                           ;main.c: 234: LCD_WriteCharAt(3, 13, 0x30 + minCnt / 10);
  5865  0016FE  0100               	movlb	0	; () banked
  5866  001700  6F60               	movwf	??_setExamTime& (0+255),b
  5867  001702  0E0D               	movlw	13
  5868  001704  6E27               	movwf	LCD_WriteCharAt@column,c
  5869  001706  0100               	movlb	0	; () banked
  5870  001708  5160               	movf	??_setExamTime& (0+255),w,b
  5871  00170A  0100               	movlb	0	; () banked
  5872  00170C  C0FF  F01E         	movff	_minCnt,___awdiv@dividend
  5873  001710  6A1F               	clrf	___awdiv@dividend+1,c
  5874  001712  0E00               	movlw	0
  5875  001714  6E21               	movwf	___awdiv@divisor+1,c
  5876  001716  0E0A               	movlw	10
  5877  001718  6E20               	movwf	___awdiv@divisor,c
  5878  00171A  ECE0  F012         	call	___awdiv	;wreg free
  5879  00171E  501E               	movf	?___awdiv,w,c
  5880  001720  0F30               	addlw	48
  5881  001722  6E28               	movwf	LCD_WriteCharAt@chr,c
  5882  001724  0E03               	movlw	3
  5883  001726  ECBC  F016         	call	_LCD_WriteCharAt
  5884                           
  5885                           ;main.c: 235: LCD_WriteCharAt(3, 14, 0x30 + minCnt % 10);
  5886  00172A  0100               	movlb	0	; () banked
  5887  00172C  6F60               	movwf	??_setExamTime& (0+255),b
  5888  00172E  0E0E               	movlw	14
  5889  001730  6E27               	movwf	LCD_WriteCharAt@column,c
  5890  001732  0100               	movlb	0	; () banked
  5891  001734  5160               	movf	??_setExamTime& (0+255),w,b
  5892  001736  0100               	movlb	0	; () banked
  5893  001738  C0FF  F01E         	movff	_minCnt,___awmod@dividend
  5894  00173C  6A1F               	clrf	___awmod@dividend+1,c
  5895  00173E  0E00               	movlw	0
  5896  001740  6E21               	movwf	___awmod@divisor+1,c
  5897  001742  0E0A               	movlw	10
  5898  001744  6E20               	movwf	___awmod@divisor,c
  5899  001746  EC7E  F014         	call	___awmod	;wreg free
  5900  00174A  501E               	movf	?___awmod,w,c
  5901  00174C  0F30               	addlw	48
  5902  00174E  6E28               	movwf	LCD_WriteCharAt@chr,c
  5903  001750  0E03               	movlw	3
  5904  001752  ECBC  F016         	call	_LCD_WriteCharAt
  5905                           
  5906                           ;main.c: 236: LCD_WriteCharAt(2, 14, 01);
  5907  001756  0100               	movlb	0	; () banked
  5908  001758  6F60               	movwf	??_setExamTime& (0+255),b
  5909  00175A  0E0E               	movlw	14
  5910  00175C  6E27               	movwf	LCD_WriteCharAt@column,c
  5911  00175E  0100               	movlb	0	; () banked
  5912  001760  5160               	movf	??_setExamTime& (0+255),w,b
  5913  001762  0100               	movlb	0	; () banked
  5914  001764  6F61               	movwf	(??_setExamTime+1)& (0+255),b
  5915  001766  0E01               	movlw	1
  5916  001768  6E28               	movwf	LCD_WriteCharAt@chr,c
  5917  00176A  0100               	movlb	0	; () banked
  5918  00176C  5161               	movf	(??_setExamTime+1)& (0+255),w,b
  5919  00176E  0E02               	movlw	2
  5920  001770  ECBC  F016         	call	_LCD_WriteCharAt
  5921                           
  5922                           ;main.c: 237: LCD_WriteCommand(0x0D);
  5923  001774  0E0D               	movlw	13
  5924  001776  ECFF  F00E         	call	_LCD_WriteCommand
  5925  00177A                     l5598:
  5926                           
  5927                           ;main.c: 241: LCD_WriteCharAt(2, 13, 0x30 + hourCnt);
  5928  00177A  0100               	movlb	0	; () banked
  5929  00177C  6F60               	movwf	??_setExamTime& (0+255),b
  5930  00177E  0E0D               	movlw	13
  5931  001780  6E27               	movwf	LCD_WriteCharAt@column,c
  5932  001782  0100               	movlb	0	; () banked
  5933  001784  5160               	movf	??_setExamTime& (0+255),w,b
  5934  001786  0100               	movlb	0	; () banked
  5935  001788  0100               	movlb	0	; () banked
  5936  00178A  51FE               	movf	_hourCnt& (0+255),w,b
  5937  00178C  0F30               	addlw	48
  5938  00178E  6E28               	movwf	LCD_WriteCharAt@chr,c
  5939  001790  0E02               	movlw	2
  5940  001792  ECBC  F016         	call	_LCD_WriteCharAt
  5941                           
  5942                           ;main.c: 242: KEY_BUFFER = readKey();
  5943  001796  EC30  F014         	call	_readKey	;wreg free
  5944  00179A  0101               	movlb	1	; () banked
  5945  00179C  0101               	movlb	1	; () banked
  5946  00179E  6F85               	movwf	_KEY_BUFFER& (0+255),b
  5947                           
  5948                           ; BSR set to: 1
  5949                           ;main.c: 243: if (KEY_BUFFER == 0x22) {
  5950  0017A0  0101               	movlb	1	; () banked
  5951  0017A2  0101               	movlb	1	; () banked
  5952  0017A4  5185               	movf	_KEY_BUFFER& (0+255),w,b
  5953  0017A6  0A22               	xorlw	34
  5954  0017A8  A4D8               	btfss	status,2,c
  5955  0017AA  D00F               	goto	l5606
  5956                           
  5957                           ; BSR set to: 1
  5958                           ;main.c: 244: hourCnt = (hourCnt + 1) % 10;
  5959  0017AC  0E01               	movlw	1
  5960  0017AE  0100               	movlb	0	; () banked
  5961  0017B0  0100               	movlb	0	; () banked
  5962  0017B2  25FE               	addwf	_hourCnt& (0+255),w,b
  5963  0017B4  6E1E               	movwf	___awmod@dividend,c
  5964  0017B6  6A1F               	clrf	___awmod@dividend+1,c
  5965  0017B8  0E00               	movlw	0
  5966  0017BA  221F               	addwfc	___awmod@dividend+1,f,c
  5967  0017BC  0E00               	movlw	0
  5968  0017BE  6E21               	movwf	___awmod@divisor+1,c
  5969  0017C0  0E0A               	movlw	10
  5970  0017C2  6E20               	movwf	___awmod@divisor,c
  5971  0017C4  EC7E  F014         	call	___awmod	;wreg free
  5972  0017C8  D021               	goto	L12
  5973  0017CA                     l5606:
  5974  0017CA  0101               	movlb	1	; () banked
  5975  0017CC  0101               	movlb	1	; () banked
  5976  0017CE  5185               	movf	_KEY_BUFFER& (0+255),w,b
  5977  0017D0  0A28               	xorlw	40
  5978  0017D2  A4D8               	btfss	status,2,c
  5979  0017D4  D020               	goto	l5614
  5980                           
  5981                           ; BSR set to: 1
  5982                           ;main.c: 246: if (hourCnt == 0)
  5983  0017D6  0100               	movlb	0	; () banked
  5984  0017D8  0100               	movlb	0	; () banked
  5985  0017DA  67FE               	tstfsz	_hourCnt& (0+255),b
  5986  0017DC  D009               	goto	l5612
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;main.c: 247: hourCnt = 9;
  5990  0017DE  0100               	movlb	0	; () banked
  5991  0017E0  6F60               	movwf	??_setExamTime& (0+255),b
  5992  0017E2  0E09               	movlw	9
  5993  0017E4  0100               	movlb	0	; () banked
  5994  0017E6  0100               	movlb	0	; () banked
  5995  0017E8  6FFE               	movwf	_hourCnt& (0+255),b
  5996  0017EA  0100               	movlb	0	; () banked
  5997  0017EC  5160               	movf	??_setExamTime& (0+255),w,b
  5998  0017EE  D7C5               	goto	l5598
  5999  0017F0                     l5612:
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;main.c: 248: else
  6003                           ;main.c: 249: hourCnt = (hourCnt - 1) % 10;
  6004  0017F0  0EFF               	movlw	255
  6005  0017F2  0100               	movlb	0	; () banked
  6006  0017F4  0100               	movlb	0	; () banked
  6007  0017F6  25FE               	addwf	_hourCnt& (0+255),w,b
  6008  0017F8  6E1E               	movwf	___awmod@dividend,c
  6009  0017FA  6A1F               	clrf	___awmod@dividend+1,c
  6010  0017FC  0EFF               	movlw	255
  6011  0017FE  221F               	addwfc	___awmod@dividend+1,f,c
  6012  001800  0E00               	movlw	0
  6013  001802  6E21               	movwf	___awmod@divisor+1,c
  6014  001804  0E0A               	movlw	10
  6015  001806  6E20               	movwf	___awmod@divisor,c
  6016  001808  EC7E  F014         	call	___awmod	;wreg free
  6017  00180C                     L12:
  6018  00180C  501E               	movf	?___awmod,w,c
  6019  00180E  0100               	movlb	0	; () banked
  6020  001810  0100               	movlb	0	; () banked
  6021  001812  6FFE               	movwf	_hourCnt& (0+255),b
  6022  001814  D7B2               	goto	l5598
  6023  001816                     l5614:
  6024  001816  0101               	movlb	1	; () banked
  6025  001818  0101               	movlb	1	; () banked
  6026  00181A  5185               	movf	_KEY_BUFFER& (0+255),w,b
  6027  00181C  0A12               	xorlw	18
  6028  00181E  A4D8               	btfss	status,2,c
  6029  001820  D7AC               	goto	l5598
  6030  001822                     l5618:
  6031                           
  6032                           ;main.c: 257: LCD_WriteCharAt(3, 13, 0x30 + minCnt / 10);
  6033  001822  0100               	movlb	0	; () banked
  6034  001824  6F60               	movwf	??_setExamTime& (0+255),b
  6035  001826  0E0D               	movlw	13
  6036  001828  6E27               	movwf	LCD_WriteCharAt@column,c
  6037  00182A  0100               	movlb	0	; () banked
  6038  00182C  5160               	movf	??_setExamTime& (0+255),w,b
  6039  00182E  0100               	movlb	0	; () banked
  6040  001830  C0FF  F01E         	movff	_minCnt,___awdiv@dividend
  6041  001834  6A1F               	clrf	___awdiv@dividend+1,c
  6042  001836  0E00               	movlw	0
  6043  001838  6E21               	movwf	___awdiv@divisor+1,c
  6044  00183A  0E0A               	movlw	10
  6045  00183C  6E20               	movwf	___awdiv@divisor,c
  6046  00183E  ECE0  F012         	call	___awdiv	;wreg free
  6047  001842  501E               	movf	?___awdiv,w,c
  6048  001844  0F30               	addlw	48
  6049  001846  6E28               	movwf	LCD_WriteCharAt@chr,c
  6050  001848  0E03               	movlw	3
  6051  00184A  ECBC  F016         	call	_LCD_WriteCharAt
  6052                           
  6053                           ;main.c: 258: LCD_WriteCharAt(3, 14, 0x30 + minCnt % 10);
  6054  00184E  0100               	movlb	0	; () banked
  6055  001850  6F60               	movwf	??_setExamTime& (0+255),b
  6056  001852  0E0E               	movlw	14
  6057  001854  6E27               	movwf	LCD_WriteCharAt@column,c
  6058  001856  0100               	movlb	0	; () banked
  6059  001858  5160               	movf	??_setExamTime& (0+255),w,b
  6060  00185A  0100               	movlb	0	; () banked
  6061  00185C  C0FF  F01E         	movff	_minCnt,___awmod@dividend
  6062  001860  6A1F               	clrf	___awmod@dividend+1,c
  6063  001862  0E00               	movlw	0
  6064  001864  6E21               	movwf	___awmod@divisor+1,c
  6065  001866  0E0A               	movlw	10
  6066  001868  6E20               	movwf	___awmod@divisor,c
  6067  00186A  EC7E  F014         	call	___awmod	;wreg free
  6068  00186E  501E               	movf	?___awmod,w,c
  6069  001870  0F30               	addlw	48
  6070  001872  6E28               	movwf	LCD_WriteCharAt@chr,c
  6071  001874  0E03               	movlw	3
  6072  001876  ECBC  F016         	call	_LCD_WriteCharAt
  6073                           
  6074                           ;main.c: 260: KEY_BUFFER = readKey();
  6075  00187A  EC30  F014         	call	_readKey	;wreg free
  6076  00187E  0101               	movlb	1	; () banked
  6077  001880  0101               	movlb	1	; () banked
  6078  001882  6F85               	movwf	_KEY_BUFFER& (0+255),b
  6079                           
  6080                           ; BSR set to: 1
  6081                           ;main.c: 261: if (KEY_BUFFER == 0x22) {
  6082  001884  0101               	movlb	1	; () banked
  6083  001886  0101               	movlb	1	; () banked
  6084  001888  5185               	movf	_KEY_BUFFER& (0+255),w,b
  6085  00188A  0A22               	xorlw	34
  6086  00188C  A4D8               	btfss	status,2,c
  6087  00188E  D00F               	goto	l5626
  6088                           
  6089                           ; BSR set to: 1
  6090                           ;main.c: 262: minCnt = (minCnt + 1) % 60;
  6091  001890  0E01               	movlw	1
  6092  001892  0100               	movlb	0	; () banked
  6093  001894  0100               	movlb	0	; () banked
  6094  001896  25FF               	addwf	_minCnt& (0+255),w,b
  6095  001898  6E1E               	movwf	___awmod@dividend,c
  6096  00189A  6A1F               	clrf	___awmod@dividend+1,c
  6097  00189C  0E00               	movlw	0
  6098  00189E  221F               	addwfc	___awmod@dividend+1,f,c
  6099  0018A0  0E00               	movlw	0
  6100  0018A2  6E21               	movwf	___awmod@divisor+1,c
  6101  0018A4  0E3C               	movlw	60
  6102  0018A6  6E20               	movwf	___awmod@divisor,c
  6103  0018A8  EC7E  F014         	call	___awmod	;wreg free
  6104  0018AC  D021               	goto	L13
  6105  0018AE                     l5626:
  6106  0018AE  0101               	movlb	1	; () banked
  6107  0018B0  0101               	movlb	1	; () banked
  6108  0018B2  5185               	movf	_KEY_BUFFER& (0+255),w,b
  6109  0018B4  0A28               	xorlw	40
  6110  0018B6  A4D8               	btfss	status,2,c
  6111  0018B8  D020               	goto	l5634
  6112                           
  6113                           ; BSR set to: 1
  6114                           ;main.c: 264: if (minCnt == 0)
  6115  0018BA  0100               	movlb	0	; () banked
  6116  0018BC  0100               	movlb	0	; () banked
  6117  0018BE  67FF               	tstfsz	_minCnt& (0+255),b
  6118  0018C0  D009               	goto	l5632
  6119                           
  6120                           ; BSR set to: 0
  6121                           ;main.c: 265: minCnt = 59;
  6122  0018C2  0100               	movlb	0	; () banked
  6123  0018C4  6F60               	movwf	??_setExamTime& (0+255),b
  6124  0018C6  0E3B               	movlw	59
  6125  0018C8  0100               	movlb	0	; () banked
  6126  0018CA  0100               	movlb	0	; () banked
  6127  0018CC  6FFF               	movwf	_minCnt& (0+255),b
  6128  0018CE  0100               	movlb	0	; () banked
  6129  0018D0  5160               	movf	??_setExamTime& (0+255),w,b
  6130  0018D2  D7A7               	goto	l5618
  6131  0018D4                     l5632:
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;main.c: 266: else
  6135                           ;main.c: 267: minCnt = (minCnt - 1) % 60;
  6136  0018D4  0EFF               	movlw	255
  6137  0018D6  0100               	movlb	0	; () banked
  6138  0018D8  0100               	movlb	0	; () banked
  6139  0018DA  25FF               	addwf	_minCnt& (0+255),w,b
  6140  0018DC  6E1E               	movwf	___awmod@dividend,c
  6141  0018DE  6A1F               	clrf	___awmod@dividend+1,c
  6142  0018E0  0EFF               	movlw	255
  6143  0018E2  221F               	addwfc	___awmod@dividend+1,f,c
  6144  0018E4  0E00               	movlw	0
  6145  0018E6  6E21               	movwf	___awmod@divisor+1,c
  6146  0018E8  0E3C               	movlw	60
  6147  0018EA  6E20               	movwf	___awmod@divisor,c
  6148  0018EC  EC7E  F014         	call	___awmod	;wreg free
  6149  0018F0                     L13:
  6150  0018F0  501E               	movf	?___awmod,w,c
  6151  0018F2  0100               	movlb	0	; () banked
  6152  0018F4  0100               	movlb	0	; () banked
  6153  0018F6  6FFF               	movwf	_minCnt& (0+255),b
  6154  0018F8  D794               	goto	l5618
  6155  0018FA                     l5634:
  6156  0018FA  0101               	movlb	1	; () banked
  6157  0018FC  0101               	movlb	1	; () banked
  6158  0018FE  5185               	movf	_KEY_BUFFER& (0+255),w,b
  6159  001900  0A12               	xorlw	18
  6160  001902  A4D8               	btfss	status,2,c
  6161  001904  D78E               	goto	l5618
  6162                           
  6163                           ; BSR set to: 1
  6164                           ;main.c: 270: }
  6165                           ;main.c: 271: }
  6166                           ;main.c: 274: LCD_WriteCommand(0x0C);
  6167                           
  6168                           ; BSR set to: 1
  6169                           
  6170                           ; BSR set to: 1
  6171                           
  6172                           ; BSR set to: 1
  6173                           
  6174                           ; BSR set to: 1
  6175                           
  6176                           ; BSR set to: 1
  6177                           
  6178                           ; BSR set to: 1
  6179                           ;main.c: 269: break;
  6180  001906  0E0C               	movlw	12
  6181  001908  ECFF  F00E         	call	_LCD_WriteCommand
  6182                           
  6183                           ;main.c: 275: return;
  6184  00190C  0012               	return	
  6185  00190E                     __end_of_setExamTime:
  6186                           	opt stack 0
  6187                           tblptru	equ	0xFF8
  6188                           tblptrh	equ	0xFF7
  6189                           tblptrl	equ	0xFF6
  6190                           tablat	equ	0xFF5
  6191                           prodl	equ	0xFF3
  6192                           intcon	equ	0xFF2
  6193                           postinc0	equ	0xFEE
  6194                           wreg	equ	0xFE8
  6195                           postinc1	equ	0xFE6
  6196                           postdec1	equ	0xFE5
  6197                           fsr1l	equ	0xFE1
  6198                           indf2	equ	0xFDF
  6199                           postinc2	equ	0xFDE
  6200                           fsr2h	equ	0xFDA
  6201                           fsr2l	equ	0xFD9
  6202                           status	equ	0xFD8
  6203                           
  6204 ;; *************** function _setExamMCQ *****************
  6205 ;; Defined at:
  6206 ;;		line 283 in file "main.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;		None
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  txt1_1         18    0[BANK0 ] unsigned char [18]
  6211 ;;  txt1_2         16   18[BANK0 ] unsigned char [16]
  6212 ;; Return value:  Size  Location     Type
  6213 ;;		None               void
  6214 ;; Registers used:
  6215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6221 ;;      Params:         0       0       0       0       0       0       0       0       0
  6222 ;;      Locals:         0      34       0       0       0       0       0       0       0
  6223 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6224 ;;      Totals:         1      34       0       0       0       0       0       0       0
  6225 ;;Total ram usage:       35 bytes
  6226 ;; Hardware stack levels used:    1
  6227 ;; Hardware stack levels required when called:    7
  6228 ;; This function calls:
  6229 ;;		_LCD_WriteCharAt
  6230 ;;		_LCD_WriteCommand
  6231 ;;		_LCD_WriteStringAt
  6232 ;;		___awdiv
  6233 ;;		___awmod
  6234 ;;		_readKey
  6235 ;; This function is called by:
  6236 ;;		_examSetup
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           	psect	text20
  6241  0022BE                     __ptext20:
  6242                           	opt stack 0
  6243  0022BE                     _setExamMCQ:
  6244                           	opt stack 22
  6245                           
  6246                           ;main.c: 284: char txt1_1[] = "Set the number of";
  6247                           
  6248                           ;incstack = 0
  6249  0022BE  EE22  F0C9         	lfsr	2,setExamMCQ@F5372
  6250  0022C2  EE10  F060         	lfsr	1,setExamMCQ@txt1_1
  6251  0022C6  0E12               	movlw	18
  6252  0022C8                     u5191:
  6253  0022C8  CFDE FFE6          	movff	postinc2,postinc1
  6254  0022CC  2EE8               	decfsz	wreg,f,c
  6255  0022CE  D7FC               	goto	u5191
  6256                           
  6257                           ;main.c: 285: char txt1_2[] = "MCQ questions: ";
  6258  0022D0  EE21  F056         	lfsr	2,setExamMCQ@F5374
  6259  0022D4  EE10  F072         	lfsr	1,setExamMCQ@txt1_2
  6260  0022D8  0E10               	movlw	16
  6261  0022DA                     u5201:
  6262  0022DA  CFDE FFE6          	movff	postinc2,postinc1
  6263  0022DE  2EE8               	decfsz	wreg,f,c
  6264  0022E0  D7FC               	goto	u5201
  6265                           
  6266                           ;main.c: 288: LCD_WriteCommand(0x01);
  6267  0022E2  0E01               	movlw	1
  6268  0022E4  ECFF  F00E         	call	_LCD_WriteCommand
  6269                           
  6270                           ;main.c: 289: LCD_WriteStringAt(1, 1, txt1_1);
  6271  0022E8  6E2B               	movwf	??_setExamMCQ& (0+255),c
  6272  0022EA  0E01               	movlw	1
  6273  0022EC  6E23               	movwf	LCD_WriteStringAt@column,c
  6274  0022EE  502B               	movf	??_setExamMCQ& (0+255),w,c
  6275  0022F0  0100               	movlb	0	; () banked
  6276  0022F2  0E00               	movlw	high setExamMCQ@txt1_1
  6277  0022F4  6E25               	movwf	LCD_WriteStringAt@string+1,c
  6278  0022F6  0100               	movlb	0	; () banked
  6279  0022F8  0E60               	movlw	low setExamMCQ@txt1_1
  6280  0022FA  6E24               	movwf	LCD_WriteStringAt@string,c
  6281  0022FC  0E01               	movlw	1
  6282  0022FE  EC1A  F015         	call	_LCD_WriteStringAt
  6283                           
  6284                           ;main.c: 290: LCD_WriteStringAt(2, 1, txt1_2);
  6285  002302  6E2B               	movwf	??_setExamMCQ& (0+255),c
  6286  002304  0E01               	movlw	1
  6287  002306  6E23               	movwf	LCD_WriteStringAt@column,c
  6288  002308  502B               	movf	??_setExamMCQ& (0+255),w,c
  6289  00230A  0100               	movlb	0	; () banked
  6290  00230C  0E00               	movlw	high setExamMCQ@txt1_2
  6291  00230E  6E25               	movwf	LCD_WriteStringAt@string+1,c
  6292  002310  0100               	movlb	0	; () banked
  6293  002312  0E72               	movlw	low setExamMCQ@txt1_2
  6294  002314  6E24               	movwf	LCD_WriteStringAt@string,c
  6295  002316  0E02               	movlw	2
  6296  002318  EC1A  F015         	call	_LCD_WriteStringAt
  6297                           
  6298                           ;main.c: 291: LCD_WriteCommand(0x0D);
  6299  00231C  0E0D               	movlw	13
  6300  00231E  ECFF  F00E         	call	_LCD_WriteCommand
  6301  002322                     l5652:
  6302                           
  6303                           ;main.c: 295: LCD_WriteCharAt(2, 16, 0x30 + MCQCnt / 10);
  6304  002322  6E2B               	movwf	??_setExamMCQ& (0+255),c
  6305  002324  0E10               	movlw	16
  6306  002326  6E27               	movwf	LCD_WriteCharAt@column,c
  6307  002328  502B               	movf	??_setExamMCQ& (0+255),w,c
  6308  00232A  0100               	movlb	0	; () banked
  6309  00232C  C0FD  F01E         	movff	_MCQCnt,___awdiv@dividend
  6310  002330  6A1F               	clrf	___awdiv@dividend+1,c
  6311  002332  0E00               	movlw	0
  6312  002334  6E21               	movwf	___awdiv@divisor+1,c
  6313  002336  0E0A               	movlw	10
  6314  002338  6E20               	movwf	___awdiv@divisor,c
  6315  00233A  ECE0  F012         	call	___awdiv	;wreg free
  6316  00233E  501E               	movf	?___awdiv,w,c
  6317  002340  0F30               	addlw	48
  6318  002342  6E28               	movwf	LCD_WriteCharAt@chr,c
  6319  002344  0E02               	movlw	2
  6320  002346  ECBC  F016         	call	_LCD_WriteCharAt
  6321                           
  6322                           ;main.c: 296: LCD_WriteCharAt(2, 17, 0x30 + MCQCnt % 10);
  6323  00234A  6E2B               	movwf	??_setExamMCQ& (0+255),c
  6324  00234C  0E11               	movlw	17
  6325  00234E  6E27               	movwf	LCD_WriteCharAt@column,c
  6326  002350  502B               	movf	??_setExamMCQ& (0+255),w,c
  6327  002352  0100               	movlb	0	; () banked
  6328  002354  C0FD  F01E         	movff	_MCQCnt,___awmod@dividend
  6329  002358  6A1F               	clrf	___awmod@dividend+1,c
  6330  00235A  0E00               	movlw	0
  6331  00235C  6E21               	movwf	___awmod@divisor+1,c
  6332  00235E  0E0A               	movlw	10
  6333  002360  6E20               	movwf	___awmod@divisor,c
  6334  002362  EC7E  F014         	call	___awmod	;wreg free
  6335  002366  501E               	movf	?___awmod,w,c
  6336  002368  0F30               	addlw	48
  6337  00236A  6E28               	movwf	LCD_WriteCharAt@chr,c
  6338  00236C  0E02               	movlw	2
  6339  00236E  ECBC  F016         	call	_LCD_WriteCharAt
  6340                           
  6341                           ;main.c: 297: LCD_WriteCommand(0x0D);
  6342  002372  0E0D               	movlw	13
  6343  002374  ECFF  F00E         	call	_LCD_WriteCommand
  6344                           
  6345                           ;main.c: 299: KEY_BUFFER = readKey();
  6346  002378  EC30  F014         	call	_readKey	;wreg free
  6347  00237C  0101               	movlb	1	; () banked
  6348  00237E  0101               	movlb	1	; () banked
  6349  002380  6F85               	movwf	_KEY_BUFFER& (0+255),b
  6350                           
  6351                           ; BSR set to: 1
  6352                           ;main.c: 300: if (KEY_BUFFER == 0x22) {
  6353  002382  0101               	movlb	1	; () banked
  6354  002384  0101               	movlb	1	; () banked
  6355  002386  5185               	movf	_KEY_BUFFER& (0+255),w,b
  6356  002388  0A22               	xorlw	34
  6357  00238A  A4D8               	btfss	status,2,c
  6358  00238C  D004               	goto	l5664
  6359                           
  6360                           ; BSR set to: 1
  6361                           ;main.c: 301: MCQCnt = (MCQCnt + 1);
  6362  00238E  0100               	movlb	0	; () banked
  6363  002390  0100               	movlb	0	; () banked
  6364  002392  29FD               	incf	_MCQCnt& (0+255),w,b
  6365  002394  D014               	goto	L14
  6366  002396                     l5664:
  6367  002396  0101               	movlb	1	; () banked
  6368  002398  0101               	movlb	1	; () banked
  6369  00239A  5185               	movf	_KEY_BUFFER& (0+255),w,b
  6370  00239C  0A28               	xorlw	40
  6371  00239E  A4D8               	btfss	status,2,c
  6372  0023A0  D012               	goto	l5672
  6373                           
  6374                           ; BSR set to: 1
  6375                           ;main.c: 303: if (MCQCnt == 0)
  6376  0023A2  0100               	movlb	0	; () banked
  6377  0023A4  0100               	movlb	0	; () banked
  6378  0023A6  67FD               	tstfsz	_MCQCnt& (0+255),b
  6379  0023A8  D007               	goto	l5670
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;main.c: 304: MCQCnt = 0;
  6383  0023AA  6E2B               	movwf	??_setExamMCQ& (0+255),c
  6384  0023AC  0E00               	movlw	0
  6385  0023AE  0100               	movlb	0	; () banked
  6386  0023B0  0100               	movlb	0	; () banked
  6387  0023B2  6FFD               	movwf	_MCQCnt& (0+255),b
  6388  0023B4  502B               	movf	??_setExamMCQ& (0+255),w,c
  6389  0023B6  D7B5               	goto	l5652
  6390  0023B8                     l5670:
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;main.c: 305: else
  6394                           ;main.c: 306: MCQCnt = (MCQCnt - 1);
  6395  0023B8  0100               	movlb	0	; () banked
  6396  0023BA  0100               	movlb	0	; () banked
  6397  0023BC  05FD               	decf	_MCQCnt& (0+255),w,b
  6398  0023BE                     L14:
  6399  0023BE  0100               	movlb	0	; () banked
  6400  0023C0  0100               	movlb	0	; () banked
  6401  0023C2  6FFD               	movwf	_MCQCnt& (0+255),b
  6402  0023C4  D7AE               	goto	l5652
  6403  0023C6                     l5672:
  6404  0023C6  0101               	movlb	1	; () banked
  6405  0023C8  0101               	movlb	1	; () banked
  6406  0023CA  5185               	movf	_KEY_BUFFER& (0+255),w,b
  6407  0023CC  0A12               	xorlw	18
  6408  0023CE  A4D8               	btfss	status,2,c
  6409  0023D0  D7A8               	goto	l5652
  6410                           
  6411                           ; BSR set to: 1
  6412                           ;main.c: 309: }
  6413                           ;main.c: 310: }
  6414                           ;main.c: 312: LCD_WriteCommand(0x0C);
  6415                           
  6416                           ; BSR set to: 1
  6417                           
  6418                           ; BSR set to: 1
  6419                           
  6420                           ; BSR set to: 1
  6421                           
  6422                           ; BSR set to: 1
  6423                           
  6424                           ; BSR set to: 1
  6425                           
  6426                           ; BSR set to: 1
  6427                           ;main.c: 308: break;
  6428  0023D2  0E0C               	movlw	12
  6429  0023D4  ECFF  F00E         	call	_LCD_WriteCommand
  6430  0023D8  0012               	return	
  6431  0023DA                     __end_of_setExamMCQ:
  6432                           	opt stack 0
  6433                           tblptru	equ	0xFF8
  6434                           tblptrh	equ	0xFF7
  6435                           tblptrl	equ	0xFF6
  6436                           tablat	equ	0xFF5
  6437                           prodl	equ	0xFF3
  6438                           intcon	equ	0xFF2
  6439                           postinc0	equ	0xFEE
  6440                           wreg	equ	0xFE8
  6441                           postinc1	equ	0xFE6
  6442                           postdec1	equ	0xFE5
  6443                           fsr1l	equ	0xFE1
  6444                           indf2	equ	0xFDF
  6445                           postinc2	equ	0xFDE
  6446                           fsr2h	equ	0xFDA
  6447                           fsr2l	equ	0xFD9
  6448                           status	equ	0xFD8
  6449                           
  6450 ;; *************** function _readKey *****************
  6451 ;; Defined at:
  6452 ;;		line 812 in file "main.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;		None
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;  row_cntr        1   35[COMRAM] unsigned char 
  6457 ;;  key             1   34[COMRAM] unsigned char 
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      unsigned char 
  6460 ;; Registers used:
  6461 ;;		wreg, status,2, status,0, cstack
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6467 ;;      Params:         0       0       0       0       0       0       0       0       0
  6468 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6469 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6470 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6471 ;;Total ram usage:        3 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:    5
  6474 ;; This function calls:
  6475 ;;		_Delay_100ms
  6476 ;; This function is called by:
  6477 ;;		_examSetup
  6478 ;;		_setExamTime
  6479 ;;		_setExamMCQ
  6480 ;;		_startExam
  6481 ;;		_runPaper
  6482 ;;		_subMenu
  6483 ;;		_view_answers
  6484 ;;		_get_yes_no
  6485 ;;		_readAnswer
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           	psect	text21
  6490  002860                     __ptext21:
  6491                           	opt stack 0
  6492  002860                     _readKey:
  6493                           	opt stack 20
  6494                           
  6495                           ;main.c: 813: PORTB = 0X0F;
  6496                           
  6497                           ;incstack = 0
  6498  002860  0E0F               	movlw	15
  6499  002862  6E81               	movwf	3969,c	;volatile
  6500  002864                     l4926:
  6501  002864  5081               	movf	3969,w,c	;volatile
  6502  002866  0A0F               	xorlw	15
  6503  002868  B4D8               	btfsc	status,2,c
  6504  00286A  D7FC               	goto	l4926
  6505                           
  6506                           ;main.c: 816: unsigned char row_cntr, key;
  6507                           ;main.c: 817: for (row_cntr = 1; row_cntr < 9; row_cntr <<= 1) {
  6508  00286C  6E22               	movwf	??_readKey& (0+255),c
  6509  00286E  0E01               	movlw	1
  6510  002870  6E24               	movwf	readKey@row_cntr,c
  6511  002872  5022               	movf	??_readKey& (0+255),w,c
  6512  002874  D03E               	goto	L15
  6513  002876                     l472:
  6514                           
  6515                           ;main.c: 818: PORTB = row_cntr;
  6516  002876  C024  FF81         	movff	readKey@row_cntr,3969	;volatile
  6517                           
  6518                           ;main.c: 819: if (PORTB == 0x11 || PORTB == 0x14 || PORTB == 0x22
  6519                           ;main.c: 820: || PORTB == 0x21 || PORTB == 0x24
  6520                           ;main.c: 821: || PORTB == 0x28 || PORTB == 0x41 || PORTB == 0x42
  6521                           ;main.c: 822: || PORTB == 0x44 || PORTB == 0x48 || PORTB == 0x81
  6522                           ;main.c: 823: || PORTB == 0x12) {
  6523  00287A  5081               	movf	3969,w,c	;volatile
  6524  00287C  0A11               	xorlw	17
  6525  00287E  B4D8               	btfsc	status,2,c
  6526  002880  D02C               	goto	l476
  6527  002882  5081               	movf	3969,w,c	;volatile
  6528  002884  0A14               	xorlw	20
  6529  002886  B4D8               	btfsc	status,2,c
  6530  002888  D028               	goto	l476
  6531  00288A  5081               	movf	3969,w,c	;volatile
  6532  00288C  0A22               	xorlw	34
  6533  00288E  B4D8               	btfsc	status,2,c
  6534  002890  D024               	goto	l476
  6535  002892  5081               	movf	3969,w,c	;volatile
  6536  002894  0A21               	xorlw	33
  6537  002896  B4D8               	btfsc	status,2,c
  6538  002898  D020               	goto	l476
  6539  00289A  5081               	movf	3969,w,c	;volatile
  6540  00289C  0A24               	xorlw	36
  6541  00289E  B4D8               	btfsc	status,2,c
  6542  0028A0  D01C               	goto	l476
  6543  0028A2  5081               	movf	3969,w,c	;volatile
  6544  0028A4  0A28               	xorlw	40
  6545  0028A6  B4D8               	btfsc	status,2,c
  6546  0028A8  D018               	goto	l476
  6547  0028AA  5081               	movf	3969,w,c	;volatile
  6548  0028AC  0A41               	xorlw	65
  6549  0028AE  B4D8               	btfsc	status,2,c
  6550  0028B0  D014               	goto	l476
  6551  0028B2  5081               	movf	3969,w,c	;volatile
  6552  0028B4  0A42               	xorlw	66
  6553  0028B6  B4D8               	btfsc	status,2,c
  6554  0028B8  D010               	goto	l476
  6555  0028BA  5081               	movf	3969,w,c	;volatile
  6556  0028BC  0A44               	xorlw	68
  6557  0028BE  B4D8               	btfsc	status,2,c
  6558  0028C0  D00C               	goto	l476
  6559  0028C2  5081               	movf	3969,w,c	;volatile
  6560  0028C4  0A48               	xorlw	72
  6561  0028C6  B4D8               	btfsc	status,2,c
  6562  0028C8  D008               	goto	l476
  6563  0028CA  5081               	movf	3969,w,c	;volatile
  6564  0028CC  0A81               	xorlw	129
  6565  0028CE  B4D8               	btfsc	status,2,c
  6566  0028D0  D004               	goto	l476
  6567  0028D2  5081               	movf	3969,w,c	;volatile
  6568  0028D4  0A12               	xorlw	18
  6569  0028D6  A4D8               	btfss	status,2,c
  6570  0028D8  D00A               	goto	l4964
  6571  0028DA                     l476:
  6572                           
  6573                           ;main.c: 825: key = PORTB;
  6574  0028DA  CF81 F023          	movff	3969,readKey@key	;volatile
  6575                           
  6576                           ;main.c: 826: Delay_100ms();
  6577  0028DE  EC22  F017         	call	_Delay_100ms	;wreg free
  6578                           
  6579                           ;main.c: 827: Delay_100ms();
  6580  0028E2  EC22  F017         	call	_Delay_100ms	;wreg free
  6581                           
  6582                           ;main.c: 828: Delay_100ms();
  6583  0028E6  EC22  F017         	call	_Delay_100ms	;wreg free
  6584                           
  6585                           ;main.c: 830: return key;
  6586  0028EA  5023               	movf	readKey@key,w,c
  6587  0028EC  D006               	goto	l477
  6588  0028EE                     l4964:
  6589  0028EE  90D8               	bcf	status,0,c
  6590  0028F0  3624               	rlcf	readKey@row_cntr,f,c
  6591  0028F2                     L15:
  6592  0028F2  0E08               	movlw	8
  6593  0028F4  6424               	cpfsgt	readKey@row_cntr,c
  6594  0028F6  D7BF               	goto	l472
  6595                           
  6596                           ;main.c: 831: }
  6597                           ;main.c: 832: }
  6598                           ;main.c: 833: return 0;
  6599  0028F8  0E00               	movlw	0
  6600  0028FA                     l477:
  6601  0028FA  0012               	return	
  6602  0028FC                     __end_of_readKey:
  6603                           	opt stack 0
  6604                           tblptru	equ	0xFF8
  6605                           tblptrh	equ	0xFF7
  6606                           tblptrl	equ	0xFF6
  6607                           tablat	equ	0xFF5
  6608                           prodl	equ	0xFF3
  6609                           intcon	equ	0xFF2
  6610                           postinc0	equ	0xFEE
  6611                           wreg	equ	0xFE8
  6612                           postinc1	equ	0xFE6
  6613                           postdec1	equ	0xFE5
  6614                           fsr1l	equ	0xFE1
  6615                           indf2	equ	0xFDF
  6616                           postinc2	equ	0xFDE
  6617                           fsr2h	equ	0xFDA
  6618                           fsr2l	equ	0xFD9
  6619                           status	equ	0xFD8
  6620                           
  6621 ;; *************** function _Delay_100ms *****************
  6622 ;; Defined at:
  6623 ;;		line 84 in file "MyDelays.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;		None
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;  r1              2   31[COMRAM] unsigned short 
  6628 ;;  r0              2   29[COMRAM] unsigned short 
  6629 ;; Return value:  Size  Location     Type
  6630 ;;		None               void
  6631 ;; Registers used:
  6632 ;;		wreg, status,2, status,0
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6638 ;;      Params:         0       0       0       0       0       0       0       0       0
  6639 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6641 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6642 ;;Total ram usage:        4 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:    4
  6645 ;; This function calls:
  6646 ;;		Nothing
  6647 ;; This function is called by:
  6648 ;;		_runPaper
  6649 ;;		_getBeep
  6650 ;;		_get_yes_no
  6651 ;;		_readKey
  6652 ;;		_powerOnScreen
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           	psect	text22
  6657  002E44                     __ptext22:
  6658                           	opt stack 0
  6659  002E44                     _Delay_100ms:
  6660                           	opt stack 20
  6661                           
  6662                           ;MyDelays.c: 104: register unsigned short r0,r1;
  6663                           ;MyDelays.c: 105: r1 = 0;
  6664                           
  6665                           ;incstack = 0
  6666  002E44  0E00               	movlw	0
  6667  002E46  6E21               	movwf	Delay_100ms@r1+1,c
  6668  002E48  0E00               	movlw	0
  6669  002E4A  6E20               	movwf	Delay_100ms@r1,c
  6670                           
  6671                           ;MyDelays.c: 106: while(r1 < 25){
  6672  002E4C  D00F               	goto	l4906
  6673  002E4E                     l4898:
  6674                           
  6675                           ;MyDelays.c: 107: r0 = 0;
  6676  002E4E  0E00               	movlw	0
  6677  002E50  6E1F               	movwf	Delay_100ms@r0+1,c
  6678  002E52  0E00               	movlw	0
  6679  002E54  6E1E               	movwf	Delay_100ms@r0,c
  6680                           
  6681                           ;MyDelays.c: 108: while(r0 < 665)
  6682  002E56  D002               	goto	l4902
  6683  002E58                     l4900:
  6684                           
  6685                           ;MyDelays.c: 109: r0++;
  6686  002E58  4A1E               	infsnz	Delay_100ms@r0,f,c
  6687  002E5A  2A1F               	incf	Delay_100ms@r0+1,f,c
  6688  002E5C                     l4902:
  6689  002E5C  0E99               	movlw	153
  6690  002E5E  5C1E               	subwf	Delay_100ms@r0,w,c
  6691  002E60  0E02               	movlw	2
  6692  002E62  581F               	subwfb	Delay_100ms@r0+1,w,c
  6693  002E64  A0D8               	btfss	status,0,c
  6694  002E66  D7F8               	goto	l4900
  6695                           
  6696                           ;MyDelays.c: 110: r1++;
  6697  002E68  4A20               	infsnz	Delay_100ms@r1,f,c
  6698  002E6A  2A21               	incf	Delay_100ms@r1+1,f,c
  6699  002E6C                     l4906:
  6700  002E6C  0E19               	movlw	25
  6701  002E6E  5C20               	subwf	Delay_100ms@r1,w,c
  6702  002E70  0E00               	movlw	0
  6703  002E72  5821               	subwfb	Delay_100ms@r1+1,w,c
  6704  002E74  B0D8               	btfsc	status,0,c
  6705  002E76  0012               	return	
  6706  002E78  D7EA               	goto	l4898
  6707  002E7A                     __end_of_Delay_100ms:
  6708                           	opt stack 0
  6709                           tblptru	equ	0xFF8
  6710                           tblptrh	equ	0xFF7
  6711                           tblptrl	equ	0xFF6
  6712                           tablat	equ	0xFF5
  6713                           prodl	equ	0xFF3
  6714                           intcon	equ	0xFF2
  6715                           postinc0	equ	0xFEE
  6716                           wreg	equ	0xFE8
  6717                           postinc1	equ	0xFE6
  6718                           postdec1	equ	0xFE5
  6719                           fsr1l	equ	0xFE1
  6720                           indf2	equ	0xFDF
  6721                           postinc2	equ	0xFDE
  6722                           fsr2h	equ	0xFDA
  6723                           fsr2l	equ	0xFD9
  6724                           status	equ	0xFD8
  6725                           
  6726 ;; *************** function ___awmod *****************
  6727 ;; Defined at:
  6728 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awmod.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;  dividend        2   29[COMRAM] int 
  6731 ;;  divisor         2   31[COMRAM] int 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  sign            1   35[COMRAM] unsigned char 
  6734 ;;  counter         1   34[COMRAM] unsigned char 
  6735 ;; Return value:  Size  Location     Type
  6736 ;;                  2   29[COMRAM] int 
  6737 ;; Registers used:
  6738 ;;		wreg, status,2, status,0, prodl
  6739 ;; Tracked objects:
  6740 ;;		On entry : 0/0
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6744 ;;      Params:         4       0       0       0       0       0       0       0       0
  6745 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6746 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6747 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6748 ;;Total ram usage:        7 bytes
  6749 ;; Hardware stack levels used:    1
  6750 ;; Hardware stack levels required when called:    4
  6751 ;; This function calls:
  6752 ;;		Nothing
  6753 ;; This function is called by:
  6754 ;;		_setExamTime
  6755 ;;		_setExamMCQ
  6756 ;;		_runPaper
  6757 ;;		_subMenu
  6758 ;;		_view_answers
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762                           	psect	text23
  6763  0028FC                     __ptext23:
  6764                           	opt stack 0
  6765  0028FC                     ___awmod:
  6766                           	opt stack 21
  6767                           
  6768                           ;incstack = 0
  6769  0028FC  6E22               	movwf	??___awmod& (0+255),c
  6770  0028FE  0E00               	movlw	0
  6771  002900  6E24               	movwf	___awmod@sign,c
  6772  002902  5022               	movf	??___awmod& (0+255),w,c
  6773  002904  501F               	movf	___awmod@dividend+1,w,c
  6774  002906  0A80               	xorlw	128
  6775  002908  6EF3               	movwf	prodl,c
  6776  00290A  0E80               	movlw	128
  6777  00290C  5CF3               	subwf	prodl,w,c
  6778  00290E  0E00               	movlw	0
  6779  002910  B4D8               	btfsc	status,2,c
  6780  002912  5C1E               	subwf	___awmod@dividend,w,c
  6781  002914  B0D8               	btfsc	status,0,c
  6782  002916  D008               	goto	l5030
  6783  002918  6C1E               	negf	___awmod@dividend,c
  6784  00291A  1E1F               	comf	___awmod@dividend+1,f,c
  6785  00291C  B0D8               	btfsc	status,0,c
  6786  00291E  2A1F               	incf	___awmod@dividend+1,f,c
  6787  002920  6E22               	movwf	??___awmod& (0+255),c
  6788  002922  0E01               	movlw	1
  6789  002924  6E24               	movwf	___awmod@sign,c
  6790  002926  5022               	movf	??___awmod& (0+255),w,c
  6791  002928                     l5030:
  6792  002928  5021               	movf	___awmod@divisor+1,w,c
  6793  00292A  0A80               	xorlw	128
  6794  00292C  6EF3               	movwf	prodl,c
  6795  00292E  0E80               	movlw	128
  6796  002930  5CF3               	subwf	prodl,w,c
  6797  002932  0E00               	movlw	0
  6798  002934  B4D8               	btfsc	status,2,c
  6799  002936  5C20               	subwf	___awmod@divisor,w,c
  6800  002938  B0D8               	btfsc	status,0,c
  6801  00293A  D004               	goto	l5034
  6802  00293C  6C20               	negf	___awmod@divisor,c
  6803  00293E  1E21               	comf	___awmod@divisor+1,f,c
  6804  002940  B0D8               	btfsc	status,0,c
  6805  002942  2A21               	incf	___awmod@divisor+1,f,c
  6806  002944                     l5034:
  6807  002944  5021               	movf	___awmod@divisor+1,w,c
  6808  002946  1020               	iorwf	___awmod@divisor,w,c
  6809  002948  B4D8               	btfsc	status,2,c
  6810  00294A  D01A               	goto	l5050
  6811  00294C  6E22               	movwf	??___awmod& (0+255),c
  6812  00294E  0E01               	movlw	1
  6813  002950  6E23               	movwf	___awmod@counter,c
  6814  002952  5022               	movf	??___awmod& (0+255),w,c
  6815  002954  D004               	goto	l5040
  6816  002956                     l5038:
  6817  002956  90D8               	bcf	status,0,c
  6818  002958  3620               	rlcf	___awmod@divisor,f,c
  6819  00295A  3621               	rlcf	___awmod@divisor+1,f,c
  6820  00295C  2A23               	incf	___awmod@counter,f,c
  6821  00295E                     l5040:
  6822  00295E  AE21               	btfss	___awmod@divisor+1,7,c
  6823  002960  D7FA               	goto	l5038
  6824  002962                     l5042:
  6825  002962  5020               	movf	___awmod@divisor,w,c
  6826  002964  5C1E               	subwf	___awmod@dividend,w,c
  6827  002966  5021               	movf	___awmod@divisor+1,w,c
  6828  002968  581F               	subwfb	___awmod@dividend+1,w,c
  6829  00296A  A0D8               	btfss	status,0,c
  6830  00296C  D004               	goto	l5046
  6831  00296E  5020               	movf	___awmod@divisor,w,c
  6832  002970  5E1E               	subwf	___awmod@dividend,f,c
  6833  002972  5021               	movf	___awmod@divisor+1,w,c
  6834  002974  5A1F               	subwfb	___awmod@dividend+1,f,c
  6835  002976                     l5046:
  6836  002976  90D8               	bcf	status,0,c
  6837  002978  3221               	rrcf	___awmod@divisor+1,f,c
  6838  00297A  3220               	rrcf	___awmod@divisor,f,c
  6839  00297C  2E23               	decfsz	___awmod@counter,f,c
  6840  00297E  D7F1               	goto	l5042
  6841  002980                     l5050:
  6842  002980  5024               	movf	___awmod@sign,w,c
  6843  002982  B4D8               	btfsc	status,2,c
  6844  002984  D004               	goto	l5054
  6845  002986  6C1E               	negf	___awmod@dividend,c
  6846  002988  1E1F               	comf	___awmod@dividend+1,f,c
  6847  00298A  B0D8               	btfsc	status,0,c
  6848  00298C  2A1F               	incf	___awmod@dividend+1,f,c
  6849  00298E                     l5054:
  6850  00298E  C01E  F01E         	movff	___awmod@dividend,?___awmod
  6851  002992  C01F  F01F         	movff	___awmod@dividend+1,?___awmod+1
  6852  002996  0012               	return	
  6853  002998                     __end_of___awmod:
  6854                           	opt stack 0
  6855                           tblptru	equ	0xFF8
  6856                           tblptrh	equ	0xFF7
  6857                           tblptrl	equ	0xFF6
  6858                           tablat	equ	0xFF5
  6859                           prodl	equ	0xFF3
  6860                           intcon	equ	0xFF2
  6861                           postinc0	equ	0xFEE
  6862                           wreg	equ	0xFE8
  6863                           postinc1	equ	0xFE6
  6864                           postdec1	equ	0xFE5
  6865                           fsr1l	equ	0xFE1
  6866                           indf2	equ	0xFDF
  6867                           postinc2	equ	0xFDE
  6868                           fsr2h	equ	0xFDA
  6869                           fsr2l	equ	0xFD9
  6870                           status	equ	0xFD8
  6871                           
  6872 ;; *************** function ___awdiv *****************
  6873 ;; Defined at:
  6874 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awdiv.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  dividend        2   29[COMRAM] int 
  6877 ;;  divisor         2   31[COMRAM] int 
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;  quotient        2   36[COMRAM] int 
  6880 ;;  sign            1   35[COMRAM] unsigned char 
  6881 ;;  counter         1   34[COMRAM] unsigned char 
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  2   29[COMRAM] int 
  6884 ;; Registers used:
  6885 ;;		wreg, status,2, status,0, prodl
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6891 ;;      Params:         4       0       0       0       0       0       0       0       0
  6892 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6893 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6894 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6895 ;;Total ram usage:        9 bytes
  6896 ;; Hardware stack levels used:    1
  6897 ;; Hardware stack levels required when called:    4
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_setExamTime
  6902 ;;		_setExamMCQ
  6903 ;;		_runPaper
  6904 ;;		_subMenu
  6905 ;;		_view_answers
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           	psect	text24
  6910  0025C0                     __ptext24:
  6911                           	opt stack 0
  6912  0025C0                     ___awdiv:
  6913                           	opt stack 21
  6914                           
  6915                           ;incstack = 0
  6916  0025C0  6E22               	movwf	??___awdiv& (0+255),c
  6917  0025C2  0E00               	movlw	0
  6918  0025C4  6E24               	movwf	___awdiv@sign,c
  6919  0025C6  5022               	movf	??___awdiv& (0+255),w,c
  6920  0025C8  5021               	movf	___awdiv@divisor+1,w,c
  6921  0025CA  0A80               	xorlw	128
  6922  0025CC  6EF3               	movwf	prodl,c
  6923  0025CE  0E80               	movlw	128
  6924  0025D0  5CF3               	subwf	prodl,w,c
  6925  0025D2  0E00               	movlw	0
  6926  0025D4  B4D8               	btfsc	status,2,c
  6927  0025D6  5C20               	subwf	___awdiv@divisor,w,c
  6928  0025D8  B0D8               	btfsc	status,0,c
  6929  0025DA  D008               	goto	l4986
  6930  0025DC  6C20               	negf	___awdiv@divisor,c
  6931  0025DE  1E21               	comf	___awdiv@divisor+1,f,c
  6932  0025E0  B0D8               	btfsc	status,0,c
  6933  0025E2  2A21               	incf	___awdiv@divisor+1,f,c
  6934  0025E4  6E22               	movwf	??___awdiv& (0+255),c
  6935  0025E6  0E01               	movlw	1
  6936  0025E8  6E24               	movwf	___awdiv@sign,c
  6937  0025EA  5022               	movf	??___awdiv& (0+255),w,c
  6938  0025EC                     l4986:
  6939  0025EC  501F               	movf	___awdiv@dividend+1,w,c
  6940  0025EE  0A80               	xorlw	128
  6941  0025F0  6EF3               	movwf	prodl,c
  6942  0025F2  0E80               	movlw	128
  6943  0025F4  5CF3               	subwf	prodl,w,c
  6944  0025F6  0E00               	movlw	0
  6945  0025F8  B4D8               	btfsc	status,2,c
  6946  0025FA  5C1E               	subwf	___awdiv@dividend,w,c
  6947  0025FC  B0D8               	btfsc	status,0,c
  6948  0025FE  D006               	goto	l4992
  6949  002600  6C1E               	negf	___awdiv@dividend,c
  6950  002602  1E1F               	comf	___awdiv@dividend+1,f,c
  6951  002604  B0D8               	btfsc	status,0,c
  6952  002606  2A1F               	incf	___awdiv@dividend+1,f,c
  6953  002608  0E01               	movlw	1
  6954  00260A  1A24               	xorwf	___awdiv@sign,f,c
  6955  00260C                     l4992:
  6956  00260C  0E00               	movlw	0
  6957  00260E  6E26               	movwf	___awdiv@quotient+1,c
  6958  002610  0E00               	movlw	0
  6959  002612  6E25               	movwf	___awdiv@quotient,c
  6960  002614  5021               	movf	___awdiv@divisor+1,w,c
  6961  002616  1020               	iorwf	___awdiv@divisor,w,c
  6962  002618  B4D8               	btfsc	status,2,c
  6963  00261A  D01E               	goto	l5014
  6964  00261C  6E22               	movwf	??___awdiv& (0+255),c
  6965  00261E  0E01               	movlw	1
  6966  002620  6E23               	movwf	___awdiv@counter,c
  6967  002622  5022               	movf	??___awdiv& (0+255),w,c
  6968  002624  D004               	goto	l5000
  6969  002626                     l4998:
  6970  002626  90D8               	bcf	status,0,c
  6971  002628  3620               	rlcf	___awdiv@divisor,f,c
  6972  00262A  3621               	rlcf	___awdiv@divisor+1,f,c
  6973  00262C  2A23               	incf	___awdiv@counter,f,c
  6974  00262E                     l5000:
  6975  00262E  AE21               	btfss	___awdiv@divisor+1,7,c
  6976  002630  D7FA               	goto	l4998
  6977  002632                     l5002:
  6978  002632  90D8               	bcf	status,0,c
  6979  002634  3625               	rlcf	___awdiv@quotient,f,c
  6980  002636  3626               	rlcf	___awdiv@quotient+1,f,c
  6981  002638  5020               	movf	___awdiv@divisor,w,c
  6982  00263A  5C1E               	subwf	___awdiv@dividend,w,c
  6983  00263C  5021               	movf	___awdiv@divisor+1,w,c
  6984  00263E  581F               	subwfb	___awdiv@dividend+1,w,c
  6985  002640  A0D8               	btfss	status,0,c
  6986  002642  D005               	goto	l5010
  6987  002644  5020               	movf	___awdiv@divisor,w,c
  6988  002646  5E1E               	subwf	___awdiv@dividend,f,c
  6989  002648  5021               	movf	___awdiv@divisor+1,w,c
  6990  00264A  5A1F               	subwfb	___awdiv@dividend+1,f,c
  6991  00264C  8025               	bsf	___awdiv@quotient,0,c
  6992  00264E                     l5010:
  6993  00264E  90D8               	bcf	status,0,c
  6994  002650  3221               	rrcf	___awdiv@divisor+1,f,c
  6995  002652  3220               	rrcf	___awdiv@divisor,f,c
  6996  002654  2E23               	decfsz	___awdiv@counter,f,c
  6997  002656  D7ED               	goto	l5002
  6998  002658                     l5014:
  6999  002658  5024               	movf	___awdiv@sign,w,c
  7000  00265A  B4D8               	btfsc	status,2,c
  7001  00265C  D004               	goto	l5018
  7002  00265E  6C25               	negf	___awdiv@quotient,c
  7003  002660  1E26               	comf	___awdiv@quotient+1,f,c
  7004  002662  B0D8               	btfsc	status,0,c
  7005  002664  2A26               	incf	___awdiv@quotient+1,f,c
  7006  002666                     l5018:
  7007  002666  C025  F01E         	movff	___awdiv@quotient,?___awdiv
  7008  00266A  C026  F01F         	movff	___awdiv@quotient+1,?___awdiv+1
  7009  00266E  0012               	return	
  7010  002670                     __end_of___awdiv:
  7011                           	opt stack 0
  7012                           tblptru	equ	0xFF8
  7013                           tblptrh	equ	0xFF7
  7014                           tblptrl	equ	0xFF6
  7015                           tablat	equ	0xFF5
  7016                           prodl	equ	0xFF3
  7017                           intcon	equ	0xFF2
  7018                           postinc0	equ	0xFEE
  7019                           wreg	equ	0xFE8
  7020                           postinc1	equ	0xFE6
  7021                           postdec1	equ	0xFE5
  7022                           fsr1l	equ	0xFE1
  7023                           indf2	equ	0xFDF
  7024                           postinc2	equ	0xFDE
  7025                           fsr2h	equ	0xFDA
  7026                           fsr2l	equ	0xFD9
  7027                           status	equ	0xFD8
  7028                           
  7029 ;; *************** function _LCD_WriteStringAt *****************
  7030 ;; Defined at:
  7031 ;;		line 136 in file "LCD_Library.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  row             1    wreg     unsigned char 
  7034 ;;  column          1   34[COMRAM] unsigned char 
  7035 ;;  string          2   35[COMRAM] PTR unsigned char 
  7036 ;;		 -> STR_12(11), STR_11(21), STR_10(9), powerOnScreen@txt2(21), 
  7037 ;;		 -> powerOnScreen@txt1(21), powerOnScreen@txt0(21), STR_9(4), STR_8(3), 
  7038 ;;		 -> STR_7(13), subMenu@txt3(18), subMenu@txt2(17), subMenu@txt1(19), 
  7039 ;;		 -> subMenu@txt0(17), STR_6(3), STR_5(15), STR_4(18), 
  7040 ;;		 -> STR_3(9), runPaper@txt2(15), runPaper@txt1(18), STR_2(15), 
  7041 ;;		 -> STR_1(16), startExam@txt1(14), setExamMCQ@txt1_2(16), setExamMCQ@txt1_1(18), 
  7042 ;;		 -> setExamTime@txt1_3(13), setExamTime@txt1_2(13), setExamTime@txt1(19), examSetup@txt7(18), 
  7043 ;;		 -> examSetup@txt6(17), examSetup@txt5(19), examSetup@txt4(17), examSetup@txt2(21), 
  7044 ;;		 -> examSetup@txt1(21), examSetup@txt0(21), 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  row             1   37[COMRAM] unsigned char 
  7047 ;;  data            1   38[COMRAM] unsigned char 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;		None               void
  7050 ;; Registers used:
  7051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7057 ;;      Params:         3       0       0       0       0       0       0       0       0
  7058 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7060 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7061 ;;Total ram usage:        5 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:    6
  7064 ;; This function calls:
  7065 ;;		_LCD_WriteChar
  7066 ;;		_LCD_WriteCommand
  7067 ;; This function is called by:
  7068 ;;		_examSetup
  7069 ;;		_setExamTime
  7070 ;;		_setExamMCQ
  7071 ;;		_startExam
  7072 ;;		_runPaper
  7073 ;;		_subMenu
  7074 ;;		_get_yes_no
  7075 ;;		_powerOnScreen
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text25
  7080  002A34                     __ptext25:
  7081                           	opt stack 0
  7082  002A34                     _LCD_WriteStringAt:
  7083                           	opt stack 20
  7084                           
  7085                           ;incstack = 0
  7086                           ;LCD_WriteStringAt@row stored from wreg
  7087  002A34  CFE8 F026          	movff	wreg,LCD_WriteStringAt@row
  7088                           
  7089                           ;LCD_Library.c: 137: unsigned char data;
  7090                           ;LCD_Library.c: 138: switch(row){
  7091  002A38  D00D               	goto	l5070
  7092  002A3A                     l5060:
  7093  002A3A  5023               	movf	LCD_WriteStringAt@column,w,c
  7094  002A3C  0F7F               	addlw	127
  7095  002A3E  D008               	goto	L18
  7096  002A40                     l5062:
  7097  002A40  5023               	movf	LCD_WriteStringAt@column,w,c
  7098  002A42  0FBF               	addlw	191
  7099  002A44  D005               	goto	L18
  7100  002A46                     l5064:
  7101  002A46  5023               	movf	LCD_WriteStringAt@column,w,c
  7102  002A48  0F93               	addlw	147
  7103  002A4A  D002               	goto	L18
  7104  002A4C                     l5066:
  7105  002A4C  5023               	movf	LCD_WriteStringAt@column,w,c
  7106  002A4E  0FD3               	addlw	211
  7107  002A50                     L18:
  7108  002A50  6E27               	movwf	LCD_WriteStringAt@data,c
  7109  002A52  D00D               	goto	l5072
  7110  002A54                     l5070:
  7111  002A54  5026               	movf	LCD_WriteStringAt@row,w,c
  7112                           
  7113                           ; Switch size 1, requested type "space"
  7114                           ; Number of cases is 4, Range of values is 1 to 4
  7115                           ; switch strategies available:
  7116                           ; Name         Instructions Cycles
  7117                           ; simple_byte           13     7 (average)
  7118                           ;	Chosen strategy is simple_byte
  7119  002A56  0A01               	xorlw	1	; case 1
  7120  002A58  B4D8               	btfsc	status,2,c
  7121  002A5A  D7EF               	goto	l5060
  7122  002A5C  0A03               	xorlw	3	; case 2
  7123  002A5E  B4D8               	btfsc	status,2,c
  7124  002A60  D7EF               	goto	l5062
  7125  002A62  0A01               	xorlw	1	; case 3
  7126  002A64  B4D8               	btfsc	status,2,c
  7127  002A66  D7EF               	goto	l5064
  7128  002A68  0A07               	xorlw	7	; case 4
  7129  002A6A  B4D8               	btfsc	status,2,c
  7130  002A6C  D7EF               	goto	l5066
  7131  002A6E                     l5072:
  7132                           
  7133                           ;LCD_Library.c: 145: LCD_WriteCommand(data);
  7134  002A6E  5027               	movf	LCD_WriteStringAt@data,w,c
  7135  002A70  ECFF  F00E         	call	_LCD_WriteCommand
  7136                           
  7137                           ;LCD_Library.c: 147: while(*string)
  7138  002A74  D014               	goto	l5078
  7139  002A76                     l5074:
  7140                           
  7141                           ;LCD_Library.c: 148: {
  7142                           ;LCD_Library.c: 149: LCD_WriteChar(*string);
  7143  002A76  C024  FFF6         	movff	LCD_WriteStringAt@string,tblptrl
  7144  002A7A  C025  FFF7         	movff	LCD_WriteStringAt@string+1,tblptrh
  7145  002A7E  6AF8               	clrf	tblptru,c
  7146  002A80  0E07               	movlw	(high __ramtop+-1)
  7147  002A82  64F7               	cpfsgt	tblptrh,c
  7148  002A84  D003               	bra	u4337
  7149  002A86  0008               	tblrd		*
  7150  002A88  50F5               	movf	tablat,w,c
  7151  002A8A  D005               	bra	u4330
  7152  002A8C                     u4337:
  7153  002A8C  CFF6 FFE9          	movff	tblptrl,fsr0l
  7154  002A90  CFF7 FFEA          	movff	tblptrh,fsr0h
  7155  002A94  50EF               	movf	indf0,w,c
  7156  002A96                     u4330:
  7157  002A96  EC97  F00F         	call	_LCD_WriteChar
  7158                           
  7159                           ;LCD_Library.c: 150: string++;
  7160  002A9A  4A24               	infsnz	LCD_WriteStringAt@string,f,c
  7161  002A9C  2A25               	incf	LCD_WriteStringAt@string+1,f,c
  7162  002A9E                     l5078:
  7163  002A9E  C024  FFF6         	movff	LCD_WriteStringAt@string,tblptrl
  7164  002AA2  C025  FFF7         	movff	LCD_WriteStringAt@string+1,tblptrh
  7165  002AA6  6AF8               	clrf	tblptru,c
  7166  002AA8  0E07               	movlw	(high __ramtop+-1)
  7167  002AAA  64F7               	cpfsgt	tblptrh,c
  7168  002AAC  D003               	bra	u4347
  7169  002AAE  0008               	tblrd		*
  7170  002AB0  50F5               	movf	tablat,w,c
  7171  002AB2  D005               	bra	u4340
  7172  002AB4                     u4347:
  7173  002AB4  CFF6 FFE9          	movff	tblptrl,fsr0l
  7174  002AB8  CFF7 FFEA          	movff	tblptrh,fsr0h
  7175  002ABC  50EF               	movf	indf0,w,c
  7176  002ABE                     u4340:
  7177  002ABE  0900               	iorlw	0
  7178  002AC0  B4D8               	btfsc	status,2,c
  7179                           
  7180                           ;LCD_Library.c: 151: }
  7181                           ;LCD_Library.c: 152: return;
  7182  002AC2  0012               	return	
  7183  002AC4  D7D8               	goto	l5074
  7184  002AC6                     __end_of_LCD_WriteStringAt:
  7185                           	opt stack 0
  7186                           tblptru	equ	0xFF8
  7187                           tblptrh	equ	0xFF7
  7188                           tblptrl	equ	0xFF6
  7189                           tablat	equ	0xFF5
  7190                           prodl	equ	0xFF3
  7191                           intcon	equ	0xFF2
  7192                           indf0	equ	0xFEF
  7193                           postinc0	equ	0xFEE
  7194                           fsr0h	equ	0xFEA
  7195                           fsr0l	equ	0xFE9
  7196                           wreg	equ	0xFE8
  7197                           postinc1	equ	0xFE6
  7198                           postdec1	equ	0xFE5
  7199                           fsr1l	equ	0xFE1
  7200                           indf2	equ	0xFDF
  7201                           postinc2	equ	0xFDE
  7202                           fsr2h	equ	0xFDA
  7203                           fsr2l	equ	0xFD9
  7204                           status	equ	0xFD8
  7205                           
  7206 ;; *************** function _LCD_WriteCharAt *****************
  7207 ;; Defined at:
  7208 ;;		line 115 in file "LCD_Library.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;  row             1    wreg     unsigned char 
  7211 ;;  column          1   38[COMRAM] unsigned char 
  7212 ;;  chr             1   39[COMRAM] unsigned char 
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;  row             1   40[COMRAM] unsigned char 
  7215 ;;  location        1   41[COMRAM] unsigned char 
  7216 ;; Return value:  Size  Location     Type
  7217 ;;		None               void
  7218 ;; Registers used:
  7219 ;;		wreg, status,2, status,0, cstack
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7225 ;;      Params:         2       0       0       0       0       0       0       0       0
  7226 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7228 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7229 ;;Total ram usage:        4 bytes
  7230 ;; Hardware stack levels used:    1
  7231 ;; Hardware stack levels required when called:    6
  7232 ;; This function calls:
  7233 ;;		_LCD_WriteChar
  7234 ;;		_LCD_WriteCommand
  7235 ;; This function is called by:
  7236 ;;		_examSetup
  7237 ;;		_setExamTime
  7238 ;;		_setExamMCQ
  7239 ;;		_runPaper
  7240 ;;		_subMenu
  7241 ;;		_view_answers
  7242 ;;		_get_yes_no
  7243 ;;		_powerOnScreen
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text26
  7248  002D78                     __ptext26:
  7249                           	opt stack 0
  7250  002D78                     _LCD_WriteCharAt:
  7251                           	opt stack 19
  7252                           
  7253                           ;incstack = 0
  7254                           ;LCD_WriteCharAt@row stored from wreg
  7255  002D78  CFE8 F029          	movff	wreg,LCD_WriteCharAt@row
  7256                           
  7257                           ;LCD_Library.c: 116: unsigned char register location;
  7258                           ;LCD_Library.c: 117: switch(row){
  7259  002D7C  D00D               	goto	l4920
  7260  002D7E                     l4910:
  7261  002D7E  5027               	movf	LCD_WriteCharAt@column,w,c
  7262  002D80  0F7F               	addlw	127
  7263  002D82  D008               	goto	L21
  7264  002D84                     l4912:
  7265  002D84  5027               	movf	LCD_WriteCharAt@column,w,c
  7266  002D86  0FBF               	addlw	191
  7267  002D88  D005               	goto	L21
  7268  002D8A                     l4914:
  7269  002D8A  5027               	movf	LCD_WriteCharAt@column,w,c
  7270  002D8C  0F93               	addlw	147
  7271  002D8E  D002               	goto	L21
  7272  002D90                     l4916:
  7273  002D90  5027               	movf	LCD_WriteCharAt@column,w,c
  7274  002D92  0FD3               	addlw	211
  7275  002D94                     L21:
  7276  002D94  6E2A               	movwf	LCD_WriteCharAt@location,c
  7277  002D96  D00D               	goto	l4922
  7278  002D98                     l4920:
  7279  002D98  5029               	movf	LCD_WriteCharAt@row,w,c
  7280                           
  7281                           ; Switch size 1, requested type "space"
  7282                           ; Number of cases is 4, Range of values is 1 to 4
  7283                           ; switch strategies available:
  7284                           ; Name         Instructions Cycles
  7285                           ; simple_byte           13     7 (average)
  7286                           ;	Chosen strategy is simple_byte
  7287  002D9A  0A01               	xorlw	1	; case 1
  7288  002D9C  B4D8               	btfsc	status,2,c
  7289  002D9E  D7EF               	goto	l4910
  7290  002DA0  0A03               	xorlw	3	; case 2
  7291  002DA2  B4D8               	btfsc	status,2,c
  7292  002DA4  D7EF               	goto	l4912
  7293  002DA6  0A01               	xorlw	1	; case 3
  7294  002DA8  B4D8               	btfsc	status,2,c
  7295  002DAA  D7EF               	goto	l4914
  7296  002DAC  0A07               	xorlw	7	; case 4
  7297  002DAE  B4D8               	btfsc	status,2,c
  7298  002DB0  D7EF               	goto	l4916
  7299  002DB2                     l4922:
  7300                           
  7301                           ;LCD_Library.c: 123: LCD_WriteCommand(location);
  7302  002DB2  502A               	movf	LCD_WriteCharAt@location,w,c
  7303  002DB4  ECFF  F00E         	call	_LCD_WriteCommand
  7304                           
  7305                           ;LCD_Library.c: 124: LCD_WriteChar(chr);
  7306  002DB8  5028               	movf	LCD_WriteCharAt@chr,w,c
  7307  002DBA  EC97  F00F         	call	_LCD_WriteChar
  7308  002DBE  0012               	return	
  7309  002DC0                     __end_of_LCD_WriteCharAt:
  7310                           	opt stack 0
  7311                           tblptru	equ	0xFF8
  7312                           tblptrh	equ	0xFF7
  7313                           tblptrl	equ	0xFF6
  7314                           tablat	equ	0xFF5
  7315                           prodl	equ	0xFF3
  7316                           intcon	equ	0xFF2
  7317                           indf0	equ	0xFEF
  7318                           postinc0	equ	0xFEE
  7319                           fsr0h	equ	0xFEA
  7320                           fsr0l	equ	0xFE9
  7321                           wreg	equ	0xFE8
  7322                           postinc1	equ	0xFE6
  7323                           postdec1	equ	0xFE5
  7324                           fsr1l	equ	0xFE1
  7325                           indf2	equ	0xFDF
  7326                           postinc2	equ	0xFDE
  7327                           fsr2h	equ	0xFDA
  7328                           fsr2l	equ	0xFD9
  7329                           status	equ	0xFD8
  7330                           
  7331 ;; *************** function _LCD_WriteCommand *****************
  7332 ;; Defined at:
  7333 ;;		line 74 in file "LCD_Library.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;  cmd             1    wreg     unsigned char 
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;  cmd             1   33[COMRAM] unsigned char 
  7338 ;; Return value:  Size  Location     Type
  7339 ;;		None               void
  7340 ;; Registers used:
  7341 ;;		wreg, status,2, status,0, cstack
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7347 ;;      Params:         0       0       0       0       0       0       0       0       0
  7348 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7349 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7350 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7351 ;;Total ram usage:        3 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:    5
  7354 ;; This function calls:
  7355 ;;		_Delay_5ms
  7356 ;;		_Delay_5us
  7357 ;; This function is called by:
  7358 ;;		_initialize_LCD
  7359 ;;		_LCD_WriteCharAt
  7360 ;;		_LCD_WriteStringAt
  7361 ;;		_examSetup
  7362 ;;		_setExamTime
  7363 ;;		_setExamMCQ
  7364 ;;		_startExam
  7365 ;;		_runPaper
  7366 ;;		_subMenu
  7367 ;;		_view_answers
  7368 ;;		_initializeDevice
  7369 ;;		_readAnswer
  7370 ;;		_powerOnScreen
  7371 ;; This function uses a non-reentrant model
  7372 ;;
  7373                           
  7374                           	psect	text27
  7375  001DFE                     __ptext27:
  7376                           	opt stack 0
  7377  001DFE                     _LCD_WriteCommand:
  7378                           	opt stack 23
  7379                           
  7380                           ;incstack = 0
  7381                           ;LCD_WriteCommand@cmd stored from wreg
  7382  001DFE  CFE8 F022          	movff	wreg,LCD_WriteCommand@cmd
  7383                           
  7384                           ;LCD_Library.c: 75: PORTDbits.RD3 = 0;
  7385  001E02  9683               	bcf	3971,3,c	;volatile
  7386                           
  7387                           ;LCD_Library.c: 76: PORTDbits.RD2 = 0;
  7388  001E04  9483               	bcf	3971,2,c	;volatile
  7389                           
  7390                           ;LCD_Library.c: 82: PORTDbits.RD7 = (cmd & 0b10000000)>>7; PORTDbits.RD6 = (cmd & 0b0100
      +                          0000)>>6;
  7391  001E06  6A20               	clrf	??_LCD_WriteCommand& (0+255),c
  7392  001E08  AE22               	btfss	LCD_WriteCommand@cmd,7,c
  7393  001E0A  D001               	bra	u3985
  7394  001E0C  2A20               	incf	??_LCD_WriteCommand& (0+255),f,c
  7395  001E0E                     u3985:
  7396  001E0E  0E01               	movlw	1
  7397  001E10  1620               	andwf	??_LCD_WriteCommand,f,c
  7398  001E12  3220               	rrcf	??_LCD_WriteCommand,f,c
  7399  001E14  3220               	rrcf	??_LCD_WriteCommand,f,c
  7400  001E16  5083               	movf	3971,w,c	;volatile
  7401  001E18  1820               	xorwf	??_LCD_WriteCommand,w,c
  7402  001E1A  0B7F               	andlw	-129
  7403  001E1C  1820               	xorwf	??_LCD_WriteCommand,w,c
  7404  001E1E  6E83               	movwf	3971,c	;volatile
  7405  001E20  C022  F020         	movff	LCD_WriteCommand@cmd,??_LCD_WriteCommand
  7406  001E24  0E06               	movlw	6
  7407  001E26  6E21               	movwf	(??_LCD_WriteCommand+1)& (0+255),c
  7408  001E28                     u3995:
  7409  001E28  90D8               	bcf	status,0,c
  7410  001E2A  3220               	rrcf	??_LCD_WriteCommand,f,c
  7411  001E2C  2E21               	decfsz	(??_LCD_WriteCommand+1)& (0+255),f,c
  7412  001E2E  D7FC               	goto	u3995
  7413  001E30  0E01               	movlw	1
  7414  001E32  1620               	andwf	??_LCD_WriteCommand,f,c
  7415  001E34  3A20               	swapf	??_LCD_WriteCommand,f,c
  7416  001E36  4620               	rlncf	??_LCD_WriteCommand,f,c
  7417  001E38  4620               	rlncf	??_LCD_WriteCommand,f,c
  7418  001E3A  5083               	movf	3971,w,c	;volatile
  7419  001E3C  1820               	xorwf	??_LCD_WriteCommand,w,c
  7420  001E3E  0BBF               	andlw	-65
  7421  001E40  1820               	xorwf	??_LCD_WriteCommand,w,c
  7422  001E42  6E83               	movwf	3971,c	;volatile
  7423                           
  7424                           ;LCD_Library.c: 83: PORTDbits.RD5 = (cmd & 0b00100000)>>5; PORTDbits.RD4 = (cmd & 0b0001
      +                          0000)>>4;
  7425  001E44  C022  F020         	movff	LCD_WriteCommand@cmd,??_LCD_WriteCommand
  7426  001E48  0E05               	movlw	5
  7427  001E4A  6E21               	movwf	(??_LCD_WriteCommand+1)& (0+255),c
  7428  001E4C                     u4005:
  7429  001E4C  90D8               	bcf	status,0,c
  7430  001E4E  3220               	rrcf	??_LCD_WriteCommand,f,c
  7431  001E50  2E21               	decfsz	(??_LCD_WriteCommand+1)& (0+255),f,c
  7432  001E52  D7FC               	goto	u4005
  7433  001E54  0E01               	movlw	1
  7434  001E56  1620               	andwf	??_LCD_WriteCommand,f,c
  7435  001E58  3A20               	swapf	??_LCD_WriteCommand,f,c
  7436  001E5A  4620               	rlncf	??_LCD_WriteCommand,f,c
  7437  001E5C  5083               	movf	3971,w,c	;volatile
  7438  001E5E  1820               	xorwf	??_LCD_WriteCommand,w,c
  7439  001E60  0BDF               	andlw	-33
  7440  001E62  1820               	xorwf	??_LCD_WriteCommand,w,c
  7441  001E64  6E83               	movwf	3971,c	;volatile
  7442  001E66  C022  F020         	movff	LCD_WriteCommand@cmd,??_LCD_WriteCommand
  7443  001E6A  3A20               	swapf	??_LCD_WriteCommand,f,c
  7444  001E6C  0E0F               	movlw	15
  7445  001E6E  1620               	andwf	??_LCD_WriteCommand,f,c
  7446  001E70  0E01               	movlw	1
  7447  001E72  1620               	andwf	??_LCD_WriteCommand,f,c
  7448  001E74  3A20               	swapf	??_LCD_WriteCommand,f,c
  7449  001E76  5083               	movf	3971,w,c	;volatile
  7450  001E78  1820               	xorwf	??_LCD_WriteCommand,w,c
  7451  001E7A  0BEF               	andlw	-17
  7452  001E7C  1820               	xorwf	??_LCD_WriteCommand,w,c
  7453  001E7E  6E83               	movwf	3971,c	;volatile
  7454                           
  7455                           ;LCD_Library.c: 84: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop
      +                          (); __nop(); __nop();
  7456  001E80  F000               	nop	
  7457  001E82  F000               	nop	
  7458  001E84  F000               	nop	
  7459  001E86  F000               	nop	
  7460  001E88  F000               	nop	
  7461  001E8A  F000               	nop	
  7462  001E8C  F000               	nop	
  7463  001E8E  F000               	nop	
  7464  001E90  F000               	nop	
  7465  001E92  F000               	nop	
  7466                           
  7467                           ;LCD_Library.c: 85: PORTDbits.RD3 = 1; Delay_5us(); PORTDbits.RD3 = 0;
  7468  001E94  8683               	bsf	3971,3,c	;volatile
  7469  001E96  ECA9  F017         	call	_Delay_5us	;wreg free
  7470  001E9A  9683               	bcf	3971,3,c	;volatile
  7471                           
  7472                           ;LCD_Library.c: 88: PORTDbits.RD7 = (cmd & 0b00001000)>>3; PORTDbits.RD6 = (cmd & 0b0000
      +                          0100)>>2;
  7473  001E9C  C022  F020         	movff	LCD_WriteCommand@cmd,??_LCD_WriteCommand
  7474  001EA0  90D8               	bcf	status,0,c
  7475  001EA2  3220               	rrcf	??_LCD_WriteCommand,f,c
  7476  001EA4  90D8               	bcf	status,0,c
  7477  001EA6  3220               	rrcf	??_LCD_WriteCommand,f,c
  7478  001EA8  90D8               	bcf	status,0,c
  7479  001EAA  3220               	rrcf	??_LCD_WriteCommand,f,c
  7480  001EAC  0E01               	movlw	1
  7481  001EAE  1620               	andwf	??_LCD_WriteCommand,f,c
  7482  001EB0  3220               	rrcf	??_LCD_WriteCommand,f,c
  7483  001EB2  3220               	rrcf	??_LCD_WriteCommand,f,c
  7484  001EB4  5083               	movf	3971,w,c	;volatile
  7485  001EB6  1820               	xorwf	??_LCD_WriteCommand,w,c
  7486  001EB8  0B7F               	andlw	-129
  7487  001EBA  1820               	xorwf	??_LCD_WriteCommand,w,c
  7488  001EBC  6E83               	movwf	3971,c	;volatile
  7489  001EBE  C022  F020         	movff	LCD_WriteCommand@cmd,??_LCD_WriteCommand
  7490  001EC2  90D8               	bcf	status,0,c
  7491  001EC4  3220               	rrcf	??_LCD_WriteCommand,f,c
  7492  001EC6  90D8               	bcf	status,0,c
  7493  001EC8  3220               	rrcf	??_LCD_WriteCommand,f,c
  7494  001ECA  0E01               	movlw	1
  7495  001ECC  1620               	andwf	??_LCD_WriteCommand,f,c
  7496  001ECE  3A20               	swapf	??_LCD_WriteCommand,f,c
  7497  001ED0  4620               	rlncf	??_LCD_WriteCommand,f,c
  7498  001ED2  4620               	rlncf	??_LCD_WriteCommand,f,c
  7499  001ED4  5083               	movf	3971,w,c	;volatile
  7500  001ED6  1820               	xorwf	??_LCD_WriteCommand,w,c
  7501  001ED8  0BBF               	andlw	-65
  7502  001EDA  1820               	xorwf	??_LCD_WriteCommand,w,c
  7503  001EDC  6E83               	movwf	3971,c	;volatile
  7504                           
  7505                           ;LCD_Library.c: 89: PORTDbits.RD5 = (cmd & 0b00000010)>>1; PORTDbits.RD4 = (cmd & 0b0000
      +                          0001);
  7506  001EDE  C022  F020         	movff	LCD_WriteCommand@cmd,??_LCD_WriteCommand
  7507  001EE2  90D8               	bcf	status,0,c
  7508  001EE4  3220               	rrcf	??_LCD_WriteCommand,f,c
  7509  001EE6  0E01               	movlw	1
  7510  001EE8  1620               	andwf	??_LCD_WriteCommand,f,c
  7511  001EEA  3A20               	swapf	??_LCD_WriteCommand,f,c
  7512  001EEC  4620               	rlncf	??_LCD_WriteCommand,f,c
  7513  001EEE  5083               	movf	3971,w,c	;volatile
  7514  001EF0  1820               	xorwf	??_LCD_WriteCommand,w,c
  7515  001EF2  0BDF               	andlw	-33
  7516  001EF4  1820               	xorwf	??_LCD_WriteCommand,w,c
  7517  001EF6  6E83               	movwf	3971,c	;volatile
  7518  001EF8  C022  F020         	movff	LCD_WriteCommand@cmd,??_LCD_WriteCommand
  7519  001EFC  0E01               	movlw	1
  7520  001EFE  1620               	andwf	??_LCD_WriteCommand,f,c
  7521  001F00  3A20               	swapf	??_LCD_WriteCommand,f,c
  7522  001F02  5083               	movf	3971,w,c	;volatile
  7523  001F04  1820               	xorwf	??_LCD_WriteCommand,w,c
  7524  001F06  0BEF               	andlw	-17
  7525  001F08  1820               	xorwf	??_LCD_WriteCommand,w,c
  7526  001F0A  6E83               	movwf	3971,c	;volatile
  7527                           
  7528                           ;LCD_Library.c: 90: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop
      +                          (); __nop(); __nop();
  7529  001F0C  F000               	nop	
  7530  001F0E  F000               	nop	
  7531  001F10  F000               	nop	
  7532  001F12  F000               	nop	
  7533  001F14  F000               	nop	
  7534  001F16  F000               	nop	
  7535  001F18  F000               	nop	
  7536  001F1A  F000               	nop	
  7537  001F1C  F000               	nop	
  7538  001F1E  F000               	nop	
  7539                           
  7540                           ;LCD_Library.c: 91: PORTDbits.RD3 = 1; Delay_5us(); PORTDbits.RD3 = 0;
  7541  001F20  8683               	bsf	3971,3,c	;volatile
  7542  001F22  ECA9  F017         	call	_Delay_5us	;wreg free
  7543  001F26  9683               	bcf	3971,3,c	;volatile
  7544                           
  7545                           ;LCD_Library.c: 92: Delay_5ms();
  7546  001F28  ECB7  F017         	call	_Delay_5ms	;wreg free
  7547  001F2C  0012               	return	
  7548  001F2E                     __end_of_LCD_WriteCommand:
  7549                           	opt stack 0
  7550                           tblptru	equ	0xFF8
  7551                           tblptrh	equ	0xFF7
  7552                           tblptrl	equ	0xFF6
  7553                           tablat	equ	0xFF5
  7554                           prodl	equ	0xFF3
  7555                           intcon	equ	0xFF2
  7556                           indf0	equ	0xFEF
  7557                           postinc0	equ	0xFEE
  7558                           fsr0h	equ	0xFEA
  7559                           fsr0l	equ	0xFE9
  7560                           wreg	equ	0xFE8
  7561                           postinc1	equ	0xFE6
  7562                           postdec1	equ	0xFE5
  7563                           fsr1l	equ	0xFE1
  7564                           indf2	equ	0xFDF
  7565                           postinc2	equ	0xFDE
  7566                           fsr2h	equ	0xFDA
  7567                           fsr2l	equ	0xFD9
  7568                           status	equ	0xFD8
  7569                           
  7570 ;; *************** function _LCD_WriteChar *****************
  7571 ;; Defined at:
  7572 ;;		line 96 in file "LCD_Library.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;  data            1    wreg     unsigned char 
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;  data            1   33[COMRAM] unsigned char 
  7577 ;; Return value:  Size  Location     Type
  7578 ;;		None               void
  7579 ;; Registers used:
  7580 ;;		wreg, status,2, status,0, cstack
  7581 ;; Tracked objects:
  7582 ;;		On entry : 0/0
  7583 ;;		On exit  : 0/0
  7584 ;;		Unchanged: 0/0
  7585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7586 ;;      Params:         0       0       0       0       0       0       0       0       0
  7587 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7588 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7589 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7590 ;;Total ram usage:        3 bytes
  7591 ;; Hardware stack levels used:    1
  7592 ;; Hardware stack levels required when called:    5
  7593 ;; This function calls:
  7594 ;;		_Delay_5ms
  7595 ;;		_Delay_5us
  7596 ;; This function is called by:
  7597 ;;		_LCD_WriteCharAt
  7598 ;;		_LCD_WriteStringAt
  7599 ;;		_LCD_WriteString
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text28
  7604  001F2E                     __ptext28:
  7605                           	opt stack 0
  7606  001F2E                     _LCD_WriteChar:
  7607                           	opt stack 19
  7608                           
  7609                           ;incstack = 0
  7610                           ;LCD_WriteChar@data stored from wreg
  7611  001F2E  CFE8 F022          	movff	wreg,LCD_WriteChar@data
  7612                           
  7613                           ;LCD_Library.c: 97: PORTDbits.RD3 = 0;
  7614  001F32  9683               	bcf	3971,3,c	;volatile
  7615                           
  7616                           ;LCD_Library.c: 98: PORTDbits.RD2 = 1;
  7617  001F34  8483               	bsf	3971,2,c	;volatile
  7618                           
  7619                           ;LCD_Library.c: 102: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b0
      +                          1000000)>>6;
  7620  001F36  6A20               	clrf	??_LCD_WriteChar& (0+255),c
  7621  001F38  AE22               	btfss	LCD_WriteChar@data,7,c
  7622  001F3A  D001               	bra	u4015
  7623  001F3C  2A20               	incf	??_LCD_WriteChar& (0+255),f,c
  7624  001F3E                     u4015:
  7625  001F3E  0E01               	movlw	1
  7626  001F40  1620               	andwf	??_LCD_WriteChar,f,c
  7627  001F42  3220               	rrcf	??_LCD_WriteChar,f,c
  7628  001F44  3220               	rrcf	??_LCD_WriteChar,f,c
  7629  001F46  5083               	movf	3971,w,c	;volatile
  7630  001F48  1820               	xorwf	??_LCD_WriteChar,w,c
  7631  001F4A  0B7F               	andlw	-129
  7632  001F4C  1820               	xorwf	??_LCD_WriteChar,w,c
  7633  001F4E  6E83               	movwf	3971,c	;volatile
  7634  001F50  C022  F020         	movff	LCD_WriteChar@data,??_LCD_WriteChar
  7635  001F54  0E06               	movlw	6
  7636  001F56  6E21               	movwf	(??_LCD_WriteChar+1)& (0+255),c
  7637  001F58                     u4025:
  7638  001F58  90D8               	bcf	status,0,c
  7639  001F5A  3220               	rrcf	??_LCD_WriteChar,f,c
  7640  001F5C  2E21               	decfsz	(??_LCD_WriteChar+1)& (0+255),f,c
  7641  001F5E  D7FC               	goto	u4025
  7642  001F60  0E01               	movlw	1
  7643  001F62  1620               	andwf	??_LCD_WriteChar,f,c
  7644  001F64  3A20               	swapf	??_LCD_WriteChar,f,c
  7645  001F66  4620               	rlncf	??_LCD_WriteChar,f,c
  7646  001F68  4620               	rlncf	??_LCD_WriteChar,f,c
  7647  001F6A  5083               	movf	3971,w,c	;volatile
  7648  001F6C  1820               	xorwf	??_LCD_WriteChar,w,c
  7649  001F6E  0BBF               	andlw	-65
  7650  001F70  1820               	xorwf	??_LCD_WriteChar,w,c
  7651  001F72  6E83               	movwf	3971,c	;volatile
  7652                           
  7653                           ;LCD_Library.c: 103: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b0
      +                          0010000)>>4;
  7654  001F74  C022  F020         	movff	LCD_WriteChar@data,??_LCD_WriteChar
  7655  001F78  0E05               	movlw	5
  7656  001F7A  6E21               	movwf	(??_LCD_WriteChar+1)& (0+255),c
  7657  001F7C                     u4035:
  7658  001F7C  90D8               	bcf	status,0,c
  7659  001F7E  3220               	rrcf	??_LCD_WriteChar,f,c
  7660  001F80  2E21               	decfsz	(??_LCD_WriteChar+1)& (0+255),f,c
  7661  001F82  D7FC               	goto	u4035
  7662  001F84  0E01               	movlw	1
  7663  001F86  1620               	andwf	??_LCD_WriteChar,f,c
  7664  001F88  3A20               	swapf	??_LCD_WriteChar,f,c
  7665  001F8A  4620               	rlncf	??_LCD_WriteChar,f,c
  7666  001F8C  5083               	movf	3971,w,c	;volatile
  7667  001F8E  1820               	xorwf	??_LCD_WriteChar,w,c
  7668  001F90  0BDF               	andlw	-33
  7669  001F92  1820               	xorwf	??_LCD_WriteChar,w,c
  7670  001F94  6E83               	movwf	3971,c	;volatile
  7671  001F96  C022  F020         	movff	LCD_WriteChar@data,??_LCD_WriteChar
  7672  001F9A  3A20               	swapf	??_LCD_WriteChar,f,c
  7673  001F9C  0E0F               	movlw	15
  7674  001F9E  1620               	andwf	??_LCD_WriteChar,f,c
  7675  001FA0  0E01               	movlw	1
  7676  001FA2  1620               	andwf	??_LCD_WriteChar,f,c
  7677  001FA4  3A20               	swapf	??_LCD_WriteChar,f,c
  7678  001FA6  5083               	movf	3971,w,c	;volatile
  7679  001FA8  1820               	xorwf	??_LCD_WriteChar,w,c
  7680  001FAA  0BEF               	andlw	-17
  7681  001FAC  1820               	xorwf	??_LCD_WriteChar,w,c
  7682  001FAE  6E83               	movwf	3971,c	;volatile
  7683                           
  7684                           ;LCD_Library.c: 104: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __no
      +                          p(); __nop(); __nop();
  7685  001FB0  F000               	nop	
  7686  001FB2  F000               	nop	
  7687  001FB4  F000               	nop	
  7688  001FB6  F000               	nop	
  7689  001FB8  F000               	nop	
  7690  001FBA  F000               	nop	
  7691  001FBC  F000               	nop	
  7692  001FBE  F000               	nop	
  7693  001FC0  F000               	nop	
  7694  001FC2  F000               	nop	
  7695                           
  7696                           ;LCD_Library.c: 105: PORTDbits.RD3 = 1; Delay_5us(); PORTDbits.RD3 = 0;
  7697  001FC4  8683               	bsf	3971,3,c	;volatile
  7698  001FC6  ECA9  F017         	call	_Delay_5us	;wreg free
  7699  001FCA  9683               	bcf	3971,3,c	;volatile
  7700                           
  7701                           ;LCD_Library.c: 108: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b0
      +                          0000100)>>2;
  7702  001FCC  C022  F020         	movff	LCD_WriteChar@data,??_LCD_WriteChar
  7703  001FD0  90D8               	bcf	status,0,c
  7704  001FD2  3220               	rrcf	??_LCD_WriteChar,f,c
  7705  001FD4  90D8               	bcf	status,0,c
  7706  001FD6  3220               	rrcf	??_LCD_WriteChar,f,c
  7707  001FD8  90D8               	bcf	status,0,c
  7708  001FDA  3220               	rrcf	??_LCD_WriteChar,f,c
  7709  001FDC  0E01               	movlw	1
  7710  001FDE  1620               	andwf	??_LCD_WriteChar,f,c
  7711  001FE0  3220               	rrcf	??_LCD_WriteChar,f,c
  7712  001FE2  3220               	rrcf	??_LCD_WriteChar,f,c
  7713  001FE4  5083               	movf	3971,w,c	;volatile
  7714  001FE6  1820               	xorwf	??_LCD_WriteChar,w,c
  7715  001FE8  0B7F               	andlw	-129
  7716  001FEA  1820               	xorwf	??_LCD_WriteChar,w,c
  7717  001FEC  6E83               	movwf	3971,c	;volatile
  7718  001FEE  C022  F020         	movff	LCD_WriteChar@data,??_LCD_WriteChar
  7719  001FF2  90D8               	bcf	status,0,c
  7720  001FF4  3220               	rrcf	??_LCD_WriteChar,f,c
  7721  001FF6  90D8               	bcf	status,0,c
  7722  001FF8  3220               	rrcf	??_LCD_WriteChar,f,c
  7723  001FFA  0E01               	movlw	1
  7724  001FFC  1620               	andwf	??_LCD_WriteChar,f,c
  7725  001FFE  3A20               	swapf	??_LCD_WriteChar,f,c
  7726  002000  4620               	rlncf	??_LCD_WriteChar,f,c
  7727  002002  4620               	rlncf	??_LCD_WriteChar,f,c
  7728  002004  5083               	movf	3971,w,c	;volatile
  7729  002006  1820               	xorwf	??_LCD_WriteChar,w,c
  7730  002008  0BBF               	andlw	-65
  7731  00200A  1820               	xorwf	??_LCD_WriteChar,w,c
  7732  00200C  6E83               	movwf	3971,c	;volatile
  7733                           
  7734                           ;LCD_Library.c: 109: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b0
      +                          0000001);
  7735  00200E  C022  F020         	movff	LCD_WriteChar@data,??_LCD_WriteChar
  7736  002012  90D8               	bcf	status,0,c
  7737  002014  3220               	rrcf	??_LCD_WriteChar,f,c
  7738  002016  0E01               	movlw	1
  7739  002018  1620               	andwf	??_LCD_WriteChar,f,c
  7740  00201A  3A20               	swapf	??_LCD_WriteChar,f,c
  7741  00201C  4620               	rlncf	??_LCD_WriteChar,f,c
  7742  00201E  5083               	movf	3971,w,c	;volatile
  7743  002020  1820               	xorwf	??_LCD_WriteChar,w,c
  7744  002022  0BDF               	andlw	-33
  7745  002024  1820               	xorwf	??_LCD_WriteChar,w,c
  7746  002026  6E83               	movwf	3971,c	;volatile
  7747  002028  C022  F020         	movff	LCD_WriteChar@data,??_LCD_WriteChar
  7748  00202C  0E01               	movlw	1
  7749  00202E  1620               	andwf	??_LCD_WriteChar,f,c
  7750  002030  3A20               	swapf	??_LCD_WriteChar,f,c
  7751  002032  5083               	movf	3971,w,c	;volatile
  7752  002034  1820               	xorwf	??_LCD_WriteChar,w,c
  7753  002036  0BEF               	andlw	-17
  7754  002038  1820               	xorwf	??_LCD_WriteChar,w,c
  7755  00203A  6E83               	movwf	3971,c	;volatile
  7756                           
  7757                           ;LCD_Library.c: 110: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __no
      +                          p(); __nop(); __nop();
  7758  00203C  F000               	nop	
  7759  00203E  F000               	nop	
  7760  002040  F000               	nop	
  7761  002042  F000               	nop	
  7762  002044  F000               	nop	
  7763  002046  F000               	nop	
  7764  002048  F000               	nop	
  7765  00204A  F000               	nop	
  7766  00204C  F000               	nop	
  7767  00204E  F000               	nop	
  7768                           
  7769                           ;LCD_Library.c: 111: PORTDbits.RD3 = 1; Delay_5us(); PORTDbits.RD3 = 0;
  7770  002050  8683               	bsf	3971,3,c	;volatile
  7771  002052  ECA9  F017         	call	_Delay_5us	;wreg free
  7772  002056  9683               	bcf	3971,3,c	;volatile
  7773                           
  7774                           ;LCD_Library.c: 112: Delay_5ms();
  7775  002058  ECB7  F017         	call	_Delay_5ms	;wreg free
  7776  00205C  0012               	return	
  7777  00205E                     __end_of_LCD_WriteChar:
  7778                           	opt stack 0
  7779                           tblptru	equ	0xFF8
  7780                           tblptrh	equ	0xFF7
  7781                           tblptrl	equ	0xFF6
  7782                           tablat	equ	0xFF5
  7783                           prodl	equ	0xFF3
  7784                           intcon	equ	0xFF2
  7785                           indf0	equ	0xFEF
  7786                           postinc0	equ	0xFEE
  7787                           fsr0h	equ	0xFEA
  7788                           fsr0l	equ	0xFE9
  7789                           wreg	equ	0xFE8
  7790                           postinc1	equ	0xFE6
  7791                           postdec1	equ	0xFE5
  7792                           fsr1l	equ	0xFE1
  7793                           indf2	equ	0xFDF
  7794                           postinc2	equ	0xFDE
  7795                           fsr2h	equ	0xFDA
  7796                           fsr2l	equ	0xFD9
  7797                           status	equ	0xFD8
  7798                           
  7799 ;; *************** function _Delay_5us *****************
  7800 ;; Defined at:
  7801 ;;		line 156 in file "MyDelays.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;		None
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;		None
  7806 ;; Return value:  Size  Location     Type
  7807 ;;		None               void
  7808 ;; Registers used:
  7809 ;;		None
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7815 ;;      Params:         0       0       0       0       0       0       0       0       0
  7816 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7818 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7819 ;;Total ram usage:        0 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:    4
  7822 ;; This function calls:
  7823 ;;		Nothing
  7824 ;; This function is called by:
  7825 ;;		_initialize_LCD
  7826 ;;		_LCD_WriteCommand
  7827 ;;		_LCD_WriteChar
  7828 ;;		_LCD_deviceReady
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           	psect	text29
  7833  002F52                     __ptext29:
  7834                           	opt stack 0
  7835  002F52                     _Delay_5us:
  7836                           	opt stack 23
  7837                           
  7838                           ;MyDelays.c: 163: __nop(); __nop(); __nop(); __nop();__nop();
  7839                           
  7840                           ;incstack = 0
  7841  002F52  F000               	nop	
  7842  002F54  F000               	nop	
  7843  002F56  F000               	nop	
  7844  002F58  F000               	nop	
  7845  002F5A  F000               	nop	
  7846                           
  7847                           ;MyDelays.c: 164: __nop(); __nop(); __nop(); __nop();__nop();
  7848  002F5C  F000               	nop	
  7849  002F5E  F000               	nop	
  7850  002F60  F000               	nop	
  7851  002F62  F000               	nop	
  7852  002F64  F000               	nop	
  7853                           
  7854                           ;MyDelays.c: 165: __nop(); __nop(); __nop();
  7855  002F66  F000               	nop	
  7856  002F68  F000               	nop	
  7857  002F6A  F000               	nop	
  7858  002F6C  0012               	return	
  7859  002F6E                     __end_of_Delay_5us:
  7860                           	opt stack 0
  7861                           tblptru	equ	0xFF8
  7862                           tblptrh	equ	0xFF7
  7863                           tblptrl	equ	0xFF6
  7864                           tablat	equ	0xFF5
  7865                           prodl	equ	0xFF3
  7866                           intcon	equ	0xFF2
  7867                           indf0	equ	0xFEF
  7868                           postinc0	equ	0xFEE
  7869                           fsr0h	equ	0xFEA
  7870                           fsr0l	equ	0xFE9
  7871                           wreg	equ	0xFE8
  7872                           postinc1	equ	0xFE6
  7873                           postdec1	equ	0xFE5
  7874                           fsr1l	equ	0xFE1
  7875                           indf2	equ	0xFDF
  7876                           postinc2	equ	0xFDE
  7877                           fsr2h	equ	0xFDA
  7878                           fsr2l	equ	0xFD9
  7879                           status	equ	0xFD8
  7880                           
  7881 ;; *************** function _Delay_5ms *****************
  7882 ;; Defined at:
  7883 ;;		line 32 in file "MyDelays.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;		None
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  r0              2   29[COMRAM] unsigned short 
  7888 ;; Return value:  Size  Location     Type
  7889 ;;		None               void
  7890 ;; Registers used:
  7891 ;;		wreg, status,2, status,0
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7897 ;;      Params:         0       0       0       0       0       0       0       0       0
  7898 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7899 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7900 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7901 ;;Total ram usage:        2 bytes
  7902 ;; Hardware stack levels used:    1
  7903 ;; Hardware stack levels required when called:    4
  7904 ;; This function calls:
  7905 ;;		Nothing
  7906 ;; This function is called by:
  7907 ;;		_initialize_LCD
  7908 ;;		_LCD_WriteCommand
  7909 ;;		_LCD_WriteChar
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text30
  7914  002F6E                     __ptext30:
  7915                           	opt stack 0
  7916  002F6E                     _Delay_5ms:
  7917                           	opt stack 23
  7918                           
  7919                           ;MyDelays.c: 46: register unsigned short r0;
  7920                           ;MyDelays.c: 47: r0 = 0;
  7921                           
  7922                           ;incstack = 0
  7923  002F6E  0E00               	movlw	0
  7924  002F70  6E1F               	movwf	Delay_5ms@r0+1,c
  7925  002F72  0E00               	movlw	0
  7926  002F74  6E1E               	movwf	Delay_5ms@r0,c
  7927                           
  7928                           ;MyDelays.c: 48: while(r0 < 829)
  7929  002F76  D002               	goto	l4760
  7930  002F78                     l4758:
  7931                           
  7932                           ;MyDelays.c: 49: r0++;
  7933  002F78  4A1E               	infsnz	Delay_5ms@r0,f,c
  7934  002F7A  2A1F               	incf	Delay_5ms@r0+1,f,c
  7935  002F7C                     l4760:
  7936  002F7C  0E3D               	movlw	61
  7937  002F7E  5C1E               	subwf	Delay_5ms@r0,w,c
  7938  002F80  0E03               	movlw	3
  7939  002F82  581F               	subwfb	Delay_5ms@r0+1,w,c
  7940  002F84  B0D8               	btfsc	status,0,c
  7941  002F86  0012               	return	
  7942  002F88  D7F7               	goto	l4758
  7943  002F8A                     __end_of_Delay_5ms:
  7944                           	opt stack 0
  7945                           tblptru	equ	0xFF8
  7946                           tblptrh	equ	0xFF7
  7947                           tblptrl	equ	0xFF6
  7948                           tablat	equ	0xFF5
  7949                           prodl	equ	0xFF3
  7950                           intcon	equ	0xFF2
  7951                           indf0	equ	0xFEF
  7952                           postinc0	equ	0xFEE
  7953                           fsr0h	equ	0xFEA
  7954                           fsr0l	equ	0xFE9
  7955                           wreg	equ	0xFE8
  7956                           postinc1	equ	0xFE6
  7957                           postdec1	equ	0xFE5
  7958                           fsr1l	equ	0xFE1
  7959                           indf2	equ	0xFDF
  7960                           postinc2	equ	0xFDE
  7961                           fsr2h	equ	0xFDA
  7962                           fsr2l	equ	0xFD9
  7963                           status	equ	0xFD8
  7964                           
  7965 ;; *************** function _INTERRUPT_SERVICE_ROUTING *****************
  7966 ;; Defined at:
  7967 ;;		line 851 in file "main.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;		None
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;		None
  7972 ;; Return value:  Size  Location     Type
  7973 ;;		None               void
  7974 ;; Registers used:
  7975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7981 ;;      Params:         0       0       0       0       0       0       0       0       0
  7982 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7983 ;;      Temps:         16       0       0       0       0       0       0       0       0
  7984 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7985 ;;Total ram usage:       16 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:    3
  7988 ;; This function calls:
  7989 ;;		i2_Delay_1000ms
  7990 ;;		i2_LCD_WriteCharAt
  7991 ;;		i2_LCD_WriteCommand
  7992 ;;		i2_LCD_WriteStringAt
  7993 ;;		i2___awdiv
  7994 ;;		i2___awmod
  7995 ;; This function is called by:
  7996 ;;		Interrupt level 2
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	intcode
  8001  000008                     __pintcode:
  8002                           	opt stack 0
  8003  000008                     _INTERRUPT_SERVICE_ROUTING:
  8004                           	opt stack 19
  8005                           
  8006                           ;incstack = 0
  8007  000008  CFFA F010          	movff	pclath,??_INTERRUPT_SERVICE_ROUTING+2
  8008  00000C  CFFB F011          	movff	pclatu,??_INTERRUPT_SERVICE_ROUTING+3
  8009  000010  CFE9 F012          	movff	fsr0l,??_INTERRUPT_SERVICE_ROUTING+4
  8010  000014  EDD8  F00D         	call	int_func,f	;refresh shadow registers
  8011                           pclatu	equ	0xFFB
  8012                           pclath	equ	0xFFA
  8013                           tblptru	equ	0xFF8
  8014                           tblptrh	equ	0xFF7
  8015                           tblptrl	equ	0xFF6
  8016                           tablat	equ	0xFF5
  8017                           prodl	equ	0xFF3
  8018                           intcon	equ	0xFF2
  8019                           indf0	equ	0xFEF
  8020                           postinc0	equ	0xFEE
  8021                           fsr0h	equ	0xFEA
  8022                           fsr0l	equ	0xFE9
  8023                           wreg	equ	0xFE8
  8024                           postinc1	equ	0xFE6
  8025                           postdec1	equ	0xFE5
  8026                           fsr1l	equ	0xFE1
  8027                           indf2	equ	0xFDF
  8028                           postinc2	equ	0xFDE
  8029                           fsr2h	equ	0xFDA
  8030                           fsr2l	equ	0xFD9
  8031                           status	equ	0xFD8
  8032                           
  8033                           	psect	intcode_body
  8034  001BB0                     __pintcode_body:
  8035                           	opt stack 19
  8036  001BB0                     int_func:
  8037                           	opt stack 19
  8038  001BB0  0006               	pop		; remove dummy address from shadow register refresh
  8039  001BB2  CFEA F013          	movff	fsr0h,??_INTERRUPT_SERVICE_ROUTING+5
  8040  001BB6  CFE1 F014          	movff	fsr1l,??_INTERRUPT_SERVICE_ROUTING+6
  8041  001BBA  CFE2 F015          	movff	fsr1h,??_INTERRUPT_SERVICE_ROUTING+7
  8042  001BBE  CFD9 F016          	movff	fsr2l,??_INTERRUPT_SERVICE_ROUTING+8
  8043  001BC2  CFDA F017          	movff	fsr2h,??_INTERRUPT_SERVICE_ROUTING+9
  8044  001BC6  CFF3 F018          	movff	prodl,??_INTERRUPT_SERVICE_ROUTING+10
  8045  001BCA  CFF4 F019          	movff	prodh,??_INTERRUPT_SERVICE_ROUTING+11
  8046  001BCE  CFF6 F01A          	movff	tblptrl,??_INTERRUPT_SERVICE_ROUTING+12
  8047  001BD2  CFF7 F01B          	movff	tblptrh,??_INTERRUPT_SERVICE_ROUTING+13
  8048  001BD6  CFF8 F01C          	movff	tblptru,??_INTERRUPT_SERVICE_ROUTING+14
  8049  001BDA  CFF5 F01D          	movff	tablat,??_INTERRUPT_SERVICE_ROUTING+15
  8050                           
  8051                           ;main.c: 852: if (PIR1bits.TMR2IF == 1) {
  8052  001BDE  A29E               	btfss	3998,1,c	;volatile
  8053  001BE0  D02D               	goto	i2l6108
  8054                           
  8055                           ;main.c: 853: PIR1bits.TMR2IF = 0;
  8056  001BE2  929E               	bcf	3998,1,c	;volatile
  8057                           
  8058                           ;main.c: 854: mili_seconds++;
  8059  001BE4  4A3A               	infsnz	_mili_seconds,f,c
  8060  001BE6  2A3B               	incf	_mili_seconds+1,f,c
  8061                           
  8062                           ;main.c: 855: timeFrame_cnt++;
  8063  001BE8  2A41               	incf	_timeFrame_cnt,f,c
  8064                           
  8065                           ;main.c: 856: if (mili_seconds == 100) {
  8066  001BEA  503A               	movf	_mili_seconds,w,c
  8067  001BEC  0A64               	xorlw	100
  8068  001BEE  103B               	iorwf	_mili_seconds+1,w,c
  8069  001BF0  A4D8               	btfss	status,2,c
  8070  001BF2  D024               	goto	i2l6108
  8071                           
  8072                           ;main.c: 857: mili_seconds = 0;
  8073  001BF4  0E00               	movlw	0
  8074  001BF6  6E3B               	movwf	_mili_seconds+1,c
  8075  001BF8  0E00               	movlw	0
  8076  001BFA  6E3A               	movwf	_mili_seconds,c
  8077                           
  8078                           ;main.c: 858: seconds++;
  8079  001BFC  2A40               	incf	_seconds,f,c
  8080                           
  8081                           ;main.c: 859: if (seconds == 60) {
  8082  001BFE  5040               	movf	_seconds,w,c
  8083  001C00  0A3C               	xorlw	60
  8084  001C02  A4D8               	btfss	status,2,c
  8085  001C04  D01B               	goto	i2l6108
  8086                           
  8087                           ;main.c: 860: seconds = 0;
  8088  001C06  6E0E               	movwf	??_INTERRUPT_SERVICE_ROUTING& (0+255),c
  8089  001C08  0E00               	movlw	0
  8090  001C0A  6E40               	movwf	_seconds,c
  8091  001C0C  500E               	movf	??_INTERRUPT_SERVICE_ROUTING& (0+255),w,c
  8092                           
  8093                           ;main.c: 861: minutes++;
  8094  001C0E  2A3F               	incf	_minutes,f,c
  8095                           
  8096                           ;main.c: 862: if (minutes == 60) {
  8097  001C10  503F               	movf	_minutes,w,c
  8098  001C12  0A3C               	xorlw	60
  8099  001C14  A4D8               	btfss	status,2,c
  8100  001C16  D012               	goto	i2l6108
  8101                           
  8102                           ;main.c: 863: hours = (hours + 1) % 12;
  8103  001C18  0E01               	movlw	1
  8104  001C1A  243E               	addwf	_hours,w,c
  8105  001C1C  6E01               	movwf	i2___awmod@dividend,c
  8106  001C1E  6A02               	clrf	i2___awmod@dividend+1,c
  8107  001C20  0E00               	movlw	0
  8108  001C22  2202               	addwfc	i2___awmod@dividend+1,f,c
  8109  001C24  0E00               	movlw	0
  8110  001C26  6E04               	movwf	i2___awmod@divisor+1,c
  8111  001C28  0E0C               	movlw	12
  8112  001C2A  6E03               	movwf	i2___awmod@divisor,c
  8113  001C2C  ECCC  F014         	call	i2___awmod	;wreg free
  8114  001C30  5001               	movf	?i2___awmod,w,c
  8115  001C32  6E3E               	movwf	_hours,c
  8116                           
  8117                           ;main.c: 864: minutes = 0;
  8118  001C34  6E0E               	movwf	??_INTERRUPT_SERVICE_ROUTING& (0+255),c
  8119  001C36  0E00               	movlw	0
  8120  001C38  6E3F               	movwf	_minutes,c
  8121  001C3A  500E               	movf	??_INTERRUPT_SERVICE_ROUTING& (0+255),w,c
  8122  001C3C                     i2l6108:
  8123                           
  8124                           ;main.c: 865: }
  8125                           ;main.c: 866: }
  8126                           ;main.c: 867: }
  8127                           ;main.c: 868: }
  8128                           ;main.c: 871: if (timeFrame_cnt >= 12 && GLOBLE_TMOD == PAPER_MOD_SIMPLE) {
  8129  001C3C  0E0B               	movlw	11
  8130  001C3E  6441               	cpfsgt	_timeFrame_cnt,c
  8131  001C40  D08F               	goto	i2l6124
  8132  001C42  043C               	decf	_GLOBLE_TMOD,w,c
  8133  001C44  A4D8               	btfss	status,2,c
  8134  001C46  D08C               	goto	i2l6124
  8135                           
  8136                           ;main.c: 872: LCD_WriteCharAt(1, 13, 0x30 + hours / 10);
  8137  001C48  6E0E               	movwf	??_INTERRUPT_SERVICE_ROUTING& (0+255),c
  8138  001C4A  0E0D               	movlw	13
  8139  001C4C  6E0A               	movwf	i2LCD_WriteCharAt@column,c
  8140  001C4E  500E               	movf	??_INTERRUPT_SERVICE_ROUTING& (0+255),w,c
  8141  001C50  C03E  F001         	movff	_hours,i2___awdiv@dividend
  8142  001C54  6A02               	clrf	i2___awdiv@dividend+1,c
  8143  001C56  0E00               	movlw	0
  8144  001C58  6E04               	movwf	i2___awdiv@divisor+1,c
  8145  001C5A  0E0A               	movlw	10
  8146  001C5C  6E03               	movwf	i2___awdiv@divisor,c
  8147  001C5E  EC38  F013         	call	i2___awdiv	;wreg free
  8148  001C62  5001               	movf	?i2___awdiv,w,c
  8149  001C64  0F30               	addlw	48
  8150  001C66  6E0B               	movwf	i2LCD_WriteCharAt@chr,c
  8151  001C68  0E01               	movlw	1
  8152  001C6A  ECE0  F016         	call	i2_LCD_WriteCharAt
  8153                           
  8154                           ;main.c: 873: LCD_WriteCharAt(1, 14, 0x30 + hours % 10);
  8155  001C6E  6E0E               	movwf	??_INTERRUPT_SERVICE_ROUTING& (0+255),c
  8156  001C70  0E0E               	movlw	14
  8157  001C72  6E0A               	movwf	i2LCD_WriteCharAt@column,c
  8158  001C74  500E               	movf	??_INTERRUPT_SERVICE_ROUTING& (0+255),w,c
  8159  001C76  C03E  F001         	movff	_hours,i2___awmod@dividend
  8160  001C7A  6A02               	clrf	i2___awmod@dividend+1,c
  8161  001C7C  0E00               	movlw	0
  8162  001C7E  6E04               	movwf	i2___awmod@divisor+1,c
  8163  001C80  0E0A               	movlw	10
  8164  001C82  6E03               	movwf	i2___awmod@divisor,c
  8165  001C84  ECCC  F014         	call	i2___awmod	;wreg free
  8166  001C88  5001               	movf	?i2___awmod,w,c
  8167  001C8A  0F30               	addlw	48
  8168  001C8C  6E0B               	movwf	i2LCD_WriteCharAt@chr,c
  8169  001C8E  0E01               	movlw	1
  8170  001C90  ECE0  F016         	call	i2_LCD_WriteCharAt
  8171                           
  8172                           ;main.c: 874: LCD_WriteCharAt(1, 15, ':');
  8173  001C94  6E0E               	movwf	??_INTERRUPT_SERVICE_ROUTING& (0+255),c
  8174  001C96  0E0F               	movlw	15
  8175  001C98  6E0A               	movwf	i2LCD_WriteCharAt@column,c
  8176  001C9A  500E               	movf	??_INTERRUPT_SERVICE_ROUTING& (0+255),w,c
  8177  001C9C  6E0F               	movwf	(??_INTERRUPT_SERVICE_ROUTING+1)& (0+255),c
  8178  001C9E  0E3A               	movlw	58
  8179  001CA0  6E0B               	movwf	i2LCD_WriteCharAt@chr,c
  8180  001CA2  500F               	movf	(??_INTERRUPT_SERVICE_ROUTING+1)& (0+255),w,c
  8181  001CA4  0E01               	movlw	1
  8182  001CA6  ECE0  F016         	call	i2_LCD_WriteCharAt
  8183                           
  8184                           ;main.c: 875: LCD_WriteCharAt(1, 16, 0x30 + minutes / 10);
  8185  001CAA  6E0E               	movwf	??_INTERRUPT_SERVICE_ROUTING& (0+255),c
  8186  001CAC  0E10               	movlw	16
  8187  001CAE  6E0A               	movwf	i2LCD_WriteCharAt@column,c
  8188  001CB0  500E               	movf	??_INTERRUPT_SERVICE_ROUTING& (0+255),w,c
  8189  001CB2  C03F  F001         	movff	_minutes,i2___awdiv@dividend
  8190  001CB6  6A02               	clrf	i2___awdiv@dividend+1,c
  8191  001CB8  0E00               	movlw	0
  8192  001CBA  6E04               	movwf	i2___awdiv@divisor+1,c
  8193  001CBC  0E0A               	movlw	10
  8194  001CBE  6E03               	movwf	i2___awdiv@divisor,c
  8195  001CC0  EC38  F013         	call	i2___awdiv	;wreg free
  8196  001CC4  5001               	movf	?i2___awdiv,w,c
  8197  001CC6  0F30               	addlw	48
  8198  001CC8  6E0B               	movwf	i2LCD_WriteCharAt@chr,c
  8199  001CCA  0E01               	movlw	1
  8200  001CCC  ECE0  F016         	call	i2_LCD_WriteCharAt
  8201                           
  8202                           ;main.c: 876: LCD_WriteCharAt(1, 17, 0x30 + minutes % 10);
  8203  001CD0  6E0E               	movwf	??_INTERRUPT_SERVICE_ROUTING& (0+255),c
  8204  001CD2  0E11               	movlw	17
  8205  001CD4  6E0A               	movwf	i2LCD_WriteCharAt@column,c
  8206  001CD6  500E               	movf	??_INTERRUPT_SERVICE_ROUTING& (0+255),w,c
  8207  001CD8  C03F  F001         	movff	_minutes,i2___awmod@dividend
  8208  001CDC  6A02               	clrf	i2___awmod@dividend+1,c
  8209  001CDE  0E00               	movlw	0
  8210  001CE0  6E04               	movwf	i2___awmod@divisor+1,c
  8211  001CE2  0E0A               	movlw	10
  8212  001CE4  6E03               	movwf	i2___awmod@divisor,c
  8213  001CE6  ECCC  F014         	call	i2___awmod	;wreg free
  8214  001CEA  5001               	movf	?i2___awmod,w,c
  8215  001CEC  0F30               	addlw	48
  8216  001CEE  6E0B               	movwf	i2LCD_WriteCharAt@chr,c
  8217  001CF0  0E01               	movlw	1
  8218  001CF2  ECE0  F016         	call	i2_LCD_WriteCharAt
  8219                           
  8220                           ;main.c: 877: LCD_WriteCharAt(1, 18, ':');
  8221  001CF6  6E0E               	movwf	??_INTERRUPT_SERVICE_ROUTING& (0+255),c
  8222  001CF8  0E12               	movlw	18
  8223  001CFA  6E0A               	movwf	i2LCD_WriteCharAt@column,c
  8224  001CFC  500E               	movf	??_INTERRUPT_SERVICE_ROUTING& (0+255),w,c
  8225  001CFE  6E0F               	movwf	(??_INTERRUPT_SERVICE_ROUTING+1)& (0+255),c
  8226  001D00  0E3A               	movlw	58
  8227  001D02  6E0B               	movwf	i2LCD_WriteCharAt@chr,c
  8228  001D04  500F               	movf	(??_INTERRUPT_SERVICE_ROUTING+1)& (0+255),w,c
  8229  001D06  0E01               	movlw	1
  8230  001D08  ECE0  F016         	call	i2_LCD_WriteCharAt
  8231                           
  8232                           ;main.c: 878: LCD_WriteCharAt(1, 19, 0x30 + seconds / 10);
  8233  001D0C  6E0E               	movwf	??_INTERRUPT_SERVICE_ROUTING& (0+255),c
  8234  001D0E  0E13               	movlw	19
  8235  001D10  6E0A               	movwf	i2LCD_WriteCharAt@column,c
  8236  001D12  500E               	movf	??_INTERRUPT_SERVICE_ROUTING& (0+255),w,c
  8237  001D14  C040  F001         	movff	_seconds,i2___awdiv@dividend
  8238  001D18  6A02               	clrf	i2___awdiv@dividend+1,c
  8239  001D1A  0E00               	movlw	0
  8240  001D1C  6E04               	movwf	i2___awdiv@divisor+1,c
  8241  001D1E  0E0A               	movlw	10
  8242  001D20  6E03               	movwf	i2___awdiv@divisor,c
  8243  001D22  EC38  F013         	call	i2___awdiv	;wreg free
  8244  001D26  5001               	movf	?i2___awdiv,w,c
  8245  001D28  0F30               	addlw	48
  8246  001D2A  6E0B               	movwf	i2LCD_WriteCharAt@chr,c
  8247  001D2C  0E01               	movlw	1
  8248  001D2E  ECE0  F016         	call	i2_LCD_WriteCharAt
  8249                           
  8250                           ;main.c: 879: LCD_WriteCharAt(1, 20, 0x30 + seconds % 10);
  8251  001D32  6E0E               	movwf	??_INTERRUPT_SERVICE_ROUTING& (0+255),c
  8252  001D34  0E14               	movlw	20
  8253  001D36  6E0A               	movwf	i2LCD_WriteCharAt@column,c
  8254  001D38  500E               	movf	??_INTERRUPT_SERVICE_ROUTING& (0+255),w,c
  8255  001D3A  C040  F001         	movff	_seconds,i2___awmod@dividend
  8256  001D3E  6A02               	clrf	i2___awmod@dividend+1,c
  8257  001D40  0E00               	movlw	0
  8258  001D42  6E04               	movwf	i2___awmod@divisor+1,c
  8259  001D44  0E0A               	movlw	10
  8260  001D46  6E03               	movwf	i2___awmod@divisor,c
  8261  001D48  ECCC  F014         	call	i2___awmod	;wreg free
  8262  001D4C  5001               	movf	?i2___awmod,w,c
  8263  001D4E  0F30               	addlw	48
  8264  001D50  6E0B               	movwf	i2LCD_WriteCharAt@chr,c
  8265  001D52  0E01               	movlw	1
  8266  001D54  ECE0  F016         	call	i2_LCD_WriteCharAt
  8267                           
  8268                           ;main.c: 880: timeFrame_cnt = 0;
  8269  001D58  6E0E               	movwf	??_INTERRUPT_SERVICE_ROUTING& (0+255),c
  8270  001D5A  0E00               	movlw	0
  8271  001D5C  6E41               	movwf	_timeFrame_cnt,c
  8272  001D5E  500E               	movf	??_INTERRUPT_SERVICE_ROUTING& (0+255),w,c
  8273  001D60                     i2l6124:
  8274                           
  8275                           ;main.c: 881: }
  8276                           ;main.c: 884: if (hours == hourCnt && minutes == minCnt) {
  8277  001D60  0100               	movlb	0	; () banked
  8278  001D62  0100               	movlb	0	; () banked
  8279  001D64  51FE               	movf	_hourCnt& (0+255),w,b
  8280  001D66  623E               	cpfseq	_hours,c
  8281  001D68  D02D               	goto	i2l489
  8282                           
  8283                           ; BSR set to: 0
  8284  001D6A  0100               	movlb	0	; () banked
  8285  001D6C  0100               	movlb	0	; () banked
  8286  001D6E  51FF               	movf	_minCnt& (0+255),w,b
  8287  001D70  623F               	cpfseq	_minutes,c
  8288  001D72  D028               	goto	i2l489
  8289                           
  8290                           ; BSR set to: 0
  8291                           ;main.c: 885: LCD_WriteCommand(0x01);
  8292  001D74  0E01               	movlw	1
  8293  001D76  EC2F  F010         	call	i2_LCD_WriteCommand
  8294                           
  8295                           ;main.c: 886: LCD_WriteStringAt(2, 1, "Time up!");
  8296  001D7A  6E0E               	movwf	??_INTERRUPT_SERVICE_ROUTING& (0+255),c
  8297  001D7C  0E01               	movlw	1
  8298  001D7E  6E06               	movwf	i2LCD_WriteStringAt@column,c
  8299  001D80  500E               	movf	??_INTERRUPT_SERVICE_ROUTING& (0+255),w,c
  8300  001D82  0E08               	movlw	high STR_10
  8301  001D84  6E08               	movwf	i2LCD_WriteStringAt@string+1,c
  8302  001D86  0E6E               	movlw	low STR_10
  8303  001D88  6E07               	movwf	i2LCD_WriteStringAt@string,c
  8304  001D8A  0E02               	movlw	2
  8305  001D8C  EC63  F015         	call	i2_LCD_WriteStringAt
  8306                           
  8307                           ;main.c: 887: LCD_WriteStringAt(3, 1, "Hand over the device");
  8308  001D90  6E0E               	movwf	??_INTERRUPT_SERVICE_ROUTING& (0+255),c
  8309  001D92  0E01               	movlw	1
  8310  001D94  6E06               	movwf	i2LCD_WriteStringAt@column,c
  8311  001D96  500E               	movf	??_INTERRUPT_SERVICE_ROUTING& (0+255),w,c
  8312  001D98  0E08               	movlw	high STR_11
  8313  001D9A  6E08               	movwf	i2LCD_WriteStringAt@string+1,c
  8314  001D9C  0E01               	movlw	low STR_11
  8315  001D9E  6E07               	movwf	i2LCD_WriteStringAt@string,c
  8316  001DA0  0E03               	movlw	3
  8317  001DA2  EC63  F015         	call	i2_LCD_WriteStringAt
  8318                           
  8319                           ;main.c: 888: LCD_WriteStringAt(4, 1, "Thank you!");
  8320  001DA6  6E0E               	movwf	??_INTERRUPT_SERVICE_ROUTING& (0+255),c
  8321  001DA8  0E01               	movlw	1
  8322  001DAA  6E06               	movwf	i2LCD_WriteStringAt@column,c
  8323  001DAC  500E               	movf	??_INTERRUPT_SERVICE_ROUTING& (0+255),w,c
  8324  001DAE  0E08               	movlw	high STR_12
  8325  001DB0  6E08               	movwf	i2LCD_WriteStringAt@string+1,c
  8326  001DB2  0E63               	movlw	low STR_12
  8327  001DB4  6E07               	movwf	i2LCD_WriteStringAt@string,c
  8328  001DB6  0E04               	movlw	4
  8329  001DB8  EC63  F015         	call	i2_LCD_WriteStringAt
  8330                           
  8331                           ;main.c: 889: Delay_1000ms();
  8332  001DBC  EC54  F017         	call	i2_Delay_1000ms	;wreg free
  8333                           
  8334                           ;main.c: 890: Delay_1000ms();
  8335  001DC0  EC54  F017         	call	i2_Delay_1000ms	;wreg free
  8336  001DC4                     i2l489:
  8337  001DC4  C01D  FFF5         	movff	??_INTERRUPT_SERVICE_ROUTING+15,tablat
  8338  001DC8  C01C  FFF8         	movff	??_INTERRUPT_SERVICE_ROUTING+14,tblptru
  8339  001DCC  C01B  FFF7         	movff	??_INTERRUPT_SERVICE_ROUTING+13,tblptrh
  8340  001DD0  C01A  FFF6         	movff	??_INTERRUPT_SERVICE_ROUTING+12,tblptrl
  8341  001DD4  C019  FFF4         	movff	??_INTERRUPT_SERVICE_ROUTING+11,prodh
  8342  001DD8  C018  FFF3         	movff	??_INTERRUPT_SERVICE_ROUTING+10,prodl
  8343  001DDC  C017  FFDA         	movff	??_INTERRUPT_SERVICE_ROUTING+9,fsr2h
  8344  001DE0  C016  FFD9         	movff	??_INTERRUPT_SERVICE_ROUTING+8,fsr2l
  8345  001DE4  C015  FFE2         	movff	??_INTERRUPT_SERVICE_ROUTING+7,fsr1h
  8346  001DE8  C014  FFE1         	movff	??_INTERRUPT_SERVICE_ROUTING+6,fsr1l
  8347  001DEC  C013  FFEA         	movff	??_INTERRUPT_SERVICE_ROUTING+5,fsr0h
  8348  001DF0  C012  FFE9         	movff	??_INTERRUPT_SERVICE_ROUTING+4,fsr0l
  8349  001DF4  C011  FFFB         	movff	??_INTERRUPT_SERVICE_ROUTING+3,pclatu
  8350  001DF8  C010  FFFA         	movff	??_INTERRUPT_SERVICE_ROUTING+2,pclath
  8351  001DFC  0011               	retfie		f
  8352  001DFE                     __end_of_INTERRUPT_SERVICE_ROUTING:
  8353                           	opt stack 0
  8354                           pclatu	equ	0xFFB
  8355                           pclath	equ	0xFFA
  8356                           tblptru	equ	0xFF8
  8357                           tblptrh	equ	0xFF7
  8358                           tblptrl	equ	0xFF6
  8359                           tablat	equ	0xFF5
  8360                           prodh	equ	0xFF4
  8361                           prodl	equ	0xFF3
  8362                           intcon	equ	0xFF2
  8363                           indf0	equ	0xFEF
  8364                           postinc0	equ	0xFEE
  8365                           fsr0h	equ	0xFEA
  8366                           fsr0l	equ	0xFE9
  8367                           wreg	equ	0xFE8
  8368                           postinc1	equ	0xFE6
  8369                           postdec1	equ	0xFE5
  8370                           fsr1h	equ	0xFE2
  8371                           fsr1l	equ	0xFE1
  8372                           indf2	equ	0xFDF
  8373                           postinc2	equ	0xFDE
  8374                           fsr2h	equ	0xFDA
  8375                           fsr2l	equ	0xFD9
  8376                           status	equ	0xFD8
  8377                           
  8378 ;; *************** function i2___awmod *****************
  8379 ;; Defined at:
  8380 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awmod.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;  dividend        2    0[COMRAM] int 
  8383 ;;  divisor         2    2[COMRAM] int 
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;  __awmod         1    6[COMRAM] unsigned char 
  8386 ;;  __awmod         1    5[COMRAM] unsigned char 
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  2    0[COMRAM] int 
  8389 ;; Registers used:
  8390 ;;		wreg, status,2, status,0, prodl
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/0
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8396 ;;      Params:         4       0       0       0       0       0       0       0       0
  8397 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8398 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8399 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8400 ;;Total ram usage:        7 bytes
  8401 ;; Hardware stack levels used:    1
  8402 ;; This function calls:
  8403 ;;		Nothing
  8404 ;; This function is called by:
  8405 ;;		_INTERRUPT_SERVICE_ROUTING
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           	psect	text32
  8410  002998                     __ptext32:
  8411                           	opt stack 0
  8412  002998                     i2___awmod:
  8413                           	opt stack 21
  8414                           
  8415                           ;incstack = 0
  8416  002998  6E05               	movwf	??i2___awmod& (0+255),c
  8417  00299A  0E00               	movlw	0
  8418  00299C  6E07               	movwf	i2___awmod@sign,c
  8419  00299E  5005               	movf	??i2___awmod& (0+255),w,c
  8420  0029A0  5002               	movf	i2___awmod@dividend+1,w,c
  8421  0029A2  0A80               	xorlw	128
  8422  0029A4  6EF3               	movwf	prodl,c
  8423  0029A6  0E80               	movlw	128
  8424  0029A8  5CF3               	subwf	prodl,w,c
  8425  0029AA  0E00               	movlw	0
  8426  0029AC  B4D8               	btfsc	status,2,c
  8427  0029AE  5C01               	subwf	i2___awmod@dividend,w,c
  8428  0029B0  B0D8               	btfsc	status,0,c
  8429  0029B2  D008               	goto	i2l4518
  8430  0029B4  6C01               	negf	i2___awmod@dividend,c
  8431  0029B6  1E02               	comf	i2___awmod@dividend+1,f,c
  8432  0029B8  B0D8               	btfsc	status,0,c
  8433  0029BA  2A02               	incf	i2___awmod@dividend+1,f,c
  8434  0029BC  6E05               	movwf	??i2___awmod& (0+255),c
  8435  0029BE  0E01               	movlw	1
  8436  0029C0  6E07               	movwf	i2___awmod@sign,c
  8437  0029C2  5005               	movf	??i2___awmod& (0+255),w,c
  8438  0029C4                     i2l4518:
  8439  0029C4  5004               	movf	i2___awmod@divisor+1,w,c
  8440  0029C6  0A80               	xorlw	128
  8441  0029C8  6EF3               	movwf	prodl,c
  8442  0029CA  0E80               	movlw	128
  8443  0029CC  5CF3               	subwf	prodl,w,c
  8444  0029CE  0E00               	movlw	0
  8445  0029D0  B4D8               	btfsc	status,2,c
  8446  0029D2  5C03               	subwf	i2___awmod@divisor,w,c
  8447  0029D4  B0D8               	btfsc	status,0,c
  8448  0029D6  D004               	goto	i2l4522
  8449  0029D8  6C03               	negf	i2___awmod@divisor,c
  8450  0029DA  1E04               	comf	i2___awmod@divisor+1,f,c
  8451  0029DC  B0D8               	btfsc	status,0,c
  8452  0029DE  2A04               	incf	i2___awmod@divisor+1,f,c
  8453  0029E0                     i2l4522:
  8454  0029E0  5004               	movf	i2___awmod@divisor+1,w,c
  8455  0029E2  1003               	iorwf	i2___awmod@divisor,w,c
  8456  0029E4  B4D8               	btfsc	status,2,c
  8457  0029E6  D01A               	goto	i2l4538
  8458  0029E8  6E05               	movwf	??i2___awmod& (0+255),c
  8459  0029EA  0E01               	movlw	1
  8460  0029EC  6E06               	movwf	i2___awmod@counter,c
  8461  0029EE  5005               	movf	??i2___awmod& (0+255),w,c
  8462  0029F0  D004               	goto	i2l4528
  8463  0029F2                     i2l4526:
  8464  0029F2  90D8               	bcf	status,0,c
  8465  0029F4  3603               	rlcf	i2___awmod@divisor,f,c
  8466  0029F6  3604               	rlcf	i2___awmod@divisor+1,f,c
  8467  0029F8  2A06               	incf	i2___awmod@counter,f,c
  8468  0029FA                     i2l4528:
  8469  0029FA  AE04               	btfss	i2___awmod@divisor+1,7,c
  8470  0029FC  D7FA               	goto	i2l4526
  8471  0029FE                     i2l4530:
  8472  0029FE  5003               	movf	i2___awmod@divisor,w,c
  8473  002A00  5C01               	subwf	i2___awmod@dividend,w,c
  8474  002A02  5004               	movf	i2___awmod@divisor+1,w,c
  8475  002A04  5802               	subwfb	i2___awmod@dividend+1,w,c
  8476  002A06  A0D8               	btfss	status,0,c
  8477  002A08  D004               	goto	i2l4534
  8478  002A0A  5003               	movf	i2___awmod@divisor,w,c
  8479  002A0C  5E01               	subwf	i2___awmod@dividend,f,c
  8480  002A0E  5004               	movf	i2___awmod@divisor+1,w,c
  8481  002A10  5A02               	subwfb	i2___awmod@dividend+1,f,c
  8482  002A12                     i2l4534:
  8483  002A12  90D8               	bcf	status,0,c
  8484  002A14  3204               	rrcf	i2___awmod@divisor+1,f,c
  8485  002A16  3203               	rrcf	i2___awmod@divisor,f,c
  8486  002A18  2E06               	decfsz	i2___awmod@counter,f,c
  8487  002A1A  D7F1               	goto	i2l4530
  8488  002A1C                     i2l4538:
  8489  002A1C  5007               	movf	i2___awmod@sign,w,c
  8490  002A1E  B4D8               	btfsc	status,2,c
  8491  002A20  D004               	goto	i2l4542
  8492  002A22  6C01               	negf	i2___awmod@dividend,c
  8493  002A24  1E02               	comf	i2___awmod@dividend+1,f,c
  8494  002A26  B0D8               	btfsc	status,0,c
  8495  002A28  2A02               	incf	i2___awmod@dividend+1,f,c
  8496  002A2A                     i2l4542:
  8497  002A2A  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  8498  002A2E  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  8499  002A32  0012               	return	
  8500  002A34                     __end_ofi2___awmod:
  8501                           	opt stack 0
  8502                           pclatu	equ	0xFFB
  8503                           pclath	equ	0xFFA
  8504                           tblptru	equ	0xFF8
  8505                           tblptrh	equ	0xFF7
  8506                           tblptrl	equ	0xFF6
  8507                           tablat	equ	0xFF5
  8508                           prodh	equ	0xFF4
  8509                           prodl	equ	0xFF3
  8510                           intcon	equ	0xFF2
  8511                           indf0	equ	0xFEF
  8512                           postinc0	equ	0xFEE
  8513                           fsr0h	equ	0xFEA
  8514                           fsr0l	equ	0xFE9
  8515                           wreg	equ	0xFE8
  8516                           postinc1	equ	0xFE6
  8517                           postdec1	equ	0xFE5
  8518                           fsr1h	equ	0xFE2
  8519                           fsr1l	equ	0xFE1
  8520                           indf2	equ	0xFDF
  8521                           postinc2	equ	0xFDE
  8522                           fsr2h	equ	0xFDA
  8523                           fsr2l	equ	0xFD9
  8524                           status	equ	0xFD8
  8525                           
  8526 ;; *************** function i2___awdiv *****************
  8527 ;; Defined at:
  8528 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awdiv.c"
  8529 ;; Parameters:    Size  Location     Type
  8530 ;;  dividend        2    0[COMRAM] int 
  8531 ;;  divisor         2    2[COMRAM] int 
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;  __awdiv         2    7[COMRAM] int 
  8534 ;;  __awdiv         1    6[COMRAM] unsigned char 
  8535 ;;  __awdiv         1    5[COMRAM] unsigned char 
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  2    0[COMRAM] int 
  8538 ;; Registers used:
  8539 ;;		wreg, status,2, status,0, prodl
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8545 ;;      Params:         4       0       0       0       0       0       0       0       0
  8546 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8547 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8548 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8549 ;;Total ram usage:        9 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; This function calls:
  8552 ;;		Nothing
  8553 ;; This function is called by:
  8554 ;;		_INTERRUPT_SERVICE_ROUTING
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           	psect	text33
  8559  002670                     __ptext33:
  8560                           	opt stack 0
  8561  002670                     i2___awdiv:
  8562                           	opt stack 21
  8563                           
  8564                           ;incstack = 0
  8565  002670  6E05               	movwf	??i2___awdiv& (0+255),c
  8566  002672  0E00               	movlw	0
  8567  002674  6E07               	movwf	i2___awdiv@sign,c
  8568  002676  5005               	movf	??i2___awdiv& (0+255),w,c
  8569  002678  5004               	movf	i2___awdiv@divisor+1,w,c
  8570  00267A  0A80               	xorlw	128
  8571  00267C  6EF3               	movwf	prodl,c
  8572  00267E  0E80               	movlw	128
  8573  002680  5CF3               	subwf	prodl,w,c
  8574  002682  0E00               	movlw	0
  8575  002684  B4D8               	btfsc	status,2,c
  8576  002686  5C03               	subwf	i2___awdiv@divisor,w,c
  8577  002688  B0D8               	btfsc	status,0,c
  8578  00268A  D008               	goto	i2l4474
  8579  00268C  6C03               	negf	i2___awdiv@divisor,c
  8580  00268E  1E04               	comf	i2___awdiv@divisor+1,f,c
  8581  002690  B0D8               	btfsc	status,0,c
  8582  002692  2A04               	incf	i2___awdiv@divisor+1,f,c
  8583  002694  6E05               	movwf	??i2___awdiv& (0+255),c
  8584  002696  0E01               	movlw	1
  8585  002698  6E07               	movwf	i2___awdiv@sign,c
  8586  00269A  5005               	movf	??i2___awdiv& (0+255),w,c
  8587  00269C                     i2l4474:
  8588  00269C  5002               	movf	i2___awdiv@dividend+1,w,c
  8589  00269E  0A80               	xorlw	128
  8590  0026A0  6EF3               	movwf	prodl,c
  8591  0026A2  0E80               	movlw	128
  8592  0026A4  5CF3               	subwf	prodl,w,c
  8593  0026A6  0E00               	movlw	0
  8594  0026A8  B4D8               	btfsc	status,2,c
  8595  0026AA  5C01               	subwf	i2___awdiv@dividend,w,c
  8596  0026AC  B0D8               	btfsc	status,0,c
  8597  0026AE  D006               	goto	i2l4480
  8598  0026B0  6C01               	negf	i2___awdiv@dividend,c
  8599  0026B2  1E02               	comf	i2___awdiv@dividend+1,f,c
  8600  0026B4  B0D8               	btfsc	status,0,c
  8601  0026B6  2A02               	incf	i2___awdiv@dividend+1,f,c
  8602  0026B8  0E01               	movlw	1
  8603  0026BA  1A07               	xorwf	i2___awdiv@sign,f,c
  8604  0026BC                     i2l4480:
  8605  0026BC  0E00               	movlw	0
  8606  0026BE  6E09               	movwf	i2___awdiv@quotient+1,c
  8607  0026C0  0E00               	movlw	0
  8608  0026C2  6E08               	movwf	i2___awdiv@quotient,c
  8609  0026C4  5004               	movf	i2___awdiv@divisor+1,w,c
  8610  0026C6  1003               	iorwf	i2___awdiv@divisor,w,c
  8611  0026C8  B4D8               	btfsc	status,2,c
  8612  0026CA  D01E               	goto	i2l4502
  8613  0026CC  6E05               	movwf	??i2___awdiv& (0+255),c
  8614  0026CE  0E01               	movlw	1
  8615  0026D0  6E06               	movwf	i2___awdiv@counter,c
  8616  0026D2  5005               	movf	??i2___awdiv& (0+255),w,c
  8617  0026D4  D004               	goto	i2l4488
  8618  0026D6                     i2l4486:
  8619  0026D6  90D8               	bcf	status,0,c
  8620  0026D8  3603               	rlcf	i2___awdiv@divisor,f,c
  8621  0026DA  3604               	rlcf	i2___awdiv@divisor+1,f,c
  8622  0026DC  2A06               	incf	i2___awdiv@counter,f,c
  8623  0026DE                     i2l4488:
  8624  0026DE  AE04               	btfss	i2___awdiv@divisor+1,7,c
  8625  0026E0  D7FA               	goto	i2l4486
  8626  0026E2                     i2l4490:
  8627  0026E2  90D8               	bcf	status,0,c
  8628  0026E4  3608               	rlcf	i2___awdiv@quotient,f,c
  8629  0026E6  3609               	rlcf	i2___awdiv@quotient+1,f,c
  8630  0026E8  5003               	movf	i2___awdiv@divisor,w,c
  8631  0026EA  5C01               	subwf	i2___awdiv@dividend,w,c
  8632  0026EC  5004               	movf	i2___awdiv@divisor+1,w,c
  8633  0026EE  5802               	subwfb	i2___awdiv@dividend+1,w,c
  8634  0026F0  A0D8               	btfss	status,0,c
  8635  0026F2  D005               	goto	i2l4498
  8636  0026F4  5003               	movf	i2___awdiv@divisor,w,c
  8637  0026F6  5E01               	subwf	i2___awdiv@dividend,f,c
  8638  0026F8  5004               	movf	i2___awdiv@divisor+1,w,c
  8639  0026FA  5A02               	subwfb	i2___awdiv@dividend+1,f,c
  8640  0026FC  8008               	bsf	i2___awdiv@quotient,0,c
  8641  0026FE                     i2l4498:
  8642  0026FE  90D8               	bcf	status,0,c
  8643  002700  3204               	rrcf	i2___awdiv@divisor+1,f,c
  8644  002702  3203               	rrcf	i2___awdiv@divisor,f,c
  8645  002704  2E06               	decfsz	i2___awdiv@counter,f,c
  8646  002706  D7ED               	goto	i2l4490
  8647  002708                     i2l4502:
  8648  002708  5007               	movf	i2___awdiv@sign,w,c
  8649  00270A  B4D8               	btfsc	status,2,c
  8650  00270C  D004               	goto	i2l4506
  8651  00270E  6C08               	negf	i2___awdiv@quotient,c
  8652  002710  1E09               	comf	i2___awdiv@quotient+1,f,c
  8653  002712  B0D8               	btfsc	status,0,c
  8654  002714  2A09               	incf	i2___awdiv@quotient+1,f,c
  8655  002716                     i2l4506:
  8656  002716  C008  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  8657  00271A  C009  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  8658  00271E  0012               	return	
  8659  002720                     __end_ofi2___awdiv:
  8660                           	opt stack 0
  8661                           pclatu	equ	0xFFB
  8662                           pclath	equ	0xFFA
  8663                           tblptru	equ	0xFF8
  8664                           tblptrh	equ	0xFF7
  8665                           tblptrl	equ	0xFF6
  8666                           tablat	equ	0xFF5
  8667                           prodh	equ	0xFF4
  8668                           prodl	equ	0xFF3
  8669                           intcon	equ	0xFF2
  8670                           indf0	equ	0xFEF
  8671                           postinc0	equ	0xFEE
  8672                           fsr0h	equ	0xFEA
  8673                           fsr0l	equ	0xFE9
  8674                           wreg	equ	0xFE8
  8675                           postinc1	equ	0xFE6
  8676                           postdec1	equ	0xFE5
  8677                           fsr1h	equ	0xFE2
  8678                           fsr1l	equ	0xFE1
  8679                           indf2	equ	0xFDF
  8680                           postinc2	equ	0xFDE
  8681                           fsr2h	equ	0xFDA
  8682                           fsr2l	equ	0xFD9
  8683                           status	equ	0xFD8
  8684                           
  8685 ;; *************** function i2_LCD_WriteStringAt *****************
  8686 ;; Defined at:
  8687 ;;		line 136 in file "LCD_Library.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;  row             1    wreg     unsigned char 
  8690 ;;  column          1    5[COMRAM] unsigned char 
  8691 ;;  string          2    6[COMRAM] PTR unsigned char 
  8692 ;;		 -> STR_12(11), STR_11(21), STR_10(9), powerOnScreen@txt2(21), 
  8693 ;;		 -> powerOnScreen@txt1(21), powerOnScreen@txt0(21), STR_9(4), STR_8(3), 
  8694 ;;		 -> STR_7(13), subMenu@txt3(18), subMenu@txt2(17), subMenu@txt1(19), 
  8695 ;;		 -> subMenu@txt0(17), STR_6(3), STR_5(15), STR_4(18), 
  8696 ;;		 -> STR_3(9), runPaper@txt2(15), runPaper@txt1(18), STR_2(15), 
  8697 ;;		 -> STR_1(16), startExam@txt1(14), setExamMCQ@txt1_2(16), setExamMCQ@txt1_1(18), 
  8698 ;;		 -> setExamTime@txt1_3(13), setExamTime@txt1_2(13), setExamTime@txt1(19), examSetup@txt7(18), 
  8699 ;;		 -> examSetup@txt6(17), examSetup@txt5(19), examSetup@txt4(17), examSetup@txt2(21), 
  8700 ;;		 -> examSetup@txt1(21), examSetup@txt0(21), 
  8701 ;; Auto vars:     Size  Location     Type
  8702 ;;  row             1    8[COMRAM] unsigned char 
  8703 ;;  LCD_WriteStr    1    9[COMRAM] unsigned char 
  8704 ;; Return value:  Size  Location     Type
  8705 ;;		None               void
  8706 ;; Registers used:
  8707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/0
  8710 ;;		On exit  : 0/0
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8713 ;;      Params:         3       0       0       0       0       0       0       0       0
  8714 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8716 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8717 ;;Total ram usage:        5 bytes
  8718 ;; Hardware stack levels used:    1
  8719 ;; Hardware stack levels required when called:    2
  8720 ;; This function calls:
  8721 ;;		i2_LCD_WriteChar
  8722 ;;		i2_LCD_WriteCommand
  8723 ;; This function is called by:
  8724 ;;		_INTERRUPT_SERVICE_ROUTING
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           	psect	text34
  8729  002AC6                     __ptext34:
  8730                           	opt stack 0
  8731  002AC6                     i2_LCD_WriteStringAt:
  8732                           	opt stack 19
  8733                           
  8734                           ;incstack = 0
  8735                           ;i2LCD_WriteStringAt@row stored from wreg
  8736  002AC6  CFE8 F009          	movff	wreg,i2LCD_WriteStringAt@row
  8737                           
  8738                           ;LCD_Library.c: 137: unsigned char data;
  8739                           ;LCD_Library.c: 138: switch(row){
  8740  002ACA  D00D               	goto	i2l5982
  8741  002ACC                     i2l5972:
  8742  002ACC  5006               	movf	i2LCD_WriteStringAt@column,w,c
  8743  002ACE  0F7F               	addlw	127
  8744  002AD0  D008               	goto	L24
  8745  002AD2                     i2l5974:
  8746  002AD2  5006               	movf	i2LCD_WriteStringAt@column,w,c
  8747  002AD4  0FBF               	addlw	191
  8748  002AD6  D005               	goto	L24
  8749  002AD8                     i2l5976:
  8750  002AD8  5006               	movf	i2LCD_WriteStringAt@column,w,c
  8751  002ADA  0F93               	addlw	147
  8752  002ADC  D002               	goto	L24
  8753  002ADE                     i2l5978:
  8754  002ADE  5006               	movf	i2LCD_WriteStringAt@column,w,c
  8755  002AE0  0FD3               	addlw	211
  8756  002AE2                     L24:
  8757  002AE2  6E0A               	movwf	i2LCD_WriteStringAt@data,c
  8758  002AE4  D00D               	goto	i2l5984
  8759  002AE6                     i2l5982:
  8760  002AE6  5009               	movf	i2LCD_WriteStringAt@row,w,c
  8761                           
  8762                           ; Switch size 1, requested type "space"
  8763                           ; Number of cases is 4, Range of values is 1 to 4
  8764                           ; switch strategies available:
  8765                           ; Name         Instructions Cycles
  8766                           ; simple_byte           13     7 (average)
  8767                           ;	Chosen strategy is simple_byte
  8768  002AE8  0A01               	xorlw	1	; case 1
  8769  002AEA  B4D8               	btfsc	status,2,c
  8770  002AEC  D7EF               	goto	i2l5972
  8771  002AEE  0A03               	xorlw	3	; case 2
  8772  002AF0  B4D8               	btfsc	status,2,c
  8773  002AF2  D7EF               	goto	i2l5974
  8774  002AF4  0A01               	xorlw	1	; case 3
  8775  002AF6  B4D8               	btfsc	status,2,c
  8776  002AF8  D7EF               	goto	i2l5976
  8777  002AFA  0A07               	xorlw	7	; case 4
  8778  002AFC  B4D8               	btfsc	status,2,c
  8779  002AFE  D7EF               	goto	i2l5978
  8780  002B00                     i2l5984:
  8781                           
  8782                           ;LCD_Library.c: 145: LCD_WriteCommand(data);
  8783  002B00  500A               	movf	i2LCD_WriteStringAt@data,w,c
  8784  002B02  EC2F  F010         	call	i2_LCD_WriteCommand
  8785                           
  8786                           ;LCD_Library.c: 147: while(*string)
  8787  002B06  D014               	goto	i2l5990
  8788  002B08                     i2l5986:
  8789                           
  8790                           ;LCD_Library.c: 148: {
  8791                           ;LCD_Library.c: 149: LCD_WriteChar(*string);
  8792  002B08  C007  FFF6         	movff	i2LCD_WriteStringAt@string,tblptrl
  8793  002B0C  C008  FFF7         	movff	i2LCD_WriteStringAt@string+1,tblptrh
  8794  002B10  6AF8               	clrf	tblptru,c
  8795  002B12  0E07               	movlw	(high __ramtop+-1)
  8796  002B14  64F7               	cpfsgt	tblptrh,c
  8797  002B16  D003               	bra	i2u552_47
  8798  002B18  0008               	tblrd		*
  8799  002B1A  50F5               	movf	tablat,w,c
  8800  002B1C  D005               	bra	i2u552_40
  8801  002B1E                     i2u552_47:
  8802  002B1E  CFF6 FFE9          	movff	tblptrl,fsr0l
  8803  002B22  CFF7 FFEA          	movff	tblptrh,fsr0h
  8804  002B26  50EF               	movf	indf0,w,c
  8805  002B28                     i2u552_40:
  8806  002B28  ECC7  F010         	call	i2_LCD_WriteChar
  8807                           
  8808                           ;LCD_Library.c: 150: string++;
  8809  002B2C  4A07               	infsnz	i2LCD_WriteStringAt@string,f,c
  8810  002B2E  2A08               	incf	i2LCD_WriteStringAt@string+1,f,c
  8811  002B30                     i2l5990:
  8812  002B30  C007  FFF6         	movff	i2LCD_WriteStringAt@string,tblptrl
  8813  002B34  C008  FFF7         	movff	i2LCD_WriteStringAt@string+1,tblptrh
  8814  002B38  6AF8               	clrf	tblptru,c
  8815  002B3A  0E07               	movlw	(high __ramtop+-1)
  8816  002B3C  64F7               	cpfsgt	tblptrh,c
  8817  002B3E  D003               	bra	i2u553_47
  8818  002B40  0008               	tblrd		*
  8819  002B42  50F5               	movf	tablat,w,c
  8820  002B44  D005               	bra	i2u553_40
  8821  002B46                     i2u553_47:
  8822  002B46  CFF6 FFE9          	movff	tblptrl,fsr0l
  8823  002B4A  CFF7 FFEA          	movff	tblptrh,fsr0h
  8824  002B4E  50EF               	movf	indf0,w,c
  8825  002B50                     i2u553_40:
  8826  002B50  0900               	iorlw	0
  8827  002B52  B4D8               	btfsc	status,2,c
  8828                           
  8829                           ;LCD_Library.c: 151: }
  8830                           ;LCD_Library.c: 152: return;
  8831  002B54  0012               	return	
  8832  002B56  D7D8               	goto	i2l5986
  8833  002B58                     __end_ofi2_LCD_WriteStringAt:
  8834                           	opt stack 0
  8835                           pclatu	equ	0xFFB
  8836                           pclath	equ	0xFFA
  8837                           tblptru	equ	0xFF8
  8838                           tblptrh	equ	0xFF7
  8839                           tblptrl	equ	0xFF6
  8840                           tablat	equ	0xFF5
  8841                           prodh	equ	0xFF4
  8842                           prodl	equ	0xFF3
  8843                           intcon	equ	0xFF2
  8844                           indf0	equ	0xFEF
  8845                           postinc0	equ	0xFEE
  8846                           fsr0h	equ	0xFEA
  8847                           fsr0l	equ	0xFE9
  8848                           wreg	equ	0xFE8
  8849                           postinc1	equ	0xFE6
  8850                           postdec1	equ	0xFE5
  8851                           fsr1h	equ	0xFE2
  8852                           fsr1l	equ	0xFE1
  8853                           indf2	equ	0xFDF
  8854                           postinc2	equ	0xFDE
  8855                           fsr2h	equ	0xFDA
  8856                           fsr2l	equ	0xFD9
  8857                           status	equ	0xFD8
  8858                           
  8859 ;; *************** function i2_LCD_WriteCharAt *****************
  8860 ;; Defined at:
  8861 ;;		line 115 in file "LCD_Library.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  row             1    wreg     unsigned char 
  8864 ;;  column          1    9[COMRAM] unsigned char 
  8865 ;;  chr             1   10[COMRAM] unsigned char 
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;  row             1   11[COMRAM] unsigned char 
  8868 ;;  LCD_WriteCha    1   12[COMRAM] unsigned char 
  8869 ;; Return value:  Size  Location     Type
  8870 ;;		None               void
  8871 ;; Registers used:
  8872 ;;		wreg, status,2, status,0, cstack
  8873 ;; Tracked objects:
  8874 ;;		On entry : 0/0
  8875 ;;		On exit  : 0/0
  8876 ;;		Unchanged: 0/0
  8877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8878 ;;      Params:         2       0       0       0       0       0       0       0       0
  8879 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8880 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8881 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8882 ;;Total ram usage:        4 bytes
  8883 ;; Hardware stack levels used:    1
  8884 ;; Hardware stack levels required when called:    2
  8885 ;; This function calls:
  8886 ;;		i2_LCD_WriteChar
  8887 ;;		i2_LCD_WriteCommand
  8888 ;; This function is called by:
  8889 ;;		_INTERRUPT_SERVICE_ROUTING
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           	psect	text35
  8894  002DC0                     __ptext35:
  8895                           	opt stack 0
  8896  002DC0                     i2_LCD_WriteCharAt:
  8897                           	opt stack 19
  8898                           
  8899                           ;incstack = 0
  8900                           ;i2LCD_WriteCharAt@row stored from wreg
  8901  002DC0  CFE8 F00C          	movff	wreg,i2LCD_WriteCharAt@row
  8902                           
  8903                           ;LCD_Library.c: 116: unsigned char register location;
  8904                           ;LCD_Library.c: 117: switch(row){
  8905  002DC4  D00D               	goto	i2l5966
  8906  002DC6                     i2l5956:
  8907  002DC6  500A               	movf	i2LCD_WriteCharAt@column,w,c
  8908  002DC8  0F7F               	addlw	127
  8909  002DCA  D008               	goto	L27
  8910  002DCC                     i2l5958:
  8911  002DCC  500A               	movf	i2LCD_WriteCharAt@column,w,c
  8912  002DCE  0FBF               	addlw	191
  8913  002DD0  D005               	goto	L27
  8914  002DD2                     i2l5960:
  8915  002DD2  500A               	movf	i2LCD_WriteCharAt@column,w,c
  8916  002DD4  0F93               	addlw	147
  8917  002DD6  D002               	goto	L27
  8918  002DD8                     i2l5962:
  8919  002DD8  500A               	movf	i2LCD_WriteCharAt@column,w,c
  8920  002DDA  0FD3               	addlw	211
  8921  002DDC                     L27:
  8922  002DDC  6E0D               	movwf	i2LCD_WriteCharAt@location,c
  8923  002DDE  D00D               	goto	i2l5968
  8924  002DE0                     i2l5966:
  8925  002DE0  500C               	movf	i2LCD_WriteCharAt@row,w,c
  8926                           
  8927                           ; Switch size 1, requested type "space"
  8928                           ; Number of cases is 4, Range of values is 1 to 4
  8929                           ; switch strategies available:
  8930                           ; Name         Instructions Cycles
  8931                           ; simple_byte           13     7 (average)
  8932                           ;	Chosen strategy is simple_byte
  8933  002DE2  0A01               	xorlw	1	; case 1
  8934  002DE4  B4D8               	btfsc	status,2,c
  8935  002DE6  D7EF               	goto	i2l5956
  8936  002DE8  0A03               	xorlw	3	; case 2
  8937  002DEA  B4D8               	btfsc	status,2,c
  8938  002DEC  D7EF               	goto	i2l5958
  8939  002DEE  0A01               	xorlw	1	; case 3
  8940  002DF0  B4D8               	btfsc	status,2,c
  8941  002DF2  D7EF               	goto	i2l5960
  8942  002DF4  0A07               	xorlw	7	; case 4
  8943  002DF6  B4D8               	btfsc	status,2,c
  8944  002DF8  D7EF               	goto	i2l5962
  8945  002DFA                     i2l5968:
  8946                           
  8947                           ;LCD_Library.c: 123: LCD_WriteCommand(location);
  8948  002DFA  500D               	movf	i2LCD_WriteCharAt@location,w,c
  8949  002DFC  EC2F  F010         	call	i2_LCD_WriteCommand
  8950                           
  8951                           ;LCD_Library.c: 124: LCD_WriteChar(chr);
  8952  002E00  500B               	movf	i2LCD_WriteCharAt@chr,w,c
  8953  002E02  ECC7  F010         	call	i2_LCD_WriteChar
  8954  002E06  0012               	return	
  8955  002E08                     __end_ofi2_LCD_WriteCharAt:
  8956                           	opt stack 0
  8957                           pclatu	equ	0xFFB
  8958                           pclath	equ	0xFFA
  8959                           tblptru	equ	0xFF8
  8960                           tblptrh	equ	0xFF7
  8961                           tblptrl	equ	0xFF6
  8962                           tablat	equ	0xFF5
  8963                           prodh	equ	0xFF4
  8964                           prodl	equ	0xFF3
  8965                           intcon	equ	0xFF2
  8966                           indf0	equ	0xFEF
  8967                           postinc0	equ	0xFEE
  8968                           fsr0h	equ	0xFEA
  8969                           fsr0l	equ	0xFE9
  8970                           wreg	equ	0xFE8
  8971                           postinc1	equ	0xFE6
  8972                           postdec1	equ	0xFE5
  8973                           fsr1h	equ	0xFE2
  8974                           fsr1l	equ	0xFE1
  8975                           indf2	equ	0xFDF
  8976                           postinc2	equ	0xFDE
  8977                           fsr2h	equ	0xFDA
  8978                           fsr2l	equ	0xFD9
  8979                           status	equ	0xFD8
  8980                           
  8981 ;; *************** function i2_LCD_WriteCommand *****************
  8982 ;; Defined at:
  8983 ;;		line 74 in file "LCD_Library.c"
  8984 ;; Parameters:    Size  Location     Type
  8985 ;;  cmd             1    wreg     unsigned char 
  8986 ;; Auto vars:     Size  Location     Type
  8987 ;;  cmd             1    4[COMRAM] unsigned char 
  8988 ;; Return value:  Size  Location     Type
  8989 ;;		None               void
  8990 ;; Registers used:
  8991 ;;		wreg, status,2, status,0, cstack
  8992 ;; Tracked objects:
  8993 ;;		On entry : 0/0
  8994 ;;		On exit  : 0/0
  8995 ;;		Unchanged: 0/0
  8996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8997 ;;      Params:         0       0       0       0       0       0       0       0       0
  8998 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8999 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9000 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9001 ;;Total ram usage:        3 bytes
  9002 ;; Hardware stack levels used:    1
  9003 ;; Hardware stack levels required when called:    1
  9004 ;; This function calls:
  9005 ;;		i2_Delay_5ms
  9006 ;;		i2_Delay_5us
  9007 ;; This function is called by:
  9008 ;;		_INTERRUPT_SERVICE_ROUTING
  9009 ;;		i2_LCD_WriteCharAt
  9010 ;;		i2_LCD_WriteStringAt
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           	psect	text36
  9015  00205E                     __ptext36:
  9016                           	opt stack 0
  9017  00205E                     i2_LCD_WriteCommand:
  9018                           	opt stack 19
  9019                           
  9020                           ;incstack = 0
  9021                           ;i2LCD_WriteCommand@cmd stored from wreg
  9022  00205E  CFE8 F005          	movff	wreg,i2LCD_WriteCommand@cmd
  9023                           
  9024                           ;LCD_Library.c: 75: PORTDbits.RD3 = 0;
  9025  002062  9683               	bcf	3971,3,c	;volatile
  9026                           
  9027                           ;LCD_Library.c: 76: PORTDbits.RD2 = 0;
  9028  002064  9483               	bcf	3971,2,c	;volatile
  9029                           
  9030                           ;LCD_Library.c: 82: PORTDbits.RD7 = (cmd & 0b10000000)>>7; PORTDbits.RD6 = (cmd & 0b0100
      +                          0000)>>6;
  9031  002066  6A03               	clrf	??i2_LCD_WriteCommand& (0+255),c
  9032  002068  AE05               	btfss	i2LCD_WriteCommand@cmd,7,c
  9033  00206A  D001               	bra	i2u528_45
  9034  00206C  2A03               	incf	??i2_LCD_WriteCommand& (0+255),f,c
  9035  00206E                     i2u528_45:
  9036  00206E  0E01               	movlw	1
  9037  002070  1603               	andwf	??i2_LCD_WriteCommand,f,c
  9038  002072  3203               	rrcf	??i2_LCD_WriteCommand,f,c
  9039  002074  3203               	rrcf	??i2_LCD_WriteCommand,f,c
  9040  002076  5083               	movf	3971,w,c	;volatile
  9041  002078  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9042  00207A  0B7F               	andlw	-129
  9043  00207C  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9044  00207E  6E83               	movwf	3971,c	;volatile
  9045  002080  C005  F003         	movff	i2LCD_WriteCommand@cmd,??i2_LCD_WriteCommand
  9046  002084  0E06               	movlw	6
  9047  002086  6E04               	movwf	(??i2_LCD_WriteCommand+1)& (0+255),c
  9048  002088                     i2u529_45:
  9049  002088  90D8               	bcf	status,0,c
  9050  00208A  3203               	rrcf	??i2_LCD_WriteCommand,f,c
  9051  00208C  2E04               	decfsz	(??i2_LCD_WriteCommand+1)& (0+255),f,c
  9052  00208E  D7FC               	goto	i2u529_45
  9053  002090  0E01               	movlw	1
  9054  002092  1603               	andwf	??i2_LCD_WriteCommand,f,c
  9055  002094  3A03               	swapf	??i2_LCD_WriteCommand,f,c
  9056  002096  4603               	rlncf	??i2_LCD_WriteCommand,f,c
  9057  002098  4603               	rlncf	??i2_LCD_WriteCommand,f,c
  9058  00209A  5083               	movf	3971,w,c	;volatile
  9059  00209C  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9060  00209E  0BBF               	andlw	-65
  9061  0020A0  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9062  0020A2  6E83               	movwf	3971,c	;volatile
  9063                           
  9064                           ;LCD_Library.c: 83: PORTDbits.RD5 = (cmd & 0b00100000)>>5; PORTDbits.RD4 = (cmd & 0b0001
      +                          0000)>>4;
  9065  0020A4  C005  F003         	movff	i2LCD_WriteCommand@cmd,??i2_LCD_WriteCommand
  9066  0020A8  0E05               	movlw	5
  9067  0020AA  6E04               	movwf	(??i2_LCD_WriteCommand+1)& (0+255),c
  9068  0020AC                     i2u530_45:
  9069  0020AC  90D8               	bcf	status,0,c
  9070  0020AE  3203               	rrcf	??i2_LCD_WriteCommand,f,c
  9071  0020B0  2E04               	decfsz	(??i2_LCD_WriteCommand+1)& (0+255),f,c
  9072  0020B2  D7FC               	goto	i2u530_45
  9073  0020B4  0E01               	movlw	1
  9074  0020B6  1603               	andwf	??i2_LCD_WriteCommand,f,c
  9075  0020B8  3A03               	swapf	??i2_LCD_WriteCommand,f,c
  9076  0020BA  4603               	rlncf	??i2_LCD_WriteCommand,f,c
  9077  0020BC  5083               	movf	3971,w,c	;volatile
  9078  0020BE  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9079  0020C0  0BDF               	andlw	-33
  9080  0020C2  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9081  0020C4  6E83               	movwf	3971,c	;volatile
  9082  0020C6  C005  F003         	movff	i2LCD_WriteCommand@cmd,??i2_LCD_WriteCommand
  9083  0020CA  3A03               	swapf	??i2_LCD_WriteCommand,f,c
  9084  0020CC  0E0F               	movlw	15
  9085  0020CE  1603               	andwf	??i2_LCD_WriteCommand,f,c
  9086  0020D0  0E01               	movlw	1
  9087  0020D2  1603               	andwf	??i2_LCD_WriteCommand,f,c
  9088  0020D4  3A03               	swapf	??i2_LCD_WriteCommand,f,c
  9089  0020D6  5083               	movf	3971,w,c	;volatile
  9090  0020D8  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9091  0020DA  0BEF               	andlw	-17
  9092  0020DC  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9093  0020DE  6E83               	movwf	3971,c	;volatile
  9094                           
  9095                           ;LCD_Library.c: 84: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop
      +                          (); __nop(); __nop();
  9096  0020E0  F000               	nop	
  9097  0020E2  F000               	nop	
  9098  0020E4  F000               	nop	
  9099  0020E6  F000               	nop	
  9100  0020E8  F000               	nop	
  9101  0020EA  F000               	nop	
  9102  0020EC  F000               	nop	
  9103  0020EE  F000               	nop	
  9104  0020F0  F000               	nop	
  9105  0020F2  F000               	nop	
  9106                           
  9107                           ;LCD_Library.c: 85: PORTDbits.RD3 = 1; Delay_5us(); PORTDbits.RD3 = 0;
  9108  0020F4  8683               	bsf	3971,3,c	;volatile
  9109  0020F6  ECC5  F017         	call	i2_Delay_5us	;wreg free
  9110  0020FA  9683               	bcf	3971,3,c	;volatile
  9111                           
  9112                           ;LCD_Library.c: 88: PORTDbits.RD7 = (cmd & 0b00001000)>>3; PORTDbits.RD6 = (cmd & 0b0000
      +                          0100)>>2;
  9113  0020FC  C005  F003         	movff	i2LCD_WriteCommand@cmd,??i2_LCD_WriteCommand
  9114  002100  90D8               	bcf	status,0,c
  9115  002102  3203               	rrcf	??i2_LCD_WriteCommand,f,c
  9116  002104  90D8               	bcf	status,0,c
  9117  002106  3203               	rrcf	??i2_LCD_WriteCommand,f,c
  9118  002108  90D8               	bcf	status,0,c
  9119  00210A  3203               	rrcf	??i2_LCD_WriteCommand,f,c
  9120  00210C  0E01               	movlw	1
  9121  00210E  1603               	andwf	??i2_LCD_WriteCommand,f,c
  9122  002110  3203               	rrcf	??i2_LCD_WriteCommand,f,c
  9123  002112  3203               	rrcf	??i2_LCD_WriteCommand,f,c
  9124  002114  5083               	movf	3971,w,c	;volatile
  9125  002116  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9126  002118  0B7F               	andlw	-129
  9127  00211A  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9128  00211C  6E83               	movwf	3971,c	;volatile
  9129  00211E  C005  F003         	movff	i2LCD_WriteCommand@cmd,??i2_LCD_WriteCommand
  9130  002122  90D8               	bcf	status,0,c
  9131  002124  3203               	rrcf	??i2_LCD_WriteCommand,f,c
  9132  002126  90D8               	bcf	status,0,c
  9133  002128  3203               	rrcf	??i2_LCD_WriteCommand,f,c
  9134  00212A  0E01               	movlw	1
  9135  00212C  1603               	andwf	??i2_LCD_WriteCommand,f,c
  9136  00212E  3A03               	swapf	??i2_LCD_WriteCommand,f,c
  9137  002130  4603               	rlncf	??i2_LCD_WriteCommand,f,c
  9138  002132  4603               	rlncf	??i2_LCD_WriteCommand,f,c
  9139  002134  5083               	movf	3971,w,c	;volatile
  9140  002136  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9141  002138  0BBF               	andlw	-65
  9142  00213A  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9143  00213C  6E83               	movwf	3971,c	;volatile
  9144                           
  9145                           ;LCD_Library.c: 89: PORTDbits.RD5 = (cmd & 0b00000010)>>1; PORTDbits.RD4 = (cmd & 0b0000
      +                          0001);
  9146  00213E  C005  F003         	movff	i2LCD_WriteCommand@cmd,??i2_LCD_WriteCommand
  9147  002142  90D8               	bcf	status,0,c
  9148  002144  3203               	rrcf	??i2_LCD_WriteCommand,f,c
  9149  002146  0E01               	movlw	1
  9150  002148  1603               	andwf	??i2_LCD_WriteCommand,f,c
  9151  00214A  3A03               	swapf	??i2_LCD_WriteCommand,f,c
  9152  00214C  4603               	rlncf	??i2_LCD_WriteCommand,f,c
  9153  00214E  5083               	movf	3971,w,c	;volatile
  9154  002150  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9155  002152  0BDF               	andlw	-33
  9156  002154  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9157  002156  6E83               	movwf	3971,c	;volatile
  9158  002158  C005  F003         	movff	i2LCD_WriteCommand@cmd,??i2_LCD_WriteCommand
  9159  00215C  0E01               	movlw	1
  9160  00215E  1603               	andwf	??i2_LCD_WriteCommand,f,c
  9161  002160  3A03               	swapf	??i2_LCD_WriteCommand,f,c
  9162  002162  5083               	movf	3971,w,c	;volatile
  9163  002164  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9164  002166  0BEF               	andlw	-17
  9165  002168  1803               	xorwf	??i2_LCD_WriteCommand,w,c
  9166  00216A  6E83               	movwf	3971,c	;volatile
  9167                           
  9168                           ;LCD_Library.c: 90: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop
      +                          (); __nop(); __nop();
  9169  00216C  F000               	nop	
  9170  00216E  F000               	nop	
  9171  002170  F000               	nop	
  9172  002172  F000               	nop	
  9173  002174  F000               	nop	
  9174  002176  F000               	nop	
  9175  002178  F000               	nop	
  9176  00217A  F000               	nop	
  9177  00217C  F000               	nop	
  9178  00217E  F000               	nop	
  9179                           
  9180                           ;LCD_Library.c: 91: PORTDbits.RD3 = 1; Delay_5us(); PORTDbits.RD3 = 0;
  9181  002180  8683               	bsf	3971,3,c	;volatile
  9182  002182  ECC5  F017         	call	i2_Delay_5us	;wreg free
  9183  002186  9683               	bcf	3971,3,c	;volatile
  9184                           
  9185                           ;LCD_Library.c: 92: Delay_5ms();
  9186  002188  ECD3  F017         	call	i2_Delay_5ms	;wreg free
  9187  00218C  0012               	return	
  9188  00218E                     __end_ofi2_LCD_WriteCommand:
  9189                           	opt stack 0
  9190                           pclatu	equ	0xFFB
  9191                           pclath	equ	0xFFA
  9192                           tblptru	equ	0xFF8
  9193                           tblptrh	equ	0xFF7
  9194                           tblptrl	equ	0xFF6
  9195                           tablat	equ	0xFF5
  9196                           prodh	equ	0xFF4
  9197                           prodl	equ	0xFF3
  9198                           intcon	equ	0xFF2
  9199                           indf0	equ	0xFEF
  9200                           postinc0	equ	0xFEE
  9201                           fsr0h	equ	0xFEA
  9202                           fsr0l	equ	0xFE9
  9203                           wreg	equ	0xFE8
  9204                           postinc1	equ	0xFE6
  9205                           postdec1	equ	0xFE5
  9206                           fsr1h	equ	0xFE2
  9207                           fsr1l	equ	0xFE1
  9208                           indf2	equ	0xFDF
  9209                           postinc2	equ	0xFDE
  9210                           fsr2h	equ	0xFDA
  9211                           fsr2l	equ	0xFD9
  9212                           status	equ	0xFD8
  9213                           
  9214 ;; *************** function i2_LCD_WriteChar *****************
  9215 ;; Defined at:
  9216 ;;		line 96 in file "LCD_Library.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;  data            1    wreg     unsigned char 
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;  data            1    4[COMRAM] unsigned char 
  9221 ;; Return value:  Size  Location     Type
  9222 ;;		None               void
  9223 ;; Registers used:
  9224 ;;		wreg, status,2, status,0, cstack
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9230 ;;      Params:         0       0       0       0       0       0       0       0       0
  9231 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9232 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9233 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9234 ;;Total ram usage:        3 bytes
  9235 ;; Hardware stack levels used:    1
  9236 ;; Hardware stack levels required when called:    1
  9237 ;; This function calls:
  9238 ;;		i2_Delay_5ms
  9239 ;;		i2_Delay_5us
  9240 ;; This function is called by:
  9241 ;;		i2_LCD_WriteCharAt
  9242 ;;		i2_LCD_WriteStringAt
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246                           	psect	text37
  9247  00218E                     __ptext37:
  9248                           	opt stack 0
  9249  00218E                     i2_LCD_WriteChar:
  9250                           	opt stack 19
  9251                           
  9252                           ;incstack = 0
  9253                           ;i2LCD_WriteChar@data stored from wreg
  9254  00218E  CFE8 F005          	movff	wreg,i2LCD_WriteChar@data
  9255                           
  9256                           ;LCD_Library.c: 97: PORTDbits.RD3 = 0;
  9257  002192  9683               	bcf	3971,3,c	;volatile
  9258                           
  9259                           ;LCD_Library.c: 98: PORTDbits.RD2 = 1;
  9260  002194  8483               	bsf	3971,2,c	;volatile
  9261                           
  9262                           ;LCD_Library.c: 102: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b0
      +                          1000000)>>6;
  9263  002196  6A03               	clrf	??i2_LCD_WriteChar& (0+255),c
  9264  002198  AE05               	btfss	i2LCD_WriteChar@data,7,c
  9265  00219A  D001               	bra	i2u531_45
  9266  00219C  2A03               	incf	??i2_LCD_WriteChar& (0+255),f,c
  9267  00219E                     i2u531_45:
  9268  00219E  0E01               	movlw	1
  9269  0021A0  1603               	andwf	??i2_LCD_WriteChar,f,c
  9270  0021A2  3203               	rrcf	??i2_LCD_WriteChar,f,c
  9271  0021A4  3203               	rrcf	??i2_LCD_WriteChar,f,c
  9272  0021A6  5083               	movf	3971,w,c	;volatile
  9273  0021A8  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9274  0021AA  0B7F               	andlw	-129
  9275  0021AC  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9276  0021AE  6E83               	movwf	3971,c	;volatile
  9277  0021B0  C005  F003         	movff	i2LCD_WriteChar@data,??i2_LCD_WriteChar
  9278  0021B4  0E06               	movlw	6
  9279  0021B6  6E04               	movwf	(??i2_LCD_WriteChar+1)& (0+255),c
  9280  0021B8                     i2u532_45:
  9281  0021B8  90D8               	bcf	status,0,c
  9282  0021BA  3203               	rrcf	??i2_LCD_WriteChar,f,c
  9283  0021BC  2E04               	decfsz	(??i2_LCD_WriteChar+1)& (0+255),f,c
  9284  0021BE  D7FC               	goto	i2u532_45
  9285  0021C0  0E01               	movlw	1
  9286  0021C2  1603               	andwf	??i2_LCD_WriteChar,f,c
  9287  0021C4  3A03               	swapf	??i2_LCD_WriteChar,f,c
  9288  0021C6  4603               	rlncf	??i2_LCD_WriteChar,f,c
  9289  0021C8  4603               	rlncf	??i2_LCD_WriteChar,f,c
  9290  0021CA  5083               	movf	3971,w,c	;volatile
  9291  0021CC  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9292  0021CE  0BBF               	andlw	-65
  9293  0021D0  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9294  0021D2  6E83               	movwf	3971,c	;volatile
  9295                           
  9296                           ;LCD_Library.c: 103: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b0
      +                          0010000)>>4;
  9297  0021D4  C005  F003         	movff	i2LCD_WriteChar@data,??i2_LCD_WriteChar
  9298  0021D8  0E05               	movlw	5
  9299  0021DA  6E04               	movwf	(??i2_LCD_WriteChar+1)& (0+255),c
  9300  0021DC                     i2u533_45:
  9301  0021DC  90D8               	bcf	status,0,c
  9302  0021DE  3203               	rrcf	??i2_LCD_WriteChar,f,c
  9303  0021E0  2E04               	decfsz	(??i2_LCD_WriteChar+1)& (0+255),f,c
  9304  0021E2  D7FC               	goto	i2u533_45
  9305  0021E4  0E01               	movlw	1
  9306  0021E6  1603               	andwf	??i2_LCD_WriteChar,f,c
  9307  0021E8  3A03               	swapf	??i2_LCD_WriteChar,f,c
  9308  0021EA  4603               	rlncf	??i2_LCD_WriteChar,f,c
  9309  0021EC  5083               	movf	3971,w,c	;volatile
  9310  0021EE  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9311  0021F0  0BDF               	andlw	-33
  9312  0021F2  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9313  0021F4  6E83               	movwf	3971,c	;volatile
  9314  0021F6  C005  F003         	movff	i2LCD_WriteChar@data,??i2_LCD_WriteChar
  9315  0021FA  3A03               	swapf	??i2_LCD_WriteChar,f,c
  9316  0021FC  0E0F               	movlw	15
  9317  0021FE  1603               	andwf	??i2_LCD_WriteChar,f,c
  9318  002200  0E01               	movlw	1
  9319  002202  1603               	andwf	??i2_LCD_WriteChar,f,c
  9320  002204  3A03               	swapf	??i2_LCD_WriteChar,f,c
  9321  002206  5083               	movf	3971,w,c	;volatile
  9322  002208  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9323  00220A  0BEF               	andlw	-17
  9324  00220C  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9325  00220E  6E83               	movwf	3971,c	;volatile
  9326                           
  9327                           ;LCD_Library.c: 104: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __no
      +                          p(); __nop(); __nop();
  9328  002210  F000               	nop	
  9329  002212  F000               	nop	
  9330  002214  F000               	nop	
  9331  002216  F000               	nop	
  9332  002218  F000               	nop	
  9333  00221A  F000               	nop	
  9334  00221C  F000               	nop	
  9335  00221E  F000               	nop	
  9336  002220  F000               	nop	
  9337  002222  F000               	nop	
  9338                           
  9339                           ;LCD_Library.c: 105: PORTDbits.RD3 = 1; Delay_5us(); PORTDbits.RD3 = 0;
  9340  002224  8683               	bsf	3971,3,c	;volatile
  9341  002226  ECC5  F017         	call	i2_Delay_5us	;wreg free
  9342  00222A  9683               	bcf	3971,3,c	;volatile
  9343                           
  9344                           ;LCD_Library.c: 108: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b0
      +                          0000100)>>2;
  9345  00222C  C005  F003         	movff	i2LCD_WriteChar@data,??i2_LCD_WriteChar
  9346  002230  90D8               	bcf	status,0,c
  9347  002232  3203               	rrcf	??i2_LCD_WriteChar,f,c
  9348  002234  90D8               	bcf	status,0,c
  9349  002236  3203               	rrcf	??i2_LCD_WriteChar,f,c
  9350  002238  90D8               	bcf	status,0,c
  9351  00223A  3203               	rrcf	??i2_LCD_WriteChar,f,c
  9352  00223C  0E01               	movlw	1
  9353  00223E  1603               	andwf	??i2_LCD_WriteChar,f,c
  9354  002240  3203               	rrcf	??i2_LCD_WriteChar,f,c
  9355  002242  3203               	rrcf	??i2_LCD_WriteChar,f,c
  9356  002244  5083               	movf	3971,w,c	;volatile
  9357  002246  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9358  002248  0B7F               	andlw	-129
  9359  00224A  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9360  00224C  6E83               	movwf	3971,c	;volatile
  9361  00224E  C005  F003         	movff	i2LCD_WriteChar@data,??i2_LCD_WriteChar
  9362  002252  90D8               	bcf	status,0,c
  9363  002254  3203               	rrcf	??i2_LCD_WriteChar,f,c
  9364  002256  90D8               	bcf	status,0,c
  9365  002258  3203               	rrcf	??i2_LCD_WriteChar,f,c
  9366  00225A  0E01               	movlw	1
  9367  00225C  1603               	andwf	??i2_LCD_WriteChar,f,c
  9368  00225E  3A03               	swapf	??i2_LCD_WriteChar,f,c
  9369  002260  4603               	rlncf	??i2_LCD_WriteChar,f,c
  9370  002262  4603               	rlncf	??i2_LCD_WriteChar,f,c
  9371  002264  5083               	movf	3971,w,c	;volatile
  9372  002266  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9373  002268  0BBF               	andlw	-65
  9374  00226A  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9375  00226C  6E83               	movwf	3971,c	;volatile
  9376                           
  9377                           ;LCD_Library.c: 109: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b0
      +                          0000001);
  9378  00226E  C005  F003         	movff	i2LCD_WriteChar@data,??i2_LCD_WriteChar
  9379  002272  90D8               	bcf	status,0,c
  9380  002274  3203               	rrcf	??i2_LCD_WriteChar,f,c
  9381  002276  0E01               	movlw	1
  9382  002278  1603               	andwf	??i2_LCD_WriteChar,f,c
  9383  00227A  3A03               	swapf	??i2_LCD_WriteChar,f,c
  9384  00227C  4603               	rlncf	??i2_LCD_WriteChar,f,c
  9385  00227E  5083               	movf	3971,w,c	;volatile
  9386  002280  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9387  002282  0BDF               	andlw	-33
  9388  002284  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9389  002286  6E83               	movwf	3971,c	;volatile
  9390  002288  C005  F003         	movff	i2LCD_WriteChar@data,??i2_LCD_WriteChar
  9391  00228C  0E01               	movlw	1
  9392  00228E  1603               	andwf	??i2_LCD_WriteChar,f,c
  9393  002290  3A03               	swapf	??i2_LCD_WriteChar,f,c
  9394  002292  5083               	movf	3971,w,c	;volatile
  9395  002294  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9396  002296  0BEF               	andlw	-17
  9397  002298  1803               	xorwf	??i2_LCD_WriteChar,w,c
  9398  00229A  6E83               	movwf	3971,c	;volatile
  9399                           
  9400                           ;LCD_Library.c: 110: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __no
      +                          p(); __nop(); __nop();
  9401  00229C  F000               	nop	
  9402  00229E  F000               	nop	
  9403  0022A0  F000               	nop	
  9404  0022A2  F000               	nop	
  9405  0022A4  F000               	nop	
  9406  0022A6  F000               	nop	
  9407  0022A8  F000               	nop	
  9408  0022AA  F000               	nop	
  9409  0022AC  F000               	nop	
  9410  0022AE  F000               	nop	
  9411                           
  9412                           ;LCD_Library.c: 111: PORTDbits.RD3 = 1; Delay_5us(); PORTDbits.RD3 = 0;
  9413  0022B0  8683               	bsf	3971,3,c	;volatile
  9414  0022B2  ECC5  F017         	call	i2_Delay_5us	;wreg free
  9415  0022B6  9683               	bcf	3971,3,c	;volatile
  9416                           
  9417                           ;LCD_Library.c: 112: Delay_5ms();
  9418  0022B8  ECD3  F017         	call	i2_Delay_5ms	;wreg free
  9419  0022BC  0012               	return	
  9420  0022BE                     __end_ofi2_LCD_WriteChar:
  9421                           	opt stack 0
  9422                           pclatu	equ	0xFFB
  9423                           pclath	equ	0xFFA
  9424                           tblptru	equ	0xFF8
  9425                           tblptrh	equ	0xFF7
  9426                           tblptrl	equ	0xFF6
  9427                           tablat	equ	0xFF5
  9428                           prodh	equ	0xFF4
  9429                           prodl	equ	0xFF3
  9430                           intcon	equ	0xFF2
  9431                           indf0	equ	0xFEF
  9432                           postinc0	equ	0xFEE
  9433                           fsr0h	equ	0xFEA
  9434                           fsr0l	equ	0xFE9
  9435                           wreg	equ	0xFE8
  9436                           postinc1	equ	0xFE6
  9437                           postdec1	equ	0xFE5
  9438                           fsr1h	equ	0xFE2
  9439                           fsr1l	equ	0xFE1
  9440                           indf2	equ	0xFDF
  9441                           postinc2	equ	0xFDE
  9442                           fsr2h	equ	0xFDA
  9443                           fsr2l	equ	0xFD9
  9444                           status	equ	0xFD8
  9445                           
  9446 ;; *************** function i2_Delay_5us *****************
  9447 ;; Defined at:
  9448 ;;		line 156 in file "MyDelays.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;		None
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;		None
  9453 ;; Return value:  Size  Location     Type
  9454 ;;		None               void
  9455 ;; Registers used:
  9456 ;;		None
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9462 ;;      Params:         0       0       0       0       0       0       0       0       0
  9463 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9464 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9465 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9466 ;;Total ram usage:        0 bytes
  9467 ;; Hardware stack levels used:    1
  9468 ;; This function calls:
  9469 ;;		Nothing
  9470 ;; This function is called by:
  9471 ;;		i2_LCD_WriteCommand
  9472 ;;		i2_LCD_WriteChar
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476                           	psect	text38
  9477  002F8A                     __ptext38:
  9478                           	opt stack 0
  9479  002F8A                     i2_Delay_5us:
  9480                           	opt stack 19
  9481                           
  9482                           ;MyDelays.c: 163: __nop(); __nop(); __nop(); __nop();__nop();
  9483                           
  9484                           ;incstack = 0
  9485  002F8A  F000               	nop	
  9486  002F8C  F000               	nop	
  9487  002F8E  F000               	nop	
  9488  002F90  F000               	nop	
  9489  002F92  F000               	nop	
  9490                           
  9491                           ;MyDelays.c: 164: __nop(); __nop(); __nop(); __nop();__nop();
  9492  002F94  F000               	nop	
  9493  002F96  F000               	nop	
  9494  002F98  F000               	nop	
  9495  002F9A  F000               	nop	
  9496  002F9C  F000               	nop	
  9497                           
  9498                           ;MyDelays.c: 165: __nop(); __nop(); __nop();
  9499  002F9E  F000               	nop	
  9500  002FA0  F000               	nop	
  9501  002FA2  F000               	nop	
  9502  002FA4  0012               	return	
  9503  002FA6                     __end_ofi2_Delay_5us:
  9504                           	opt stack 0
  9505                           pclatu	equ	0xFFB
  9506                           pclath	equ	0xFFA
  9507                           tblptru	equ	0xFF8
  9508                           tblptrh	equ	0xFF7
  9509                           tblptrl	equ	0xFF6
  9510                           tablat	equ	0xFF5
  9511                           prodh	equ	0xFF4
  9512                           prodl	equ	0xFF3
  9513                           intcon	equ	0xFF2
  9514                           indf0	equ	0xFEF
  9515                           postinc0	equ	0xFEE
  9516                           fsr0h	equ	0xFEA
  9517                           fsr0l	equ	0xFE9
  9518                           wreg	equ	0xFE8
  9519                           postinc1	equ	0xFE6
  9520                           postdec1	equ	0xFE5
  9521                           fsr1h	equ	0xFE2
  9522                           fsr1l	equ	0xFE1
  9523                           indf2	equ	0xFDF
  9524                           postinc2	equ	0xFDE
  9525                           fsr2h	equ	0xFDA
  9526                           fsr2l	equ	0xFD9
  9527                           status	equ	0xFD8
  9528                           
  9529 ;; *************** function i2_Delay_5ms *****************
  9530 ;; Defined at:
  9531 ;;		line 32 in file "MyDelays.c"
  9532 ;; Parameters:    Size  Location     Type
  9533 ;;		None
  9534 ;; Auto vars:     Size  Location     Type
  9535 ;;  Delay_5ms       2    0[COMRAM] unsigned short 
  9536 ;; Return value:  Size  Location     Type
  9537 ;;		None               void
  9538 ;; Registers used:
  9539 ;;		wreg, status,2, status,0
  9540 ;; Tracked objects:
  9541 ;;		On entry : 0/0
  9542 ;;		On exit  : 0/0
  9543 ;;		Unchanged: 0/0
  9544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9545 ;;      Params:         0       0       0       0       0       0       0       0       0
  9546 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9548 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9549 ;;Total ram usage:        2 bytes
  9550 ;; Hardware stack levels used:    1
  9551 ;; This function calls:
  9552 ;;		Nothing
  9553 ;; This function is called by:
  9554 ;;		i2_LCD_WriteCommand
  9555 ;;		i2_LCD_WriteChar
  9556 ;; This function uses a non-reentrant model
  9557 ;;
  9558                           
  9559                           	psect	text39
  9560  002FA6                     __ptext39:
  9561                           	opt stack 0
  9562  002FA6                     i2_Delay_5ms:
  9563                           	opt stack 19
  9564                           
  9565                           ;MyDelays.c: 46: register unsigned short r0;
  9566                           ;MyDelays.c: 47: r0 = 0;
  9567                           
  9568                           ;incstack = 0
  9569  002FA6  0E00               	movlw	0
  9570  002FA8  6E02               	movwf	i2Delay_5ms@r0+1,c
  9571  002FAA  0E00               	movlw	0
  9572  002FAC  6E01               	movwf	i2Delay_5ms@r0,c
  9573                           
  9574                           ;MyDelays.c: 48: while(r0 < 829)
  9575  002FAE  D002               	goto	i2l5506
  9576  002FB0                     i2l5504:
  9577                           
  9578                           ;MyDelays.c: 49: r0++;
  9579  002FB0  4A01               	infsnz	i2Delay_5ms@r0,f,c
  9580  002FB2  2A02               	incf	i2Delay_5ms@r0+1,f,c
  9581  002FB4                     i2l5506:
  9582  002FB4  0E3D               	movlw	61
  9583  002FB6  5C01               	subwf	i2Delay_5ms@r0,w,c
  9584  002FB8  0E03               	movlw	3
  9585  002FBA  5802               	subwfb	i2Delay_5ms@r0+1,w,c
  9586  002FBC  B0D8               	btfsc	status,0,c
  9587  002FBE  0012               	return	
  9588  002FC0  D7F7               	goto	i2l5504
  9589  002FC2                     __end_ofi2_Delay_5ms:
  9590                           	opt stack 0
  9591                           pclatu	equ	0xFFB
  9592                           pclath	equ	0xFFA
  9593                           tblptru	equ	0xFF8
  9594                           tblptrh	equ	0xFF7
  9595                           tblptrl	equ	0xFF6
  9596                           tablat	equ	0xFF5
  9597                           prodh	equ	0xFF4
  9598                           prodl	equ	0xFF3
  9599                           intcon	equ	0xFF2
  9600                           indf0	equ	0xFEF
  9601                           postinc0	equ	0xFEE
  9602                           fsr0h	equ	0xFEA
  9603                           fsr0l	equ	0xFE9
  9604                           wreg	equ	0xFE8
  9605                           postinc1	equ	0xFE6
  9606                           postdec1	equ	0xFE5
  9607                           fsr1h	equ	0xFE2
  9608                           fsr1l	equ	0xFE1
  9609                           indf2	equ	0xFDF
  9610                           postinc2	equ	0xFDE
  9611                           fsr2h	equ	0xFDA
  9612                           fsr2l	equ	0xFD9
  9613                           status	equ	0xFD8
  9614                           
  9615 ;; *************** function i2_Delay_1000ms *****************
  9616 ;; Defined at:
  9617 ;;		line 118 in file "MyDelays.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;		None
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;  Delay_1000ms    2    1[COMRAM] unsigned short 
  9622 ;;  Delay_1000ms    1    3[COMRAM] unsigned char 
  9623 ;; Return value:  Size  Location     Type
  9624 ;;		None               void
  9625 ;; Registers used:
  9626 ;;		wreg, status,2, status,0
  9627 ;; Tracked objects:
  9628 ;;		On entry : 0/0
  9629 ;;		On exit  : 0/0
  9630 ;;		Unchanged: 0/0
  9631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9632 ;;      Params:         0       0       0       0       0       0       0       0       0
  9633 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9634 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9635 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9636 ;;Total ram usage:        4 bytes
  9637 ;; Hardware stack levels used:    1
  9638 ;; This function calls:
  9639 ;;		Nothing
  9640 ;; This function is called by:
  9641 ;;		_INTERRUPT_SERVICE_ROUTING
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           	psect	text40
  9646  002EA8                     __ptext40:
  9647                           	opt stack 0
  9648  002EA8                     i2_Delay_1000ms:
  9649                           	opt stack 21
  9650                           
  9651                           ;MyDelays.c: 140: register unsigned short r0;
  9652                           ;MyDelays.c: 141: register char r1;
  9653                           ;MyDelays.c: 142: r1 = 0;
  9654                           
  9655                           ;incstack = 0
  9656  002EA8  6E01               	movwf	??i2_Delay_1000ms& (0+255),c
  9657  002EAA  0E00               	movlw	0
  9658  002EAC  6E04               	movwf	i2Delay_1000ms@r1,c
  9659  002EAE  5001               	movf	??i2_Delay_1000ms& (0+255),w,c
  9660                           
  9661                           ;MyDelays.c: 143: while(r1 < 5){
  9662  002EB0  D00E               	goto	i2l4464
  9663  002EB2                     i2l4456:
  9664                           
  9665                           ;MyDelays.c: 144: r0 = 0;
  9666  002EB2  0E00               	movlw	0
  9667  002EB4  6E03               	movwf	i2Delay_1000ms@r0+1,c
  9668  002EB6  0E00               	movlw	0
  9669  002EB8  6E02               	movwf	i2Delay_1000ms@r0,c
  9670                           
  9671                           ;MyDelays.c: 145: while(r0 < 33335)
  9672  002EBA  D002               	goto	i2l4460
  9673  002EBC                     i2l4458:
  9674                           
  9675                           ;MyDelays.c: 146: r0++;
  9676  002EBC  4A02               	infsnz	i2Delay_1000ms@r0,f,c
  9677  002EBE  2A03               	incf	i2Delay_1000ms@r0+1,f,c
  9678  002EC0                     i2l4460:
  9679  002EC0  0E37               	movlw	55
  9680  002EC2  5C02               	subwf	i2Delay_1000ms@r0,w,c
  9681  002EC4  0E82               	movlw	130
  9682  002EC6  5803               	subwfb	i2Delay_1000ms@r0+1,w,c
  9683  002EC8  A0D8               	btfss	status,0,c
  9684  002ECA  D7F8               	goto	i2l4458
  9685                           
  9686                           ;MyDelays.c: 147: r1++;
  9687  002ECC  2A04               	incf	i2Delay_1000ms@r1,f,c
  9688  002ECE                     i2l4464:
  9689  002ECE  0E04               	movlw	4
  9690  002ED0  6404               	cpfsgt	i2Delay_1000ms@r1,c
  9691  002ED2  D7EF               	goto	i2l4456
  9692  002ED4  0012               	return	
  9693  002ED6                     __end_ofi2_Delay_1000ms:
  9694                           	opt stack 0
  9695                           pclatu	equ	0xFFB
  9696                           pclath	equ	0xFFA
  9697                           tblptru	equ	0xFF8
  9698                           tblptrh	equ	0xFF7
  9699                           tblptrl	equ	0xFF6
  9700                           tablat	equ	0xFF5
  9701                           prodh	equ	0xFF4
  9702                           prodl	equ	0xFF3
  9703                           intcon	equ	0xFF2
  9704                           indf0	equ	0xFEF
  9705                           postinc0	equ	0xFEE
  9706                           fsr0h	equ	0xFEA
  9707                           fsr0l	equ	0xFE9
  9708                           wreg	equ	0xFE8
  9709                           postinc1	equ	0xFE6
  9710                           postdec1	equ	0xFE5
  9711                           fsr1h	equ	0xFE2
  9712                           fsr1l	equ	0xFE1
  9713                           indf2	equ	0xFDF
  9714                           postinc2	equ	0xFDE
  9715                           fsr2h	equ	0xFDA
  9716                           fsr2l	equ	0xFD9
  9717                           status	equ	0xFD8
  9718                           pclatu	equ	0xFFB
  9719                           pclath	equ	0xFFA
  9720                           tblptru	equ	0xFF8
  9721                           tblptrh	equ	0xFF7
  9722                           tblptrl	equ	0xFF6
  9723                           tablat	equ	0xFF5
  9724                           prodh	equ	0xFF4
  9725                           prodl	equ	0xFF3
  9726                           intcon	equ	0xFF2
  9727                           indf0	equ	0xFEF
  9728                           postinc0	equ	0xFEE
  9729                           fsr0h	equ	0xFEA
  9730                           fsr0l	equ	0xFE9
  9731                           wreg	equ	0xFE8
  9732                           postinc1	equ	0xFE6
  9733                           postdec1	equ	0xFE5
  9734                           fsr1h	equ	0xFE2
  9735                           fsr1l	equ	0xFE1
  9736                           indf2	equ	0xFDF
  9737                           postinc2	equ	0xFDE
  9738                           fsr2h	equ	0xFDA
  9739                           fsr2l	equ	0xFD9
  9740                           status	equ	0xFD8
  9741                           
  9742                           	psect	rparam
  9743  0000                     pclatu	equ	0xFFB
  9744                           pclath	equ	0xFFA
  9745                           tblptru	equ	0xFF8
  9746                           tblptrh	equ	0xFF7
  9747                           tblptrl	equ	0xFF6
  9748                           tablat	equ	0xFF5
  9749                           prodh	equ	0xFF4
  9750                           prodl	equ	0xFF3
  9751                           intcon	equ	0xFF2
  9752                           indf0	equ	0xFEF
  9753                           postinc0	equ	0xFEE
  9754                           fsr0h	equ	0xFEA
  9755                           fsr0l	equ	0xFE9
  9756                           wreg	equ	0xFE8
  9757                           postinc1	equ	0xFE6
  9758                           postdec1	equ	0xFE5
  9759                           fsr1h	equ	0xFE2
  9760                           fsr1l	equ	0xFE1
  9761                           indf2	equ	0xFDF
  9762                           postinc2	equ	0xFDE
  9763                           fsr2h	equ	0xFDA
  9764                           fsr2l	equ	0xFD9
  9765                           status	equ	0xFD8


Data Sizes:
    Strings     137
    Constant    0
    Data        397
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     43      66
    BANK0           160    131     160
    BANK1           256     16     134
    BANK2           256      0     237
    BANK3           256    135     135
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    loadAnswer@flag	PTR unsigned char  size(2) Largest target is 2
		 -> runPaper@ansBuffer(BANK0[2]), 

    loadAnswer@ans	PTR unsigned char  size(2) Largest target is 2
		 -> runPaper@ansBuffer(BANK0[2]), 

    saveAnswer@flag	PTR unsigned char  size(2) Largest target is 2
		 -> runPaper@ansBuffer(BANK0[2]), 

    saveAnswer@ans	PTR unsigned char  size(2) Largest target is 2
		 -> runPaper@ansBuffer(BANK0[2]), 

    LCD_WriteStringAt@string	PTR unsigned char  size(2) Largest target is 21
		 -> STR_12(CODE[11]), STR_11(CODE[21]), STR_10(CODE[9]), powerOnScreen@txt2(COMRAM[21]), 
		 -> powerOnScreen@txt1(COMRAM[21]), powerOnScreen@txt0(COMRAM[21]), STR_9(CODE[4]), STR_8(CODE[3]), 
		 -> STR_7(CODE[13]), subMenu@txt3(BANK0[18]), subMenu@txt2(BANK0[17]), subMenu@txt1(BANK0[19]), 
		 -> subMenu@txt0(BANK0[17]), STR_6(CODE[3]), STR_5(CODE[15]), STR_4(CODE[18]), 
		 -> STR_3(CODE[9]), runPaper@txt2(BANK0[15]), runPaper@txt1(BANK0[18]), STR_2(CODE[15]), 
		 -> STR_1(CODE[16]), startExam@txt1(BANK1[14]), setExamMCQ@txt1_2(BANK0[16]), setExamMCQ@txt1_1(BANK0[18]), 
		 -> setExamTime@txt1_3(BANK0[13]), setExamTime@txt1_2(BANK0[13]), setExamTime@txt1(BANK0[19]), examSetup@txt7(BANK3[18]), 
		 -> examSetup@txt6(BANK3[17]), examSetup@txt5(BANK3[19]), examSetup@txt4(BANK3[17]), examSetup@txt2(BANK3[21]), 
		 -> examSetup@txt1(BANK3[21]), examSetup@txt0(BANK3[21]), 


Critical Paths under _main in COMRAM

    _initializeDevice->_LCD_WriteCommand
    _initializeDevice->_Write_b_eep
    _initialize_LCD->_LCD_WriteCommand
    _examSetup->_setExamMCQ
    _startExam->_get_yes_no
    _runPaper->_get_yes_no
    _subMenu->_LCD_WriteCharAt
    _view_answers->_LCD_WriteCharAt
    _saveAnswer->_Write_b_eep
    _loadAnswer->_Read_b_eep
    _get_yes_no->_LCD_WriteCharAt
    _getBeep->_Delay_100ms
    _setExamTime->_LCD_WriteCharAt
    _setExamMCQ->_LCD_WriteCharAt
    _readKey->_Delay_100ms
    _LCD_WriteStringAt->_LCD_WriteChar
    _LCD_WriteStringAt->_LCD_WriteCommand
    _LCD_WriteCharAt->___awdiv
    _LCD_WriteCommand->_Delay_5ms
    _LCD_WriteChar->_Delay_5ms

Critical Paths under _INTERRUPT_SERVICE_ROUTING in COMRAM

    _INTERRUPT_SERVICE_ROUTING->i2_LCD_WriteCharAt
    i2_LCD_WriteStringAt->i2_LCD_WriteChar
    i2_LCD_WriteStringAt->i2_LCD_WriteCommand
    i2_LCD_WriteCharAt->i2___awdiv
    i2_LCD_WriteCommand->i2_Delay_5ms
    i2_LCD_WriteChar->i2_Delay_5ms

Critical Paths under _main in BANK0

    _examSetup->_startExam
    _startExam->_runPaper
    _runPaper->_subMenu
    _subMenu->_view_answers

Critical Paths under _INTERRUPT_SERVICE_ROUTING in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_examSetup
    _examSetup->_startExam

Critical Paths under _INTERRUPT_SERVICE_ROUTING in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_SERVICE_ROUTING in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_examSetup

Critical Paths under _INTERRUPT_SERVICE_ROUTING in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_SERVICE_ROUTING in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_SERVICE_ROUTING in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_SERVICE_ROUTING in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_SERVICE_ROUTING in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  163275
                          _examSetup
                   _initializeDevice
 ---------------------------------------------------------------------------------
 (1) _initializeDevice                                     2     2      0    1306
                                             34 COMRAM     2     2      0
                           _Busy_eep
                         _Delay_10ms
                   _LCD_WriteCommand
                        _Write_b_eep
                     _initialize_LCD
 ---------------------------------------------------------------------------------
 (2) _initialize_LCD                                       0     0      0     337
                          _Delay_1ms
                          _Delay_5ms
                          _Delay_5us
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _Delay_1ms                                            2     2      0      15
                                             29 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Delay_10ms                                           2     2      0      24
                                             29 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _examSetup                                          137   137      0  161969
                                             14 BANK1      2     2      0
                                              0 BANK3    135   135      0
                    _LCD_WriteCharAt
                   _LCD_WriteCommand
                  _LCD_WriteStringAt
                    _interruptConfig
                            _readKey
                         _setExamMCQ
                        _setExamTime
                          _startExam
 ---------------------------------------------------------------------------------
 (2) _startExam                                           15    15      0  103124
                                            130 BANK0      1     1      0
                                              0 BANK1     14    14      0
                   _LCD_WriteCommand
                  _LCD_WriteStringAt
                            _getBeep
                         _get_yes_no
                            _readKey
                           _runPaper
 ---------------------------------------------------------------------------------
 (3) _runPaper                                            40    40      0   80306
                                             90 BANK0     40    40      0
                       _Delay_1000ms
                        _Delay_100ms
                    _LCD_WriteCharAt
                   _LCD_WriteCommand
                  _LCD_WriteStringAt
                            ___awdiv
                            ___awmod
                         _get_yes_no
                    _interruptConfig
                         _loadAnswer
                            _readKey
                         _saveAnswer
                            _subMenu
 ---------------------------------------------------------------------------------
 (4) _subMenu                                             81    81      0   39903
                                              9 BANK0     81    81      0
                    _LCD_WriteCharAt
                   _LCD_WriteCommand
                  _LCD_WriteStringAt
                         _Read_b_eep
                            ___awdiv
                            ___awmod
                            _readKey
                       _view_answers
 ---------------------------------------------------------------------------------
 (5) _view_answers                                         9     5      4   17112
                                              0 BANK0      9     5      4
                    _LCD_WriteCharAt
                   _LCD_WriteCommand
                         _Read_b_eep
                            ___awdiv
                            ___awmod
                            _readKey
 ---------------------------------------------------------------------------------
 (4) _saveAnswer                                           7     3      4    1147
                                             34 COMRAM     7     3      4
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (2) _Write_b_eep                                          5     2      3     561
                                             29 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _loadAnswer                                           7     3      4    1233
                                             31 COMRAM     7     3      4
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (6) _Read_b_eep                                           2     0      2     801
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _interruptConfig                                      1     1      0      31
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _get_yes_no                                           3     3      0   15897
                                             42 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                        _Delay_100ms
                    _LCD_WriteCharAt
                  _LCD_WriteStringAt
                            _readKey
 ---------------------------------------------------------------------------------
 (4) _Delay_1000ms                                         4     4      0      74
                                             29 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _getBeep                                              2     0      2     216
                                             33 COMRAM     2     0      2
                        _Delay_100ms
 ---------------------------------------------------------------------------------
 (2) _setExamTime                                         47    47      0   21130
                                              0 BANK0     47    47      0
                    _LCD_WriteCharAt
                   _LCD_WriteCommand
                  _LCD_WriteStringAt
                            ___awdiv
                            ___awmod
                            _readKey
 ---------------------------------------------------------------------------------
 (2) _setExamMCQ                                          35    35      0   21084
                                             42 COMRAM     1     1      0
                                              0 BANK0     34    34      0
                    _LCD_WriteCharAt
                   _LCD_WriteCommand
                  _LCD_WriteStringAt
                            ___awdiv
                            ___awmod
                            _readKey
 ---------------------------------------------------------------------------------
 (6) _readKey                                              3     3      0     207
                                             33 COMRAM     3     3      0
                        _Delay_100ms
 ---------------------------------------------------------------------------------
 (7) _Delay_100ms                                          4     4      0      74
                                             29 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4    3079
                                             29 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4    1929
                                             29 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (5) _LCD_WriteStringAt                                    5     2      3    6167
                                             34 COMRAM     5     2      3
                      _LCD_WriteChar
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteCharAt                                      4     2      2    9325
                                             38 COMRAM     4     2      2
                      _LCD_WriteChar
                   _LCD_WriteCommand
                         _Read_b_eep (ARG)
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteCommand                                     3     3      0     285
                                             31 COMRAM     3     3      0
                          _Delay_5ms
                          _Delay_5us
 ---------------------------------------------------------------------------------
 (7) _LCD_WriteChar                                        3     3      0     285
                                             31 COMRAM     3     3      0
                          _Delay_5ms
                          _Delay_5us
 ---------------------------------------------------------------------------------
 (4) _Delay_5us                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Delay_5ms                                            2     2      0      37
                                             29 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_SERVICE_ROUTING                           16    16      0    3695
                                             13 COMRAM    16    16      0
                     i2_Delay_1000ms
                  i2_LCD_WriteCharAt
                 i2_LCD_WriteCommand
                i2_LCD_WriteStringAt
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) i2___awmod                                           7     3      4     504
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (10) i2___awdiv                                           9     5      4     456
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (10) i2_LCD_WriteStringAt                                 5     2      3    1043
                                              5 COMRAM     5     2      3
                    i2_LCD_WriteChar
                 i2_LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (10) i2_LCD_WriteCharAt                                   4     2      2    1359
                                              9 COMRAM     4     2      2
                    i2_LCD_WriteChar
                 i2_LCD_WriteCommand
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (11) i2_LCD_WriteCommand                                  3     3      0     285
                                              2 COMRAM     3     3      0
                        i2_Delay_5ms
                        i2_Delay_5us
 ---------------------------------------------------------------------------------
 (11) i2_LCD_WriteChar                                     3     3      0     285
                                              2 COMRAM     3     3      0
                        i2_Delay_5ms
                        i2_Delay_5us
 ---------------------------------------------------------------------------------
 (12) i2_Delay_5us                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_Delay_5ms                                         2     2      0      37
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) i2_Delay_1000ms                                      4     4      0      48
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _examSetup
     _LCD_WriteCharAt
       _LCD_WriteChar
         _Delay_5ms
         _Delay_5us
       _LCD_WriteCommand
         _Delay_5ms
         _Delay_5us
       _Read_b_eep (ARG)
       ___awdiv (ARG)
       ___awmod (ARG)
     _LCD_WriteCommand
       _Delay_5ms
       _Delay_5us
     _LCD_WriteStringAt
       _LCD_WriteChar
         _Delay_5ms
         _Delay_5us
       _LCD_WriteCommand
         _Delay_5ms
         _Delay_5us
     _interruptConfig
     _readKey
       _Delay_100ms
     _setExamMCQ
       _LCD_WriteCharAt
         _LCD_WriteChar
           _Delay_5ms
           _Delay_5us
         _LCD_WriteCommand
           _Delay_5ms
           _Delay_5us
         _Read_b_eep (ARG)
         ___awdiv (ARG)
         ___awmod (ARG)
       _LCD_WriteCommand
         _Delay_5ms
         _Delay_5us
       _LCD_WriteStringAt
         _LCD_WriteChar
           _Delay_5ms
           _Delay_5us
         _LCD_WriteCommand
           _Delay_5ms
           _Delay_5us
       ___awdiv
       ___awmod
       _readKey
         _Delay_100ms
     _setExamTime
       _LCD_WriteCharAt
         _LCD_WriteChar
           _Delay_5ms
           _Delay_5us
         _LCD_WriteCommand
           _Delay_5ms
           _Delay_5us
         _Read_b_eep (ARG)
         ___awdiv (ARG)
         ___awmod (ARG)
       _LCD_WriteCommand
         _Delay_5ms
         _Delay_5us
       _LCD_WriteStringAt
         _LCD_WriteChar
           _Delay_5ms
           _Delay_5us
         _LCD_WriteCommand
           _Delay_5ms
           _Delay_5us
       ___awdiv
       ___awmod
       _readKey
         _Delay_100ms
     _startExam
       _LCD_WriteCommand
         _Delay_5ms
         _Delay_5us
       _LCD_WriteStringAt
         _LCD_WriteChar
           _Delay_5ms
           _Delay_5us
         _LCD_WriteCommand
           _Delay_5ms
           _Delay_5us
       _getBeep
         _Delay_100ms
       _get_yes_no
         _Delay_100ms
         _LCD_WriteCharAt
           _LCD_WriteChar
             _Delay_5ms
             _Delay_5us
           _LCD_WriteCommand
             _Delay_5ms
             _Delay_5us
           _Read_b_eep (ARG)
           ___awdiv (ARG)
           ___awmod (ARG)
         _LCD_WriteStringAt
           _LCD_WriteChar
             _Delay_5ms
             _Delay_5us
           _LCD_WriteCommand
             _Delay_5ms
             _Delay_5us
         _readKey
           _Delay_100ms
       _readKey
         _Delay_100ms
       _runPaper
         _Delay_1000ms
         _Delay_100ms
         _LCD_WriteCharAt
           _LCD_WriteChar
             _Delay_5ms
             _Delay_5us
           _LCD_WriteCommand
             _Delay_5ms
             _Delay_5us
           _Read_b_eep (ARG)
           ___awdiv (ARG)
           ___awmod (ARG)
         _LCD_WriteCommand
           _Delay_5ms
           _Delay_5us
         _LCD_WriteStringAt
           _LCD_WriteChar
             _Delay_5ms
             _Delay_5us
           _LCD_WriteCommand
             _Delay_5ms
             _Delay_5us
         ___awdiv
         ___awmod
         _get_yes_no
           _Delay_100ms
           _LCD_WriteCharAt
             _LCD_WriteChar
               _Delay_5ms
               _Delay_5us
             _LCD_WriteCommand
               _Delay_5ms
               _Delay_5us
             _Read_b_eep (ARG)
             ___awdiv (ARG)
             ___awmod (ARG)
           _LCD_WriteStringAt
             _LCD_WriteChar
               _Delay_5ms
               _Delay_5us
             _LCD_WriteCommand
               _Delay_5ms
               _Delay_5us
           _readKey
             _Delay_100ms
         _interruptConfig
         _loadAnswer
           _Read_b_eep
         _readKey
           _Delay_100ms
         _saveAnswer
           _Busy_eep
           _Write_b_eep
         _subMenu
           _LCD_WriteCharAt
             _LCD_WriteChar
               _Delay_5ms
               _Delay_5us
             _LCD_WriteCommand
               _Delay_5ms
               _Delay_5us
             _Read_b_eep (ARG)
             ___awdiv (ARG)
             ___awmod (ARG)
           _LCD_WriteCommand
             _Delay_5ms
             _Delay_5us
           _LCD_WriteStringAt
             _LCD_WriteChar
               _Delay_5ms
               _Delay_5us
             _LCD_WriteCommand
               _Delay_5ms
               _Delay_5us
           _Read_b_eep
           ___awdiv
           ___awmod
           _readKey
             _Delay_100ms
           _view_answers
             _LCD_WriteCharAt
               _LCD_WriteChar
                 _Delay_5ms
                 _Delay_5us
               _LCD_WriteCommand
                 _Delay_5ms
                 _Delay_5us
               _Read_b_eep (ARG)
               ___awdiv (ARG)
               ___awmod (ARG)
             _LCD_WriteCommand
               _Delay_5ms
               _Delay_5us
             _Read_b_eep
             ___awdiv
             ___awmod
             _readKey
               _Delay_100ms
   _initializeDevice
     _Busy_eep
     _Delay_10ms
     _LCD_WriteCommand
       _Delay_5ms
       _Delay_5us
     _Write_b_eep
     _initialize_LCD
       _Delay_1ms
       _Delay_5ms
       _Delay_5us
       _LCD_WriteCommand
         _Delay_5ms
         _Delay_5us

 _INTERRUPT_SERVICE_ROUTING (ROOT)
   i2_Delay_1000ms
   i2_LCD_WriteCharAt
     i2_LCD_WriteChar
       i2_Delay_5ms
       i2_Delay_5us
     i2_LCD_WriteCommand
       i2_Delay_5ms
       i2_Delay_5us
     i2___awdiv (ARG)
     i2___awmod (ARG)
   i2_LCD_WriteCommand
     i2_Delay_5ms
     i2_Delay_5us
   i2_LCD_WriteStringAt
     i2_LCD_WriteChar
       i2_Delay_5ms
       i2_Delay_5us
     i2_LCD_WriteCommand
       i2_Delay_5ms
       i2_Delay_5us
   i2___awdiv
   i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     87      87      11       52.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      ED       9       92.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     10      86       7       52.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     83      A0       5      100.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     2B      42       1       69.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2DC      20        0.0%
DATA                 0      0     2DC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Thu May 29 15:57:03 2014

                     Delay_100ms@r0 001E                       Delay_100ms@r1 0020  
                      ___awdiv@sign 0024                   ??_LCD_WriteCharAt 0029  
                      __CFG_CP0$OFF 000000                        __CFG_CP1$OFF 000000  
                      __CFG_CP2$OFF 000000                        __CFG_CP3$OFF 000000  
                               l405 2EF6                                 l521 2E32  
                               l450 24D0                                 l435 2C58  
                               l285 27C2                                 l472 2876  
                               l476 28DA                                 l477 28FA  
                               l494 2FFE                                 l399 0DF4  
                      __CFG_CPB$OFF 000000                                 _PR2 000FCB  
                      __CFG_CPD$OFF 000000                        __CFG_BOR$OFF 000000  
           __end_of_interruptConfig 2FE4                __size_of_Write_b_eep 003C  
                      ___awmod@sign 0024                                 wreg 000FE8  
                      __CFG_FOSC$HS 000000                     readKey@row_cntr 0024  
                 ?_LCD_WriteCommand 0001                        __CFG_LVP$OFF 000000  
                ??_LCD_WriteCommand 0020                        __CFG_WDT$OFF 000000  
                              l5000 262E                                l2272 2F02  
                              l5010 264E                                l5002 2632  
                              l2274 2F04                                l4036 2F40  
                              l5014 2658                                l5030 2928  
                              l4038 2F44                                l5040 295E  
                              l5120 0C58                                l5018 2666  
                              l5042 2962                                l5050 2980  
                              l5034 2944                                l5210 2E92  
                              l5060 2A3A                                l5220 2412  
                              l5132 0CA6                                l5108 0B20  
                              l5300 0F8C                                l5062 2A40  
                              l5070 2A54                                l5054 298E  
                              l5046 2976                                l5038 2956  
                              l5206 2E84                                l5214 2EA0  
                              l5230 247C                                l5134 0CC4  
                              l5310 0FD2                                l5302 0F94  
                              l5064 2A46                                l5072 2A6E  
                              l5208 2E8E                                l5320 1010  
                              l5074 2A76                                l5066 2A4C  
                              l5162 0D46                                l5154 0D22  
                              l5146 0CFE                                l5082 089C  
                              l5410 1354                                l5236 24B8  
                              l5180 0DBC                                l5078 2A9E  
                              l5246 24CE                                l5174 0DA4  
                              l5182 0DC4                                l5414 137E  
                              l5168 0D6A                                l5096 09E4  
                              l5336 1142                                l5352 119E  
                              l5432 1430                                l5416 139C  
                              l5408 1336                                l5178 0DB0  
                              l5290 0F38                                l5442 14B4  
                              l5426 13D0                                l5434 1454  
                              l4900 2E58                                l5612 17F0  
                              l5356 11B4                                l5364 1216  
                              l5292 0F40                                l5268 0E4E  
                              l5460 1544                                l5444 14D8  
                              l4910 2D7E                                l4902 2E5C  
                              l5614 1816                                l5606 17CA  
                              l5358 11E6                                l4760 2F7C  
                              l4912 2D84                                l4920 2D98  
                              l5632 18D4                                l5480 15AE  
                              l5472 1580                                l5464 1558  
                              l5392 126C                                l4914 2D8A  
                              l4922 2DB2                                l4906 2E6C  
                              l5634 18FA                                l5626 18AE  
                              l5618 1822                                l5394 127A  
                              l4916 2D90                                l5652 2322  
                              l5476 1594                                l5468 156C  
                              l5484 15CA                                l4758 2F78  
                              l4926 2864                                l5670 23B8  
                              l5672 23C6                                l5664 2396  
                              l5906 1A20                                l4964 28EE  
                              l5908 1A2A                                l5598 177A  
                              l5686 2762                                l5926 1B14  
                              l4992 260C                                l5944 1B8C  
                              l5936 1B68                                l5928 1B1C  
                              l4986 25EC                                l4898 2E4E  
                              l5938 1B70                                l5948 1B9E  
                              l4998 2626                                STR_1 0828  
                              STR_2 0838                                STR_3 0877  
                              STR_4 0816                                STR_5 0847  
                              STR_6 0884                                STR_7 0856  
                              STR_8 0887                                STR_9 0880  
                              u4005 1E4C                                u4015 1F3E  
                              u4025 1F58                                u4035 1F7C  
                              u5101 167A                                u5201 22DA  
                              u4330 2A96                                u4340 2ABE  
                              u4337 2A8C                                u5081 1656  
                              u5401 1976                                u4347 2AB4  
                              u5091 1668                                u5251 272A  
                              u5411 1988                                u4701 0E46  
                              u5421 199A                                u5191 22C8  
                              u4535 0D98                                u4625 2FE0  
                              u5361 192E                                _MODE 003D  
                              u4626 2FE2                                u5371 1940  
                              u4901 1258                                u5381 1952  
                              u4671 0E10                                u5391 1964  
                              u4825 1186                                u4681 0E22  
                              u4595 2E3E                                u4691 0E34  
                              u4596 2E40                                u3985 1E0E  
                              u3995 1E28                                u4891 1246  
                  ??_initialize_LCD 0023                      examSetup@F5360 027E  
                    examSetup@F5352 0200                      examSetup@F5354 0215  
                    examSetup@F5362 0123                      examSetup@F5356 022A  
                    examSetup@F5364 0100                      examSetup@F5358 0112  
                        _Delay_10ms 2F36                                _main 2FF2  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              indf0 000FEF                                fsr0l 000FE9  
                              fsr2h 000FDA                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                              pclat 000FFA                                prodh 000FF4  
                              prodl 000FF3                                start 0018  
                     __CFG_IESO$OFF 000000                       _LCD_WriteChar 1F2E  
                     __CFG_MCLRE$ON 000000                        runPaper@txt1 00BE  
                      runPaper@txt2 00D0                      __CFG_CCP2MX$ON 000000  
                             ?_main 0001                     __end_of___awdiv 2670  
                             _EEADR 000FA9                               STR_10 086E  
                             STR_11 0801                               STR_12 0863  
                   __end_of___awmod 2998                     ___awdiv@divisor 0020  
                             _T2CON 000FCA            __size_ofi2_LCD_WriteChar 0130  
                             i2l489 1DC4                     ___awdiv@counter 0023  
                       _Delay_100ms 2E44                               _PORTB 000F81  
                             _TRISB 000F93                       __CFG_PWRT$OFF 000000  
                   __end_of_getBeep 2EF8                       __CFG_WRT0$OFF 000000  
                     __CFG_WRT1$OFF 000000                       __CFG_WRT2$OFF 000000  
                     __CFG_WRT3$OFF 000000                      __CFG_EBTR0$OFF 000000  
                    __CFG_FCMEN$OFF 000000                      __CFG_EBTR1$OFF 000000  
                    __CFG_EBTR2$OFF 000000                      __CFG_EBTR3$OFF 000000  
                 _LCD_WriteStringAt 2A34                       __CFG_WRTB$OFF 000000  
                     __CFG_WRTC$OFF 000000                       __CFG_WRTD$OFF 000000  
                    Read_b_eep@badd 001E                      __CFG_EBTRB$OFF 000000  
               i2LCD_WriteChar@data 0005              Write_b_eep@GIE_BIT_VAL 0022  
                   __end_of_readKey 28FC                               _hours 003E  
                ?_LCD_WriteStringAt 0023                      __pbitbssCOMRAM 0210  
                             tablat 000FF5                     __end_of_subMenu 122A  
                             status 000FD8                 ??_LCD_WriteStringAt 0026  
                __size_ofi2___awdiv 00B0                  __size_ofi2___awmod 009C  
        __size_ofi2_LCD_WriteCharAt 0048                      ?_LCD_WriteChar 0001  
             __size_of_Delay_1000ms 002E                     __initialization 27C4  
                     runPaper@F5380 02B7                       runPaper@F5382 0166  
                      __end_of_main 2FFE                          _Read_b_eep 2FC2  
                  __end_of_Busy_eep 3004                  __size_of_Delay_1ms 0020  
                __size_of_Delay_5ms 001C                  __size_of_Delay_5us 001C  
                      ?_setExamTime 0001                              ??_main 002C  
                     __activetblptr 000002           __end_of_LCD_WriteStringAt 2AC6  
                  ?_interruptConfig 0001                LCD_WriteStringAt@row 0026  
                            _EEDATA 000FA8                              _EECON2 000FA7  
                  ___awdiv@dividend 001E                   ?_initializeDevice 0001  
                            i2l4502 2708                              i2l4506 2716  
                            i2l4530 29FE                              i2l4522 29E0  
                            i2l4460 2EC0                              i2l6124 1D60  
                            i2l6108 1C3C                              i2l4542 2A2A  
                            i2l4534 2A12                              i2l4526 29F2  
                            i2l4518 29C4                              i2l4456 2EB2  
                            i2l4464 2ECE                              i2l5504 2FB0  
                            i2l4480 26BC                              i2l4528 29FA  
                      _Delay_1000ms 2E7A                              i2l4458 2EBC  
                            i2l5506 2FB4                              i2l4490 26E2  
                            i2l4474 269C                              i2l4538 2A1C  
                            i2l4486 26D6                              i2l4488 26DE  
                            i2l4498 26FE                         ?_Delay_10ms 0001  
                            i2l5960 2DD2                              i2l5962 2DD8  
                            i2l5956 2DC6                              i2l5972 2ACC  
                            i2l5958 2DCC                              i2l5966 2DE0  
                            i2l5990 2B30                              i2l5974 2AD2  
                            i2l5982 2AE6                              i2l5968 2DFA  
                            i2l5976 2AD8                              i2l5984 2B00  
                            i2l5986 2B08                              i2l5978 2ADE  
                            _MCQCnt 00FD                  ??_initializeDevice 0023  
           __size_ofi2_Delay_1000ms 002E                        ?i2_Delay_5ms 0001  
                      ?i2_Delay_5us 0001           initializeDevice@addrs_cnt 0024  
                    __CFG_XINST$OFF 000000                           ??___awdiv 0022  
                    __CFG_STVREN$ON 000000                           ??___awmod 0022  
              i2LCD_WriteCharAt@chr 000B                       view_answers@i 0060  
                     view_answers@j 0062                       view_answers@p 0067  
              i2LCD_WriteCharAt@row 000C                              _minCnt 00FF  
       __end_ofi2_LCD_WriteStringAt 2B58                              clear_0 27D0  
                  ___awdiv@quotient 0025                     ___awmod@divisor 0020  
                         ??_getBeep 0024                      loadAnswer@flag 0022  
                   ___awmod@counter 0023                      i2___awdiv@sign 0007  
                         ??_readKey 0022                        __pdataCOMRAM 002C  
                 __end_ofi2___awdiv 2720                   __end_ofi2___awmod 2A34  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                  __end_of_runPaper 164C                           ??_subMenu 0069  
                    i2___awmod@sign 0007                   ??i2_LCD_WriteChar 0003  
                 __end_of_Delay_1ms 2F18                   __end_of_Delay_5ms 2F8A  
                 __end_of_Delay_5us 2F6E                          __accesstop 0060  
           __end_of__initialization 2856                     __CFG_PBADEN$OFF 000000  
                   ??_LCD_WriteChar 0020                     _LCD_WriteCharAt 2D78  
               examSetup@menuNumber 0386         __size_ofi2_LCD_WriteCommand 0130  
                    __pcstackCOMRAM 0001                        __pidataBANK0 2F18  
                      __pidataBANK1 2C5A                        __pidataBANK2 24D2  
                       ?_Read_b_eep 001E                     setExamMCQ@F5372 02C9  
                   setExamMCQ@F5374 0156                 __size_of_Delay_10ms 001C  
        __size_of_LCD_WriteStringAt 0092                          __pbssBANK1 0185  
         i2LCD_WriteCharAt@location 000D                  __size_of_examSetup 02A2  
                         ?_Busy_eep 0001           __size_of_LCD_WriteCommand 0130  
                     saveAnswer@ans 0023               LCD_WriteStringAt@data 0027  
                     ??_Write_b_eep 0021                        ?_Delay_100ms 0001  
              __size_of_setExamTime 02C2                  __size_of_startExam 00A4  
                        _get_yes_no 23DA                       startExam@txt1 0175  
           __end_of_LCD_WriteCharAt 2DC0             LCD_WriteStringAt@column 0023  
                     i2Delay_5ms@r0 0001                 __size_of_Read_b_eep 0012  
                        ??_Busy_eep 001E                   saveAnswer@qNumber 0029  
           LCD_WriteStringAt@string 0024                      i2_Delay_1000ms 2EA8  
                           __Hparam 0000                          _loadAnswer 2D2A  
                           __Lparam 0000                __size_ofi2_Delay_5ms 001C  
              __size_ofi2_Delay_5us 001C                   LCD_WriteChar@data 0022  
                         ?_runPaper 0001                             ___awdiv 25C0  
                           ___awmod 28FC                        __psmallconst 0800  
                           __pcinit 27C4                             _getBeep 2ED6  
                 __end_of_examSetup 1BB0                             __ramtop 0800  
                           __ptext0 2FF2                             __ptext1 2BDA  
                           __ptext2 2B58                             __ptext3 2EF8  
                           __ptext4 2F36                             __ptext5 190E  
                           __ptext6 2720                             __ptext7 122A  
                           __ptext8 0DF6                             __ptext9 088C  
                           _readKey 2860                             _hourCnt 00FE  
                  ___awmod@dividend 001E                             _minutes 003F  
                           _seconds 0040                             _subMenu 0DF6  
               __end_of_Write_b_eep 2E44                          getBeep@cnt 0022  
                        _setExamMCQ 22BE                          _saveAnswer 2CD0  
                    __pintcode_body 1BB0                end_of_initialization 2856  
                      ??_Delay_10ms 001E              __end_ofi2_Delay_1000ms 2ED6  
                   setExamTime@txt1 0062                       __Lmediumconst 0000  
                           int_func 1BB0                         subMenu@txt0 0091  
                       subMenu@txt1 006C                         subMenu@txt2 00A2  
                       subMenu@txt3 007F             __size_of_initialize_LCD 0082  
                           postdec1 000FE5                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
                        ??_runPaper 00BA                   __end_of_startExam 27C4  
         __size_of_initializeDevice 0080                   runPaper@ansBuffer 00E0  
                   i2_LCD_WriteChar 218E               LCD_WriteCharAt@column 0027  
                         _PORTDbits 000F83              get_yes_no@lcd_location 002B  
                __end_of_Delay_10ms 2F52                           _TRISDbits 000F95  
                       ?_get_yes_no 0001                           i2___awdiv 2670  
                         i2___awmod 2998                    ?_LCD_WriteCharAt 0027  
          __size_of_interruptConfig 0010                     ?i2_Delay_1000ms 0001  
                     ?_view_answers 0060                        Delay_10ms@r0 001E  
                i2___awdiv@dividend 0001                           _Delay_1ms 2EF8  
                         _Delay_5ms 2F6E                           _Delay_5us 2F52  
                       ?_loadAnswer 0020                    _LCD_WriteCommand 1DFE  
                     examSetup@txt0 0371                       examSetup@txt1 0300  
                     examSetup@txt2 0315                       examSetup@txt4 034F  
                     examSetup@txt5 032A                       examSetup@txt6 0360  
                     examSetup@txt7 033D             i2LCD_WriteStringAt@data 000A  
__size_of_INTERRUPT_SERVICE_ROUTING 1DF6                        ??_Read_b_eep 0020  
        ?_INTERRUPT_SERVICE_ROUTING 0001                       __pidataCOMRAM 2FE4  
                       _Write_b_eep 2E08               i2LCD_WriteCommand@cmd 0005  
               start_initialization 27C4                  i2___awdiv@quotient 0008  
      __size_ofi2_LCD_WriteStringAt 0092               get_yes_no@user_option 0210  
              __size_of_Delay_100ms 0036                          ?i2___awdiv 0001  
                       ?_setExamMCQ 0001                          ?i2___awmod 0001  
                       ?_saveAnswer 0023                      ??_view_answers 0064  
                __end_of_Read_b_eep 2FD4          __end_ofi2_LCD_WriteCommand 218E  
                        ?_Delay_1ms 0001                          ?_Delay_5ms 0001  
                        ?_Delay_5us 0001                   __size_of_Busy_eep 0006  
                        readKey@key 0023               __end_of_LCD_WriteChar 205E  
           __end_ofi2_LCD_WriteChar 22BE                    setExamMCQ@txt1_1 0060  
                  setExamMCQ@txt1_2 0072                       loadAnswer@ans 0020  
               __size_of_get_yes_no 00F8                         __pdataBANK0 00E3  
                       __pdataBANK1 0100                         __pdataBANK2 0200  
                  __CFG_LPT1OSC$OFF 000000   __end_of_INTERRUPT_SERVICE_ROUTING 1DFE  
                       __pbssCOMRAM 003A                       __pcstackBANK0 0060  
                     __pcstackBANK1 0175                       __pcstackBANK3 0300  
               __size_of_loadAnswer 004E                 __end_of__stringdata 088A  
                 ??_interruptConfig 001E                      _initialize_LCD 2B58  
                         __pintcode 0008                      saveAnswer@flag 0025  
                          ?___awdiv 001E                            ?___awmod 001E  
                  _initializeDevice 2BDA             i2LCD_WriteCharAt@column 000A  
               __size_of_setExamMCQ 011C                 __size_of_saveAnswer 005A  
                 __size_of_runPaper 0422                            ?_getBeep 0022  
                     ??_setExamTime 0060                        _mili_seconds 003A  
                       __smallconst 0800                            ?_readKey 0001  
                         _examSetup 190E                         _GLOBLE_TMOD 003C  
                          ?_subMenu 0001                         ??i2___awdiv 0005  
                       ??i2___awmod 0005                       ?_Delay_1000ms 0001  
                     ??i2_Delay_5ms 0001                       _timeFrame_cnt 0041  
                     ??i2_Delay_5us 0001                            _PIE1bits 000F9D  
                       ??_Delay_1ms 001E                         ??_Delay_5ms 001E  
                       ??_Delay_5us 001E                      startExam@F5376 002C  
            __end_of_initialize_LCD 2BDA                            _PIR1bits 000F9E  
                          i2u530_45 20AC                            i2u531_45 219E  
                          i2u532_45 21B8                            i2u533_45 21DC  
                          i2u552_40 2B28                            i2u528_45 206E  
                          i2u552_47 2B1E                            i2u553_40 2B50  
                          i2u529_45 2088                            i2u553_47 2B46  
                  ?i2_LCD_WriteChar 0001                   loadAnswer@qNumber 0026  
         i2LCD_WriteStringAt@column 0006                __end_of_view_answers 0DF6  
                       __stringdata 0801                           _startExam 2720  
               LCD_WriteCommand@cmd 0022           i2LCD_WriteStringAt@string 0007  
                   Write_b_eep@badd 001E                     Write_b_eep@bdat 0020  
                        ?_examSetup 0001                   i2___awdiv@divisor 0003  
          __end_of_LCD_WriteCommand 1F2E                   i2___awdiv@counter 0006  
                  ??i2_Delay_1000ms 0001                 __end_of_setExamTime 190E  
            i2LCD_WriteStringAt@row 0009                        ??_get_yes_no 0060  
                       Delay_1ms@r0 001F                      ??_Delay_1000ms 001E  
                       Delay_5ms@r0 001E                           copy_data0 27EA  
                         copy_data1 280A                           copy_data2 282A  
                         copy_data3 284A                  i2___awmod@dividend 0001  
                powerOnScreen@F5420 0269                  powerOnScreen@F5416 023F  
                powerOnScreen@F5418 0254                            _Busy_eep 2FFE  
                        _EECON1bits 000FA6                     ?_initialize_LCD 0001  
                      ??_loadAnswer 0024                            __Hrparam 0000  
                 setExamTime@txt1_2 0075                   setExamTime@txt1_3 0082  
               i2_LCD_WriteStringAt 2AC6                            __Lrparam 0000  
               __end_ofi2_Delay_5ms 2FC2                 __end_ofi2_Delay_5us 2FA6  
                LCD_WriteCharAt@chr 0028                  LCD_WriteCharAt@row 0029  
                  __size_of___awdiv 00B0                    __size_of___awmod 009C  
       ??_INTERRUPT_SERVICE_ROUTING 000E                  __end_of_get_yes_no 24D2  
                      ?_Write_b_eep 001E                          ?_startExam 0001  
                  i2Delay_1000ms@r0 0002                    i2Delay_1000ms@r1 0004  
                  __size_of_getBeep 0022                    __size_of_readKey 009C  
              ?i2_LCD_WriteStringAt 0006                interruptConfig@state 001E  
                          __ptext10 2CD0                            __ptext11 2E08  
                          __ptext20 22BE                            __ptext12 2FFE  
                          __ptext21 2860                            __ptext13 2D2A  
                          __ptext30 2F6E                            __ptext22 2E44  
                          __ptext14 2FC2                            __ptext23 28FC  
                          __ptext15 2FD4                            __ptext40 2EA8  
                          __ptext32 2998                            __ptext24 25C0  
                          __ptext16 23DA                            __ptext33 2670  
                          __ptext25 2A34                            __ptext17 2E7A  
                          __ptext34 2AC6                            __ptext26 2D78  
                          __ptext18 2ED6                            __ptext35 2DC0  
                          __ptext27 1DFE                            __ptext19 164C  
                          __ptext36 205E                            __ptext28 1F2E  
                          __ptext37 218E                            __ptext29 2F52  
                          __ptext38 2F8A                            __ptext39 2FA6  
                __end_of_loadAnswer 2D78                    __size_of_subMenu 0434  
                      ??_setExamMCQ 002B                        ??_saveAnswer 0027  
                 subMenu@menuNumber 00B9                       __size_of_main 000C  
          __size_of_LCD_WriteCharAt 0048                           subMenu@lc 00B3  
                         subMenu@rc 00B7                    setExamTime@F5370 00F0  
                  setExamTime@F5366 0291                    setExamTime@F5368 00E3  
                          _runPaper 122A                  i2_LCD_WriteCommand 205E  
                __end_of_setExamMCQ 23DA                  __end_of_saveAnswer 2D2A  
                       _setExamTime 164C                       ??_Delay_100ms 001E  
                 i2___awmod@divisor 0003                   i2___awmod@counter 0006  
                        _INTCONbits 000FF2                         ??_examSetup 0183  
               ?i2_LCD_WriteCommand 0001               ??i2_LCD_WriteStringAt 0009  
                        _KEY_BUFFER 0185            __end_of_initializeDevice 2C5A  
                      subMenu@F5391 02DB                        subMenu@F5385 0134  
                      subMenu@F5387 02A4                        subMenu@F5389 0145  
         _INTERRUPT_SERVICE_ROUTING 0008                     _interruptConfig 2FD4  
                          intlevel2 0000                ??i2_LCD_WriteCommand 0003  
                       i2_Delay_5ms 2FA6                         i2_Delay_5us 2F8A  
                          subMenu@i 00B5                   i2_LCD_WriteCharAt 2DC0  
             __size_of_view_answers 056A                  ?i2_LCD_WriteCharAt 000A  
              __end_of_Delay_1000ms 2EA8             LCD_WriteCharAt@location 002A  
                       ??_startExam 00E2                 ??i2_LCD_WriteCharAt 000C  
                runPaper@qCount_tmp 00DF              __size_of_LCD_WriteChar 0130  
               __end_of_Delay_100ms 2E7A                      Delay_1000ms@r0 001F  
                    Delay_1000ms@r1 0021                        _view_answers 088C  
         __end_ofi2_LCD_WriteCharAt 2E08  
